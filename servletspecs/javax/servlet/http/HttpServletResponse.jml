/*
 * @(#)HttpServletResponse.jml
 *
 * @version $Id: HttpServletResponse.jml 775 2006-04-15 13:45:44Z alanm $
 *
 * Copyright (C) 2004 Iowa State University
 *
 * This file is part of JML.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA 02111-1307 USA
 */

package javax.servlet.http;

import java.io.IOException;

import javax.servlet.ServletResponse;

public interface HttpServletResponse extends ServletResponse
{
   public static final int SC_CONTINUE;
   public static final int SC_SWITCHING_PROTOCOLS;
   public static final int SC_OK;
   public static final int SC_CREATED;
   public static final int SC_ACCEPTED;
   public static final int SC_NON_AUTHORITATIVE_INFORMATION;
   public static final int SC_NO_CONTENT;
   public static final int SC_RESET_CONTENT;
   public static final int SC_PARTIAL_CONTENT;
   public static final int SC_MULTIPLE_CHOICES;
   public static final int SC_MOVED_PERMANENTLY;
   public static final int SC_MOVED_TEMPORARILY;
   public static final int SC_FOUND;
   public static final int SC_SEE_OTHER;
   public static final int SC_NOT_MODIFIED;
   public static final int SC_USE_PROXY;
   public static final int SC_TEMPORARY_REDIRECT;
   public static final int SC_BAD_REQUEST;
   public static final int SC_UNAUTHORIZED;
   public static final int SC_PAYMENT_REQUIRED;
   public static final int SC_FORBIDDEN;
   public static final int SC_NOT_FOUND;
   public static final int SC_METHOD_NOT_ALLOWED;
   public static final int SC_NOT_ACCEPTABLE;
   public static final int SC_PROXY_AUTHENTICATION_REQUIRED;
   public static final int SC_REQUEST_TIMEOUT;
   public static final int SC_CONFLICT;
   public static final int SC_GONE;
   public static final int SC_LENGTH_REQUIRED;
   public static final int SC_PRECONDITION_FAILED;
   public static final int SC_REQUEST_ENTITY_TOO_LARGE;
   public static final int SC_REQUEST_URI_TOO_LONG;
   public static final int SC_UNSUPPORTED_MEDIA_TYPE;
   public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE;
   public static final int SC_EXPECTATION_FAILED;
   public static final int SC_INTERNAL_SERVER_ERROR;
   public static final int SC_NOT_IMPLEMENTED;
   public static final int SC_BAD_GATEWAY;
   public static final int SC_SERVICE_UNAVAILABLE;
   public static final int SC_GATEWAY_TIMEOUT;
   public static final int SC_HTTP_VERSION_NOT_SUPPORTED;

   public void sendError(int arg) throws IOException;

   /*@
     @ requires
     @    sc == SC_OK || sc == SC_MOVED_TEMPORARILY;
    */
   public void setStatus(int sc);

   /*@
     @ requires
     @    sc != SC_OK && sc != SC_MOVED_TEMPORARILY;
    */
   public void sendError(int sc, /*@ non_null */ String sm) throws IOException;

   /*@
     @ requires
     @    sc == SC_OK || sc == SC_MOVED_TEMPORARILY;
    */
   public void setStatus(int sc, /*@ non_null */ String sm);

   public void sendRedirect(/*@ non_null */ String location) throws IOException;

   public /*@ pure */ boolean containsHeader(/*@ non_null */ String name);

   public void addIntHeader(/*@ non_null */ String name, int value);

   public void setIntHeader(/*@ non_null */ String name, int value);

   /*@
     @ requires
     @    date >= 0;
    */
   public void addDateHeader(/*@ non_null */ String name, long date);

   /*@
     @ requires
     @    date >= 0;
    */
   public void setDateHeader(/*@ non_null */ String name, long date);

   public void addCookie(/*@ non_null */ Cookie cookie);

   public String encodeRedirectURL(/*@ non_null */ String url);

   public String encodeRedirectUrl(/*@ non_null */ String url);

   public String encodeURL(/*@ non_null */ String url);

   public String encodeUrl(/*@ non_null */ String url);

   public void addHeader(/*@ non_null */ String name, /*@ non_null */ String value);

   public void setHeader(/*@ non_null */ String name, /*@ non_null */ String value);
}

