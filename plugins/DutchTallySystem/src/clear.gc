**** Guarded Command:
ASSUME boolAnd((\forall anytype brokenObj,  ls,  ls2,  e1,  e2,  n; boolAnd(boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc, alloc:131.60.15, e1, null)), 1)), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:131.60.15, alloc:131.64.22, e1, ls)), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), boolEq(refEQ(select(next:131.101.34, ls), null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), 1)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(next:131.101.34, ls), null)), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(select(next:131.101.34, ls)))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, ls), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(e1, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(e1, ls)), e1))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls, 0), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), integralLT(0, n), integralLT(n, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.289.19(ls, n), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(select(next:131.101.34, ls), integralSub(n, 1))))), is(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), \type(boolean)))), (\forall anytype brokenObj,  ls,  ls2,  e1,  e2,  n; boolAnd(boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc, alloc:131.60.15, e1, null)), 1)), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:131.60.15, alloc:131.64.22, e1, ls)), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), boolEq(refEQ(select(next:131.101.34, ls), null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), 1)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(next:131.101.34, ls), null)), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(select(next:131.101.34, ls)))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, ls), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(e1, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(e1, ls)), e1))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls, 0), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), integralLT(0, n), integralLT(n, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.289.19(ls, n), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(select(next:131.101.34, ls), integralSub(n, 1))))), is(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<1>,  i; boolAnd(integralLE(0, i), integralLT(i, org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<1>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.289.19(brokenObj<1>, i), \type(JMLType)))), (\forall anytype brokenObj<1>,  i; boolAnd(integralLE(0, i), integralLT(i, org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<1>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.289.19(brokenObj<1>, i), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<2>,  a_candidate_code; boolAnd(boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refNE(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), null)), boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refEQ(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<2>), java.lang.Integer.Integer.300.4(alloc:131.64.22, alloc:33.383.49, a_candidate_code)))), is(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), \type(Candidate)))), (\forall anytype brokenObj<2>,  a_candidate_code; boolAnd(boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refNE(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), null)), boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refEQ(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<2>), java.lang.Integer.Integer.300.4(alloc:131.64.22, alloc:33.383.49, a_candidate_code)))), is(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), \type(Candidate)))));
ASSUME boolAnd((\forall anytype brokenObj<3>,  a_candidate_code<1>; boolAnd(boolImplies(integralLE(0, a_candidate_code<1>), boolEq(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<3>), java.lang.Integer.Integer.300.4(alloc:33.383.49, alloc:33.400.57, a_candidate_code<1>)))), is(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), \type(boolean)))), (\forall anytype brokenObj<3>,  a_candidate_code<1>; boolAnd(boolImplies(integralLE(0, a_candidate_code<1>), boolEq(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<3>), java.lang.Integer.Integer.300.4(alloc:33.383.49, alloc:33.400.57, a_candidate_code<1>)))), is(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<4>,  key; boolAnd(boolImplies(refNE(key, null), boolEq(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), (\exists Map.Entry e:167.118.32; boolAnd(is(e:167.118.32, \type(Map.Entry)), isAllocated(e:167.118.32, alloc), refNE(e:167.118.32, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.118.32), refNE(e:167.118.32, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.118.32), key))))), is(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), \type(boolean)))), (\forall anytype brokenObj<4>,  key; boolAnd(boolImplies(refNE(key, null), boolEq(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), (\exists Map.Entry e:167.118.32; boolAnd(is(e:167.118.32, \type(Map.Entry)), isAllocated(e:167.118.32, alloc), refNE(e:167.118.32, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.118.32), refNE(e:167.118.32, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.118.32), key))))), is(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<5>; boolAnd(integralEQ(java.lang.String.length.225.4(brokenObj<5>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(java.lang.String#stringSeq(state, this))), is(java.lang.String.length.225.4(brokenObj<5>), \type(int)))), (\forall anytype brokenObj<5>; boolAnd(integralEQ(java.lang.String.length.225.4(brokenObj<5>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(java.lang.String#stringSeq(state, this))), is(java.lang.String.length.225.4(brokenObj<5>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<6>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<6>), null), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), select(val:131.97.25, brokenObj<6>)))), boolImplies(refEQ(select(val:131.97.25, brokenObj<6>), null), refEQ(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null)), is(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), \type(JMLType)))), (\forall anytype brokenObj<6>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<6>), null), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), select(val:131.97.25, brokenObj<6>)))), boolImplies(refEQ(select(val:131.97.25, brokenObj<6>), null), refEQ(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null)), is(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<7>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<7>)), is(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), \type(bigint)))), (\forall anytype brokenObj<7>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<7>)), is(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), \type(bigint)))));
ASSUME boolAnd((\forall anytype brokenObj<8>,  ob2; boolAnd(boolImplies(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), boolAnd(refNE(ob2, null), (* ob2 is not distinguishable from this,
                          except by using mutation or == *))), is(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), \type(boolean)))), (\forall anytype brokenObj<8>,  ob2; boolAnd(boolImplies(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), boolAnd(refNE(ob2, null), (* ob2 is not distinguishable from this,
                          except by using mutation or == *))), is(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<9>,  elem; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem))), is(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem), \type(boolean)))), (\forall anytype brokenObj<9>,  elem; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem))), is(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<10>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<10>)), is(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), \type(int)))), (\forall anytype brokenObj<10>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<10>)), is(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), \type(int)))));
ASSUME boolAnd((\forall anytype o1,  o2; boolAnd(boolEq(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), termConditional(refEQ(o1, null), refEQ(o2, null), java.lang.Object.equals.89.4(state, o1, o2))), is(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), \type(boolean)))), (\forall anytype o1,  o2; boolAnd(boolEq(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), termConditional(refEQ(o1, null), refEQ(o2, null), java.lang.Object.equals.89.4(state, o1, o2))), is(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<11>,  obj; boolAnd(boolImplies(refEQ(brokenObj<11>, obj), java.lang.Object.equals.89.4(state, brokenObj<11>, obj)), boolImplies(boolAnd(refNE(obj, null), typeEQ(\typeof(brokenObj<11>), \type(Object))), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), refEQ(brokenObj<11>, obj))), boolImplies(refEQ(obj, null), boolNot(java.lang.Object.equals.89.4(state, brokenObj<11>, obj))), boolImplies(refNE(obj, null), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), java.lang.Object.equals.89.4(state, obj, brokenObj<11>))), is(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), \type(boolean)))), (\forall anytype brokenObj<11>,  obj; boolAnd(boolImplies(refEQ(brokenObj<11>, obj), java.lang.Object.equals.89.4(state, brokenObj<11>, obj)), boolImplies(boolAnd(refNE(obj, null), typeEQ(\typeof(brokenObj<11>), \type(Object))), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), refEQ(brokenObj<11>, obj))), boolImplies(refEQ(obj, null), boolNot(java.lang.Object.equals.89.4(state, brokenObj<11>, obj))), boolImplies(refNE(obj, null), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), java.lang.Object.equals.89.4(state, obj, brokenObj<11>))), is(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<12>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), (\forall Object e:181.447.47; boolImplies(boolAnd(is(e:181.447.47, \type(Object)), isAllocated(e:181.447.47, alloc), refNE(e:181.447.47, null)), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<12>, e:181.447.47))))), boolEq(refEQ(select(the_list:181.166.38, brokenObj<12>), null), org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>)), is(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), \type(boolean)))), (\forall anytype brokenObj<12>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), (\forall Object e:181.447.47; boolImplies(boolAnd(is(e:181.447.47, \type(Object)), isAllocated(e:181.447.47, alloc), refNE(e:181.447.47, null)), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<12>, e:181.447.47))))), boolEq(refEQ(select(the_list:181.166.38, brokenObj<12>), null), org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>)), is(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<13>,  key<1>; boolAnd(boolImplies(boolNot(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>)), refEQ(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), null)), boolImplies(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>), (\exists Entry e:167.140.34; boolAnd(is(e:167.140.34, \type(Entry)), isAllocated(e:167.140.34, alloc), refNE(e:167.140.34, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.140.34), refNE(e:167.140.34, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.140.34), key<1>), java.lang.Object.equals.89.4(state, java.util.Map.get.134.4(state, brokenObj<13>, key<1>), java.util.Map$Entry#abstractValue(state, e:167.140.34))))), is(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), \type(java.lang.Object)))), (\forall anytype brokenObj<13>,  key<1>; boolAnd(boolImplies(boolNot(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>)), refEQ(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), null)), boolImplies(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>), (\exists Entry e:167.140.34; boolAnd(is(e:167.140.34, \type(Entry)), isAllocated(e:167.140.34, alloc), refNE(e:167.140.34, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.140.34), refNE(e:167.140.34, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.140.34), key<1>), java.lang.Object.equals.89.4(state, java.util.Map.get.134.4(state, brokenObj<13>, key<1>), java.util.Map$Entry#abstractValue(state, e:167.140.34))))), is(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), \type(java.lang.Object)))));
ASSUME boolAnd((\forall anytype brokenObj<14>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<14>), 0)), is(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), \type(boolean)))), (\forall anytype brokenObj<14>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<14>), 0)), is(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), \type(boolean)))));
ASSUME (\forall anytype brokenObj<15>; integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<15>), org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(select(_length:38.194.31, brokenObj<15>))));
ASSUME boolAnd((\forall anytype brokenObj<16>; is(org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<16>), \type(bigint))), (\forall anytype brokenObj<16>; is(org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<16>), \type(bigint))));
ASSUME boolAnd((\forall anytype s,  s2,  e1<1>,  e2<1>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:33.400.57, alloc:181.66.37), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), boolOr(refEQ(e2<1>, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), boolOr(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.66.37, alloc:181.77.19)), 0)), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>)), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 1)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), (\forall Object o:181.85.40; boolImplies(boolAnd(is(o:181.85.40, \type(Object)), isAllocated(o:181.85.40, alloc), refNE(o:181.85.40, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, o:181.85.40)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, o:181.85.40))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.77.19, alloc:181.91.19), e1<1>), org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.91.19, alloc:181.91.57))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), termConditional(refEQ(e2<1>, null), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), null)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), termConditional(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(s, s2), e1<1>), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(s), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 0))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc:181.91.57, alloc:181.122.17, e1<1>), org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.122.17, alloc:181.122.46), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2, s))), is(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), \type(boolean)))), (\forall anytype s,  s2,  e1<1>,  e2<1>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:33.400.57, alloc:181.66.37), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), boolOr(refEQ(e2<1>, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), boolOr(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.66.37, alloc:181.77.19)), 0)), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>)), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 1)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), (\forall Object o:181.85.40; boolImplies(boolAnd(is(o:181.85.40, \type(Object)), isAllocated(o:181.85.40, alloc), refNE(o:181.85.40, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, o:181.85.40)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, o:181.85.40))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.77.19, alloc:181.91.19), e1<1>), org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.91.19, alloc:181.91.57))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), termConditional(refEQ(e2<1>, null), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), null)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), termConditional(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(s, s2), e1<1>), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(s), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 0))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc:181.91.57, alloc:181.122.17, e1<1>), org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.122.17, alloc:181.122.46), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2, s))), is(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<17>,  s2<1>; boolAnd(boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null)), boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null), (\forall Object e:181.680.29; boolImplies(boolAnd(is(e:181.680.29, \type(Object)), isAllocated(e:181.680.29, alloc), refNE(e:181.680.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), e:181.680.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<17>, e:181.680.29), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<1>, e:181.680.29))))))), is(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<17>,  s2<1>; boolAnd(boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null)), boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null), (\forall Object e:181.680.29; boolImplies(boolAnd(is(e:181.680.29, \type(Object)), isAllocated(e:181.680.29, alloc), refNE(e:181.680.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), e:181.680.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<17>, e:181.680.29), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<1>, e:181.680.29))))))), is(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype alloc_,  allocNew_,  e; boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), e), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), 1), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), alloc_)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), allocNew_))), (\forall anytype alloc_,  allocNew_,  e; boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), e), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), 1), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), alloc_)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), allocNew_))));
ASSUME boolAnd((\forall anytype alloc_<1>,  allocNew_<1>; boolAnd(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), alloc_<1>)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), allocNew_<1>))), (\forall anytype alloc_<1>,  allocNew_<1>; boolAnd(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), alloc_<1>)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), allocNew_<1>))));
ASSUME boolAnd((\forall anytype brokenObj<18>,  s2<2>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), (\forall Object e:181.411.36; boolImplies(boolAnd(is(e:181.411.36, \type(Object)), isAllocated(e:181.411.36, alloc), refNE(e:181.411.36, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<18>, e:181.411.36), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, cast(s2<2>, \type(JMLEqualsSet)), e:181.411.36)))))), boolImplies(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), boolEq(select(containsNull:39.52.32, brokenObj<18>), select(containsNull:39.52.32, cast(s2<2>, \type(JMLEqualsSet)))))), is(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), \type(boolean)))), (\forall anytype brokenObj<18>,  s2<2>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), (\forall Object e:181.411.36; boolImplies(boolAnd(is(e:181.411.36, \type(Object)), isAllocated(e:181.411.36, alloc), refNE(e:181.411.36, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<18>, e:181.411.36), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, cast(s2<2>, \type(JMLEqualsSet)), e:181.411.36)))))), boolImplies(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), boolEq(select(containsNull:39.52.32, brokenObj<18>), select(containsNull:39.52.32, cast(s2<2>, \type(JMLEqualsSet)))))), is(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<19>; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), 0)), boolImplies(boolNot(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>)), (\exists Object e:181.463.36; boolAnd(is(e:181.463.36, \type(Object)), isAllocated(e:181.463.36, alloc), refNE(e:181.463.36, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<19>, e:181.463.36), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), integralAdd(1, org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<19>, e:181.463.36))))))), is(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), \type(int)))), (\forall anytype brokenObj<19>; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), 0)), boolImplies(boolNot(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>)), (\exists Object e:181.463.36; boolAnd(is(e:181.463.36, \type(Object)), isAllocated(e:181.463.36, alloc), refNE(e:181.463.36, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<19>, e:181.463.36), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), integralAdd(1, org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<19>, e:181.463.36))))))), is(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<20>,  s2<3>; boolAnd(boolImplies(boolAnd(refNE(s2<3>, null), refNE(s2<3>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2<3>, brokenObj<20>))), is(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), \type(boolean)))), (\forall anytype brokenObj<20>,  s2<3>; boolAnd(boolImplies(boolAnd(refNE(s2<3>, null), refNE(s2<3>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2<3>, brokenObj<20>))), is(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype i<1>; boolAnd(refNE(java.lang.Integer.toString.249.4(i<1>), null), java.lang.String.equals.320.4(state, java.lang.Integer.toString.249.4(i<1>), java.lang.Integer.toString.115.4(i<1>, 10)), is(java.lang.Integer.toString.249.4(i<1>), \type(java.lang.String)))), (\forall anytype i<1>; boolAnd(refNE(java.lang.Integer.toString.249.4(i<1>), null), java.lang.String.equals.320.4(state, java.lang.Integer.toString.249.4(i<1>), java.lang.Integer.toString.115.4(i<1>, 10)), is(java.lang.Integer.toString.249.4(i<1>), \type(java.lang.String)))));
ASSUME boolAnd((\forall anytype brokenObj<21>,  anObject; boolAnd(boolImplies(boolAnd(refNE(anObject, null), is(anObject, \type(String)), refNE(anObject, null)), boolEq(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, java.lang.String#stringSeq(state, this), java.lang.String#stringSeq(state, cast(anObject, \type(String)))))), boolImplies(refEQ(this, anObject), java.lang.String.equals.320.4(state, brokenObj<21>, anObject)), boolImplies(boolOr(refEQ(anObject, null), boolNot(boolAnd(is(anObject, \type(String)), refNE(anObject, null)))), boolNot(java.lang.String.equals.320.4(state, brokenObj<21>, anObject))), is(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), \type(boolean)))), (\forall anytype brokenObj<21>,  anObject; boolAnd(boolImplies(boolAnd(refNE(anObject, null), is(anObject, \type(String)), refNE(anObject, null)), boolEq(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, java.lang.String#stringSeq(state, this), java.lang.String#stringSeq(state, cast(anObject, \type(String)))))), boolImplies(refEQ(this, anObject), java.lang.String.equals.320.4(state, brokenObj<21>, anObject)), boolImplies(boolOr(refEQ(anObject, null), boolNot(boolAnd(is(anObject, \type(String)), refNE(anObject, null)))), boolNot(java.lang.String.equals.320.4(state, brokenObj<21>, anObject))), is(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<22>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>))), is(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), \type(int)))), (\forall anytype brokenObj<22>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>))), is(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<23>; is(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<23>), \type(bigint))), (\forall anytype brokenObj<23>; is(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<23>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<24>,  s<1>,  s2<4>,  e1<2>,  e2<2>,  n<1>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolNot(org.jmlspecs.models.JMLValueSequence.has.750.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:181.122.46, alloc:38.65.34), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.65.34, alloc:38.67.33)), 0)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.67.33, alloc:38.69.33, e1<2>)), 1)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.69.33, alloc:38.73.16, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>), org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>), integralAdd(n<1>, 1)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>), n<1>), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), (\forall int i:38.117.34; boolImplies(boolAnd(integralLE(0, i:38.117.34), integralLT(i:38.117.34, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34), null))))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<4>))), boolOr(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.73.16, alloc:38.137.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.137.14, alloc:38.138.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.138.25, alloc:38.141.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.141.14, alloc:38.142.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.142.25, alloc:38.145.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.145.14, alloc:38.146.25), integralNeg(1), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.146.25, alloc:38.149.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.149.14, alloc:38.150.25), 0, e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s<1>), org.jmlspecs.models.JMLValueSequence.first.1044.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(s<1>), org.jmlspecs.models.JMLValueSequence.last.1083.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s<1>, s2<4>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<4>, s<1>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<4>, s<1>))), is(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), \type(boolean)))), (\forall anytype brokenObj<24>,  s<1>,  s2<4>,  e1<2>,  e2<2>,  n<1>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolNot(org.jmlspecs.models.JMLValueSequence.has.750.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:181.122.46, alloc:38.65.34), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.65.34, alloc:38.67.33)), 0)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.67.33, alloc:38.69.33, e1<2>)), 1)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.69.33, alloc:38.73.16, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>), org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>), integralAdd(n<1>, 1)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>), n<1>), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), (\forall int i:38.117.34; boolImplies(boolAnd(integralLE(0, i:38.117.34), integralLT(i:38.117.34, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34), null))))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<4>))), boolOr(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.73.16, alloc:38.137.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.137.14, alloc:38.138.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.138.25, alloc:38.141.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.141.14, alloc:38.142.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.142.25, alloc:38.145.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.145.14, alloc:38.146.25), integralNeg(1), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.146.25, alloc:38.149.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.149.14, alloc:38.150.25), 0, e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s<1>), org.jmlspecs.models.JMLValueSequence.first.1044.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(s<1>), org.jmlspecs.models.JMLValueSequence.last.1083.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s<1>, s2<4>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<4>, s<1>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<4>, s<1>))), is(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<25>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<25>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), \type(int))))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), (* \result is like this, but without the last item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0)), is(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), \type(JMLValueSequence)))), (\forall anytype brokenObj<25>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<25>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), \type(int))))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), (* \result is like this, but without the last item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0)), is(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<26>; boolAnd(boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))))), boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), refEQ(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 0)), is(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), \type(JMLType)))), (\forall anytype brokenObj<26>; boolAnd(boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))))), boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), refEQ(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 0)), is(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<27>,  s2<5>; boolAnd(boolImplies(boolAnd(refNE(s2<5>, null), refNE(s2<5>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<27>, s2<5>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<27>, s2<5>))))), is(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), \type(boolean)))), (\forall anytype brokenObj<27>,  s2<5>; boolAnd(boolImplies(boolAnd(refNE(s2<5>, null), refNE(s2<5>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<27>, s2<5>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<27>, s2<5>))))), is(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<28>,  item; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), item))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), 1)), org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)))), is(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), \type(JMLValueSequence)))), (\forall anytype brokenObj<28>,  item; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), item))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), 1)), org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)))), is(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<29>,  s2<6>; boolAnd(boolImplies(boolAnd(refNE(s2<6>, null), refNE(s2<6>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<29>, s2<6>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<29>, s2<6>))))), is(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), \type(boolean)))), (\forall anytype brokenObj<29>,  s2<6>; boolAnd(boolImplies(boolAnd(refNE(s2<6>, null), refNE(s2<6>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<29>, s2<6>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<29>, s2<6>))))), is(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<30>; boolAnd(integralEQ(java.util.Map.size.102.4(state, brokenObj<30>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(java.util.Map#theMap(state, this))), is(java.util.Map.size.102.4(state, brokenObj<30>), \type(int)))), (\forall anytype brokenObj<30>; boolAnd(integralEQ(java.util.Map.size.102.4(state, brokenObj<30>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(java.util.Map#theMap(state, this))), is(java.util.Map.size.102.4(state, brokenObj<30>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<31>,  ls<1>,  ls2<1>,  e1<3>,  e2<3>,  n<2>; boolAnd(boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:38.150.25, alloc:185.60.15, e1<3>, null)), 1)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:185.60.15, alloc:185.64.22, e1<3>, ls<1>)), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), boolEq(refEQ(select(next:185.101.35, ls<1>), null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), 1)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(next:185.101.35, ls<1>), null)), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(select(next:185.101.35, ls<1>)))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, select(val:185.97.24, ls<1>), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(e1<3>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, e1<3>, ls<1>)), e1<3>))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls<1>, 0), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), integralLT(0, n<2>), integralLT(n<2>, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(ls<1>, n<2>), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(select(next:185.101.35, ls<1>), integralSub(n<2>, 1))))), is(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), \type(boolean)))), (\forall anytype brokenObj<31>,  ls<1>,  ls2<1>,  e1<3>,  e2<3>,  n<2>; boolAnd(boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:38.150.25, alloc:185.60.15, e1<3>, null)), 1)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:185.60.15, alloc:185.64.22, e1<3>, ls<1>)), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), boolEq(refEQ(select(next:185.101.35, ls<1>), null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), 1)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(next:185.101.35, ls<1>), null)), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(select(next:185.101.35, ls<1>)))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, select(val:185.97.24, ls<1>), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(e1<3>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, e1<3>, ls<1>)), e1<3>))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls<1>, 0), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), integralLT(0, n<2>), integralLT(n<2>, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(ls<1>, n<2>), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(select(next:185.101.35, ls<1>), integralSub(n<2>, 1))))), is(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<32>,  elem<1>; boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), (\forall Object e:181.651.29; boolImplies(boolAnd(is(e:181.651.29, \type(Object)), isAllocated(e:181.651.29, alloc), refNE(e:181.651.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), e:181.651.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, e:181.651.29), boolNot(boolOr(boolAnd(refEQ(e:181.651.29, null), refEQ(elem<1>, null)), boolAnd(refNE(e:181.651.29, null), java.lang.Object.equals.89.4(state, e:181.651.29, elem<1>)))))))), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), brokenObj<32>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), elem<1>)), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>)), integralSub(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<32>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, elem<1>), 1, 0))), is(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<32>,  elem<1>; boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), (\forall Object e:181.651.29; boolImplies(boolAnd(is(e:181.651.29, \type(Object)), isAllocated(e:181.651.29, alloc), refNE(e:181.651.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), e:181.651.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, e:181.651.29), boolNot(boolOr(boolAnd(refEQ(e:181.651.29, null), refEQ(elem<1>, null)), boolAnd(refNE(e:181.651.29, null), java.lang.Object.equals.89.4(state, e:181.651.29, elem<1>)))))))), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), brokenObj<32>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), elem<1>)), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>)), integralSub(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<32>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, elem<1>), 1, 0))), is(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype brokenObj<33>; is(org.jmlspecs.models.JMLValueSequence.length.623.26(brokenObj<33>), \type(bigint))), (\forall anytype brokenObj<33>; is(org.jmlspecs.models.JMLValueSequence.length.623.26(brokenObj<33>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<34>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<34>), null), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), select(val:185.97.24, brokenObj<34>)))), boolImplies(refEQ(select(val:185.97.24, brokenObj<34>), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null)), is(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), \type(Object)))), (\forall anytype brokenObj<34>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<34>), null), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), select(val:185.97.24, brokenObj<34>)))), boolImplies(refEQ(select(val:185.97.24, brokenObj<34>), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null)), is(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), \type(Object)))));
ASSUME boolAnd((\forall anytype brokenObj<35>,  index; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), boolImplies(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<35>, cast(integralAdd(index, 1), \type(int)))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)), is(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), \type(JMLValueSequence)))), (\forall anytype brokenObj<35>,  index; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), boolImplies(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<35>, cast(integralAdd(index, 1), \type(int)))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)), is(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<36>,  s2<7>; boolAnd(boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), refNE(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), null)), boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), (\forall int i:38.1574.32; boolImplies(boolAnd(integralLE(0, i:38.1574.32), integralLT(i:38.1574.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32), null))))), (\forall int i:38.1579.32; boolImplies(boolAnd(integralLE(0, i:38.1579.32), integralLT(i:38.1579.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32), null))))))), is(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), \type(JMLValueSequence)))), (\forall anytype brokenObj<36>,  s2<7>; boolAnd(boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), refNE(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), null)), boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), (\forall int i:38.1574.32; boolImplies(boolAnd(integralLE(0, i:38.1574.32), integralLT(i:38.1574.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32), null))))), (\forall int i:38.1579.32; boolImplies(boolAnd(integralLE(0, i:38.1579.32), integralLT(i:38.1579.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32), null))))))), is(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<37>,  n<3>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), boolImplies(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>)), n<3>), (\forall int i:38.1392.35; boolImplies(boolAnd(integralLE(0, i:38.1392.35), integralLT(i:38.1392.35, n<3>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), \type(JMLValueSequence)))), (\forall anytype brokenObj<37>,  n<3>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), boolImplies(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>)), n<3>), (\forall int i:38.1392.35; boolImplies(boolAnd(integralLE(0, i:38.1392.35), integralLT(i:38.1392.35, n<3>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype oBi; boolAnd(boolImplies(java.math.BigInteger.equals.250.4(state, oBi, ZERO:153..), integralEQ(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), cast(0, \type(bigint)))), is(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), \type(bigint)))), (\forall anytype oBi; boolAnd(boolImplies(java.math.BigInteger.equals.250.4(state, oBi, ZERO:153..), integralEQ(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), cast(0, \type(bigint)))), is(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), \type(bigint)))));
ASSUME boolAnd((\forall anytype brokenObj<38>,  x; is(java.math.BigInteger.equals.250.4(state, brokenObj<38>, x), \type(boolean))), (\forall anytype brokenObj<38>,  x; is(java.math.BigInteger.equals.250.4(state, brokenObj<38>, x), \type(boolean))));
ASSUME boolAnd((\forall anytype alloc_<2>,  allocNew_<2>,  e<1>; boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), 1), boolImplies(refEQ(e<1>, null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), null)), boolImplies(refNE(e<1>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), e<1>)), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), alloc_<2>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), allocNew_<2>))), (\forall anytype alloc_<2>,  allocNew_<2>,  e<1>; boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), 1), boolImplies(refEQ(e<1>, null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), null)), boolImplies(refNE(e<1>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), e<1>)), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), alloc_<2>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), allocNew_<2>))));
ASSUME boolAnd((\forall anytype brokenObj<39>,  s2<8>; boolAnd(boolImplies(boolAnd(refNE(s2<8>, null), refNE(s2<8>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), (\forall Object e:181.479.29; boolImplies(boolAnd(is(e:181.479.29, \type(Object)), isAllocated(e:181.479.29, alloc), refNE(e:181.479.29, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<39>, e:181.479.29)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<8>, e:181.479.29))))), is(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), \type(boolean)))), (\forall anytype brokenObj<39>,  s2<8>; boolAnd(boolImplies(boolAnd(refNE(s2<8>, null), refNE(s2<8>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), (\forall Object e:181.479.29; boolImplies(boolAnd(is(e:181.479.29, \type(Object)), isAllocated(e:181.479.29, alloc), refNE(e:181.479.29, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<39>, e:181.479.29)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<8>, e:181.479.29))))), is(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<40>,  a_candidate_code<2>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refNE(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), null)), boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refEQ(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<40>), java.lang.Integer.Integer.300.4(alloc:185.64.22, alloc:33.350.49, java.lang.Integer.parseInt.266.4(a_candidate_code<2>))))), is(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), \type(Candidate)))), (\forall anytype brokenObj<40>,  a_candidate_code<2>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refNE(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), null)), boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refEQ(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<40>), java.lang.Integer.Integer.300.4(alloc:185.64.22, alloc:33.350.49, java.lang.Integer.parseInt.266.4(a_candidate_code<2>))))), is(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), \type(Candidate)))));
ASSUME boolAnd((\forall anytype s<2>; boolAnd(boolImplies(java.lang.Integer.parseable.38.33(s<2>), integralEQ(java.lang.Integer.parseInt.266.4(s<2>), java.lang.Integer.parseInt.254.4(s<2>, 10))), java.lang.Integer.parseable.38.33(s<2>), is(java.lang.Integer.parseInt.266.4(s<2>), \type(int)))), (\forall anytype s<2>; boolAnd(boolImplies(java.lang.Integer.parseable.38.33(s<2>), integralEQ(java.lang.Integer.parseInt.266.4(s<2>), java.lang.Integer.parseInt.254.4(s<2>, 10))), java.lang.Integer.parseable.38.33(s<2>), is(java.lang.Integer.parseInt.266.4(s<2>), \type(int)))));
ASSUME boolAnd((\forall anytype s<3>; boolAnd(boolEq(java.lang.Integer.parseable.38.33(s<3>), java.lang.Integer.parseable.54.33(s<3>, 10)), is(java.lang.Integer.parseable.38.33(s<3>), \type(boolean)))), (\forall anytype s<3>; boolAnd(boolEq(java.lang.Integer.parseable.38.33(s<3>), java.lang.Integer.parseable.54.33(s<3>, 10)), is(java.lang.Integer.parseable.38.33(s<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype s<4>,  r; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.44.31; boolImplies(boolAnd(integralLE(0, i:117.44.31), integralLT(i:117.44.31, java.lang.String.length.225.4(s<4>))), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.44.31), r), integralNeg(1))))))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.51.31; boolImplies(boolAnd(integralLE(1, i:117.51.31), integralLT(i:117.51.31, java.lang.String.length.225.4(s<4>)), integralEQ(java.lang.String.charAt.233.4(s<4>, 0), '-')), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.51.31), r), integralNeg(1))))))), is(java.lang.Integer.parseable.54.33(s<4>, r), \type(boolean)))), (\forall anytype s<4>,  r; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.44.31; boolImplies(boolAnd(integralLE(0, i:117.44.31), integralLT(i:117.44.31, java.lang.String.length.225.4(s<4>))), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.44.31), r), integralNeg(1))))))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.51.31; boolImplies(boolAnd(integralLE(1, i:117.51.31), integralLT(i:117.51.31, java.lang.String.length.225.4(s<4>)), integralEQ(java.lang.String.charAt.233.4(s<4>, 0), '-')), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.51.31), r), integralNeg(1))))))), is(java.lang.Integer.parseable.54.33(s<4>, r), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<41>,  index<1>; boolAnd(boolImplies(boolAnd(integralLE(0, index<1>), integralLT(index<1>, java.lang.String.length.225.4(brokenObj<41>))), integralEQ(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), org.jmlspecs.models.JMLChar.charValue.115.4(cast(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(java.lang.String#stringSeq(state, this), index<1>), \type(JMLChar))))), boolNot(boolOr(integralLT(index<1>, 0), integralGE(index<1>, java.lang.String.length.225.4(this)))), is(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), \type(char)))), (\forall anytype brokenObj<41>,  index<1>; boolAnd(boolImplies(boolAnd(integralLE(0, index<1>), integralLT(index<1>, java.lang.String.length.225.4(brokenObj<41>))), integralEQ(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), org.jmlspecs.models.JMLChar.charValue.115.4(cast(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(java.lang.String#stringSeq(state, this), index<1>), \type(JMLChar))))), boolNot(boolOr(integralLT(index<1>, 0), integralGE(index<1>, java.lang.String.length.225.4(this)))), is(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), \type(char)))));
ASSUME boolAnd((\forall anytype brokenObj<42>; boolAnd(boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0))), boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), refEQ(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0)), is(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), \type(JMLType)))), (\forall anytype brokenObj<42>; boolAnd(boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0))), boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), refEQ(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0)), is(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<43>,  elem<2>; boolAnd(boolImplies(refNE(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.755.37; boolAnd(integralLE(0, i:38.755.37), integralLT(i:38.755.37, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.755.37), elem<2>))))), boolImplies(refEQ(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.760.38; boolAnd(integralLE(0, i:38.760.38), integralLT(i:38.760.38, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.760.38), null))))), is(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), \type(boolean)))), (\forall anytype brokenObj<43>,  elem<2>; boolAnd(boolImplies(refNE(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.755.37; boolAnd(integralLE(0, i:38.755.37), integralLT(i:38.755.37, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.755.37), elem<2>))))), boolImplies(refEQ(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.760.38; boolAnd(integralLE(0, i:38.760.38), integralLT(i:38.760.38, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.760.38), null))))), is(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype alloc_<3>,  allocNew_<3>,  item<1>,  nxt; boolAnd(boolImplies(refNE(item<1>, null), boolAnd(org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), item<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeLE(\typeof(item<1>), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt))), boolImplies(refNE(nxt, null), typeLE(select(elementType:131.109.27, nxt), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), boolImplies(refEQ(nxt, null), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \typeof(item<1>))), boolEq(select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), termConditional(refEQ(nxt, null), false, select(containsNull:131.124.29, nxt))))), boolImplies(refEQ(item<1>, null), boolAnd(refEQ(select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), null), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(JMLType)), select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), refNE(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), null), typeEQ(\typeof(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(org.jmlspecs.models.JMLListValueNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), alloc_<3>)), isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), allocNew_<3>))), (\forall anytype alloc_<3>,  allocNew_<3>,  item<1>,  nxt; boolAnd(boolImplies(refNE(item<1>, null), boolAnd(org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), item<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeLE(\typeof(item<1>), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt))), boolImplies(refNE(nxt, null), typeLE(select(elementType:131.109.27, nxt), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), boolImplies(refEQ(nxt, null), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \typeof(item<1>))), boolEq(select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), termConditional(refEQ(nxt, null), false, select(containsNull:131.124.29, nxt))))), boolImplies(refEQ(item<1>, null), boolAnd(refEQ(select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), null), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(JMLType)), select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), refNE(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), null), typeEQ(\typeof(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(org.jmlspecs.models.JMLListValueNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), alloc_<3>)), isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), allocNew_<3>))));
ASSUME boolAnd((\forall anytype brokenObj<44>,  s2<9>; boolAnd(boolImplies(boolAnd(refNE(s2<9>, null), refNE(s2<9>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<44>, s2<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<44>, s2<9>))))), is(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), \type(boolean)))), (\forall anytype brokenObj<44>,  s2<9>; boolAnd(boolImplies(boolAnd(refNE(s2<9>, null), refNE(s2<9>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<44>, s2<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<44>, s2<9>))))), is(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<45>,  a_candidate_code<3>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<3>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))), boolEq(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<45>), java.lang.Integer.Integer.300.4(alloc:33.350.49, alloc:33.367.57, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))))), is(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), \type(boolean)))), (\forall anytype brokenObj<45>,  a_candidate_code<3>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<3>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))), boolEq(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<45>), java.lang.Integer.Integer.300.4(alloc:33.350.49, alloc:33.367.57, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))))), is(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype hd,  tl; boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), null), org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), hd), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl)), tl), org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:33.367.57, alloc:185.200.34, hd, tl)), is(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), \type(JMLListEqualsNode)))), (\forall anytype hd,  tl; boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), null), org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), hd), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl)), tl), org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:33.367.57, alloc:185.200.34, hd, tl)), is(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), \type(JMLListEqualsNode)))));
ASSUME boolAnd((\forall anytype brokenObj<46>,  s2<10>; boolAnd(boolImplies(boolAnd(refNE(s2<10>, null), refNE(s2<10>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2<10>, brokenObj<46>))), is(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), \type(boolean)))), (\forall anytype brokenObj<46>,  s2<10>; boolAnd(boolImplies(boolAnd(refNE(s2<10>, null), refNE(s2<10>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2<10>, brokenObj<46>))), is(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<47>,  i<2>; boolAnd(boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>)), select(elementType:39.44.30, brokenObj<47>))), boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), boolNot(select(containsNull:39.52.32, brokenObj<47>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), \type(JMLType)))), (\forall anytype brokenObj<47>,  i<2>; boolAnd(boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>)), select(elementType:39.44.30, brokenObj<47>))), boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), boolNot(select(containsNull:39.52.32, brokenObj<47>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype alloc_<4>,  allocNew_<4>; boolAnd(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), 0), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), alloc_<4>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), allocNew_<4>))), (\forall anytype alloc_<4>,  allocNew_<4>; boolAnd(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), 0), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), alloc_<4>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), allocNew_<4>))));
ASSUME boolAnd(integralEQ(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), decryptNrOfVotes:36.195.40), is(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), \type(int)), integralEQ(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), decryptNrOfVotes:36.195.40), is(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), \type(int)));
ASSUME boolAnd((\forall anytype brokenObj<48>,  obj<1>; boolAnd(boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<48>, cast(obj<1>, \type(JMLValueSequence))), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(cast(obj<1>, \type(JMLValueSequence)), brokenObj<48>)))), boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>)), boolEq(select(containsNull:39.52.32, brokenObj<48>), select(containsNull:39.52.32, cast(obj<1>, \type(JMLValueSequence))))), boolImplies(boolOr(refEQ(obj<1>, null), boolNot(boolAnd(is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)))), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>))), is(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), \type(boolean)))), (\forall anytype brokenObj<48>,  obj<1>; boolAnd(boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<48>, cast(obj<1>, \type(JMLValueSequence))), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(cast(obj<1>, \type(JMLValueSequence)), brokenObj<48>)))), boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>)), boolEq(select(containsNull:39.52.32, brokenObj<48>), select(containsNull:39.52.32, cast(obj<1>, \type(JMLValueSequence))))), boolImplies(boolOr(refEQ(obj<1>, null), boolNot(boolAnd(is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)))), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>))), is(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<49>,  afterThisOne,  item<2>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<49>, cast(integralAdd(afterThisOne, 1), \type(int)), item<2>))), integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), \type(JMLValueSequence)))), (\forall anytype brokenObj<49>,  afterThisOne,  item<2>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<49>, cast(integralAdd(afterThisOne, 1), \type(int)), item<2>))), integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<50>,  s2<11>; boolAnd(boolImplies(boolAnd(refNE(s2<11>, null), refNE(s2<11>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>)), (\exists int i:38.1125.37; boolAnd(integralLE(0, i:38.1125.37), integralLT(i:38.1125.37, integralAdd(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>)), 1)), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<50>, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(s2<11>, i:38.1125.37))))))), is(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), \type(boolean)))), (\forall anytype brokenObj<50>,  s2<11>; boolAnd(boolImplies(boolAnd(refNE(s2<11>, null), refNE(s2<11>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>)), (\exists int i:38.1125.37; boolAnd(integralLE(0, i:38.1125.37), integralLT(i:38.1125.37, integralAdd(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>)), 1)), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<50>, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(s2<11>, i:38.1125.37))))))), is(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<51>,  beforeThisOne,  item<3>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<51>, beforeThisOne), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:185.200.34, alloc:38.2030.32, item<3>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<51>, beforeThisOne)))), integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), \type(JMLValueSequence)))), (\forall anytype brokenObj<51>,  beforeThisOne,  item<3>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<51>, beforeThisOne), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:185.200.34, alloc:38.2030.32, item<3>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<51>, beforeThisOne)))), integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<52>,  n<4>; boolAnd(boolImplies(boolAnd(integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>), n<4>)), (\forall bigint i:38.1455.35; boolImplies(boolAnd(is(i:38.1455.35, \type(bigint)), integralLE(n<4>, i:38.1455.35), integralLT(i:38.1455.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35), null))))))), integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), \type(JMLValueSequence)))), (\forall anytype brokenObj<52>,  n<4>; boolAnd(boolImplies(boolAnd(integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>), n<4>)), (\forall bigint i:38.1455.35; boolImplies(boolAnd(is(i:38.1455.35, \type(bigint)), integralLE(n<4>, i:38.1455.35), integralLT(i:38.1455.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35), null))))))), integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<53>,  i<3>; boolAnd(integralLE(0, i<3>), integralLT(i<3>, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<53>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<53>, i<3>), \type(Object)))), (\forall anytype brokenObj<53>,  i<3>; boolAnd(integralLE(0, i<3>), integralLT(i<3>, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<53>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<53>, i<3>), \type(Object)))));
ASSUME boolAnd((\forall anytype alloc_<5>,  allocNew_<5>,  item<4>,  nxt<1>; boolAnd(boolImplies(refNE(item<4>, null), boolAnd(java.lang.Object.equals.89.4(state, select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), item<4>), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeLE(\typeof(item<4>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>))), boolImplies(refNE(nxt<1>, null), typeLE(select(elementType:185.109.27, nxt<1>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), boolImplies(refEQ(nxt<1>, null), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \typeof(item<4>))), boolEq(select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), termConditional(refEQ(nxt<1>, null), false, select(containsNull:185.124.29, nxt<1>))))), boolImplies(refEQ(item<4>, null), boolAnd(refEQ(select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), null), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(Object)), select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), refNE(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(org.jmlspecs.models.JMLListEqualsNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), alloc_<5>)), isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), allocNew_<5>))), (\forall anytype alloc_<5>,  allocNew_<5>,  item<4>,  nxt<1>; boolAnd(boolImplies(refNE(item<4>, null), boolAnd(java.lang.Object.equals.89.4(state, select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), item<4>), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeLE(\typeof(item<4>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>))), boolImplies(refNE(nxt<1>, null), typeLE(select(elementType:185.109.27, nxt<1>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), boolImplies(refEQ(nxt<1>, null), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \typeof(item<4>))), boolEq(select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), termConditional(refEQ(nxt<1>, null), false, select(containsNull:185.124.29, nxt<1>))))), boolImplies(refEQ(item<4>, null), boolAnd(refEQ(select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), null), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(Object)), select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), refNE(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(org.jmlspecs.models.JMLListEqualsNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), alloc_<5>)), isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), allocNew_<5>))));
ASSUME boolAnd((\forall anytype s<5>,  radix; boolAnd(java.lang.Integer.parseable.54.33(s<5>, radix), is(java.lang.Integer.parseInt.254.4(s<5>, radix), \type(int)))), (\forall anytype s<5>,  radix; boolAnd(java.lang.Integer.parseable.54.33(s<5>, radix), is(java.lang.Integer.parseInt.254.4(s<5>, radix), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<54>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<54>, 1))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), (* \result is like this, but without the first item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0)), is(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), \type(JMLValueSequence)))), (\forall anytype brokenObj<54>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<54>, 1))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), (* \result is like this, but without the first item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0)), is(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<55>; boolAnd(integralEQ(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), org.jmlspecs.models.JMLChar#theChar(state, brokenObj<55>)), is(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), \type(char)))), (\forall anytype brokenObj<55>; boolAnd(integralEQ(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), org.jmlspecs.models.JMLChar#theChar(state, brokenObj<55>)), is(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), \type(char)))));
ASSUME (\forall anytype brokenObj<56>; integralEQ(org.jmlspecs.models.JMLChar#theChar(state, brokenObj<56>), select(value:47.45.25, brokenObj<56>)));
ASSUME boolAnd((\forall anytype brokenObj<57>,  i<4>; boolAnd(integralLE(0, i<4>), integralLT(i<4>, org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<57>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(brokenObj<57>, i<4>), \type(Object)))), (\forall anytype brokenObj<57>,  i<4>; boolAnd(integralLE(0, i<4>), integralLT(i<4>, org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<57>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(brokenObj<57>, i<4>), \type(Object)))));
ASSUME boolAnd((\forall anytype brokenObj<58>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<58>)), is(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), \type(bigint)))), (\forall anytype brokenObj<58>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<58>)), is(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), \type(bigint)))));
ASSUME boolAnd((\forall anytype brokenObj<59>,  beforeThisOne<1>,  item<5>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<59>, beforeThisOne<1>), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.2030.32, alloc:38.2079.32, item<5>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<59>, beforeThisOne<1>)))), integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), \type(JMLValueSequence)))), (\forall anytype brokenObj<59>,  beforeThisOne<1>,  item<5>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<59>, beforeThisOne<1>), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.2030.32, alloc:38.2079.32, item<5>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<59>, beforeThisOne<1>)))), integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<60>,  i<5>; boolAnd(boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>)), select(elementType:39.44.30, brokenObj<60>))), boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), boolNot(select(containsNull:39.52.32, brokenObj<60>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), \type(JMLType)))), (\forall anytype brokenObj<60>,  i<5>; boolAnd(boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>)), select(elementType:39.44.30, brokenObj<60>))), boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), boolNot(select(containsNull:39.52.32, brokenObj<60>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<61>,  afterThisOne<1>,  item<6>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<61>, cast(integralAdd(afterThisOne<1>, 1), \type(int)), item<6>))), integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), \type(JMLValueSequence)))), (\forall anytype brokenObj<61>,  afterThisOne<1>,  item<6>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<61>, cast(integralAdd(afterThisOne<1>, 1), \type(int)), item<6>))), integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<62>,  n<5>; boolAnd(boolImplies(boolAnd(integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>)), n<5>), (\forall bigint i:38.1328.39; boolImplies(boolAnd(is(i:38.1328.39, \type(bigint)), integralLE(0, i:38.1328.39), integralLT(i:38.1328.39, n<5>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39), null))))))), integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), \type(JMLValueSequence)))), (\forall anytype brokenObj<62>,  n<5>; boolAnd(boolImplies(boolAnd(integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>)), n<5>), (\forall bigint i:38.1328.39; boolImplies(boolAnd(is(i:38.1328.39, \type(bigint)), integralLE(0, i:38.1328.39), integralLT(i:38.1328.39, n<5>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39), null))))))), integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<63>,  item<7>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), java.lang.Object.equals.89.4(state, select(val:185.97.24, brokenObj<63>), item<7>))), boolImplies(refEQ(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), refEQ(item<7>, null))), is(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), \type(boolean)))), (\forall anytype brokenObj<63>,  item<7>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), java.lang.Object.equals.89.4(state, select(val:185.97.24, brokenObj<63>), item<7>))), boolImplies(refEQ(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), refEQ(item<7>, null))), is(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), \type(boolean)))));
ASSUME boolAnd((\forall anytype alloc_<6>,  allocNew_<6>,  value; boolAnd(integralEQ(java.lang.Integer#theInteger(state, java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), value), refNE(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), null), typeEQ(\typeof(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), \type(java.lang.Integer)), boolNot(isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), alloc_<6>)), isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), allocNew_<6>))), (\forall anytype alloc_<6>,  allocNew_<6>,  value; boolAnd(integralEQ(java.lang.Integer#theInteger(state, java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), value), refNE(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), null), typeEQ(\typeof(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), \type(java.lang.Integer)), boolNot(isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), alloc_<6>)), isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), allocNew_<6>))));
ASSUME boolAnd((\forall anytype i<6>,  radix<1>; boolAnd(boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'))), is(java.lang.Integer.toString.115.4(i<6>, radix<1>), \type(java.lang.String)))), (\forall anytype i<6>,  radix<1>; boolAnd(boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'))), is(java.lang.Integer.toString.115.4(i<6>, radix<1>), \type(java.lang.String)))));
ASSUME boolAnd((\forall anytype brokenObj<64>; boolAnd(integralLE(0, sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>)), integralLE(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20), integralEQ(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), select(my_candidate_count:34.97.35, brokenObj<64>)), is(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), \type(byte)))), (\forall anytype brokenObj<64>; boolAnd(integralLE(0, sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>)), integralLE(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20), integralEQ(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), select(my_candidate_count:34.97.35, brokenObj<64>)), is(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), \type(byte)))));
ASSUME boolAnd((\forall anytype ch,  radix<2>; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), java.lang.Character.isDigit.256.4(ch), integralLT(java.lang.Character.digitVal.390.33(ch), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), java.lang.Character.digitVal.390.33(ch))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'A'), integralLE(ch, 'Z'), integralLT(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'A'), 10))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'a'), integralLE(ch, 'z'), integralLT(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'a'), 10))), boolImplies(boolOr(integralLT(radix<2>, MIN_RADIX:128..), integralGT(radix<2>, MAX_RADIX:128..), boolAnd(java.lang.Character.isDigit.256.4(ch), integralGE(java.lang.Character.digitVal.390.33(ch), radix<2>)), boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'), integralGE(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'), integralGE(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), boolAnd(boolNot(java.lang.Character.isDigit.256.4(ch)), boolNot(boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'))), boolNot(boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'))))), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralNeg(1))), is(java.lang.Character.digit.410.4(ch, radix<2>), \type(int)))), (\forall anytype ch,  radix<2>; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), java.lang.Character.isDigit.256.4(ch), integralLT(java.lang.Character.digitVal.390.33(ch), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), java.lang.Character.digitVal.390.33(ch))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'A'), integralLE(ch, 'Z'), integralLT(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'A'), 10))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'a'), integralLE(ch, 'z'), integralLT(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'a'), 10))), boolImplies(boolOr(integralLT(radix<2>, MIN_RADIX:128..), integralGT(radix<2>, MAX_RADIX:128..), boolAnd(java.lang.Character.isDigit.256.4(ch), integralGE(java.lang.Character.digitVal.390.33(ch), radix<2>)), boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'), integralGE(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'), integralGE(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), boolAnd(boolNot(java.lang.Character.isDigit.256.4(ch)), boolNot(boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'))), boolNot(boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'))))), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralNeg(1))), is(java.lang.Character.digit.410.4(ch, radix<2>), \type(int)))));
ASSUME boolAnd((\forall anytype ch<1>; boolAnd(boolEq(java.lang.Character.isDigit.256.4(ch<1>), integralEQ(java.lang.Character.getType.510.4(ch<1>), DECIMAL_DIGIT_NUMBER:128..)), is(java.lang.Character.isDigit.256.4(ch<1>), \type(boolean)))), (\forall anytype ch<1>; boolAnd(boolEq(java.lang.Character.isDigit.256.4(ch<1>), integralEQ(java.lang.Character.getType.510.4(ch<1>), DECIMAL_DIGIT_NUMBER:128..)), is(java.lang.Character.isDigit.256.4(ch<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype ch<2>; boolAnd(integralLE(UNASSIGNED:128.., java.lang.Character.getType.510.4(ch<2>)), integralLE(java.lang.Character.getType.510.4(ch<2>), OTHER_SYMBOL:128..), (* \result == the Unicode character category of ch *), is(java.lang.Character.getType.510.4(ch<2>), \type(int)))), (\forall anytype ch<2>; boolAnd(integralLE(UNASSIGNED:128.., java.lang.Character.getType.510.4(ch<2>)), integralLE(java.lang.Character.getType.510.4(ch<2>), OTHER_SYMBOL:128..), (* \result == the Unicode character category of ch *), is(java.lang.Character.getType.510.4(ch<2>), \type(int)))));
ASSUME boolAnd((\forall anytype ch<3>; is(java.lang.Character.digitVal.390.33(ch<3>), \type(int))), (\forall anytype ch<3>; is(java.lang.Character.digitVal.390.33(ch<3>), \type(int))));
ASSUME boolAnd((\forall anytype hd<1>,  tl<1>; boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), null), org.jmlspecs.models.JMLListValueNode.headEquals.252.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), hd<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>)), tl<1>), org.jmlspecs.models.JMLListValueNode.equals.501.4(state, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:38.2079.32, alloc:131.200.34, hd<1>, tl<1>)), is(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), \type(JMLListValueNode)))), (\forall anytype hd<1>,  tl<1>; boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), null), org.jmlspecs.models.JMLListValueNode.headEquals.252.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), hd<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>)), tl<1>), org.jmlspecs.models.JMLListValueNode.equals.501.4(state, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:38.2079.32, alloc:131.200.34, hd<1>, tl<1>)), is(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), \type(JMLListValueNode)))));
ASSUME boolAnd((\forall anytype brokenObj<65>,  item<8>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, brokenObj<65>), item<8>))), boolImplies(refEQ(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), refEQ(item<8>, null))), is(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), \type(boolean)))), (\forall anytype brokenObj<65>,  item<8>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, brokenObj<65>), item<8>))), boolImplies(refEQ(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), refEQ(item<8>, null))), is(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<66>,  ls2<2>; boolAnd(boolImplies(boolAnd(refNE(ls2<2>, null), is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), boolAnd(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<66>, cast(ls2<2>, \type(JMLListValueNode))), org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(cast(ls2<2>, \type(JMLListValueNode)), brokenObj<66>)))), boolImplies(boolOr(refEQ(ls2<2>, null), boolNot(boolAnd(is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)))), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), false)), is(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), \type(boolean)))), (\forall anytype brokenObj<66>,  ls2<2>; boolAnd(boolImplies(boolAnd(refNE(ls2<2>, null), is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), boolAnd(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<66>, cast(ls2<2>, \type(JMLListValueNode))), org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(cast(ls2<2>, \type(JMLListValueNode)), brokenObj<66>)))), boolImplies(boolOr(refEQ(ls2<2>, null), boolNot(boolAnd(is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)))), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), false)), is(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<67>,  ls2<3>; boolAnd(boolImplies(refNE(ls2<3>, null), boolEq(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), boolAnd(integralLE(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>), org.jmlspecs.models.JMLListValueNode.int_length.424.4(ls2<3>)), (\forall int i:131.471.30; boolImplies(boolAnd(integralLE(0, i:131.471.30), integralLT(i:131.471.30, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30))))))))), boolImplies(refEQ(ls2<3>, null), boolNot(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>))), is(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), \type(boolean)))), (\forall anytype brokenObj<67>,  ls2<3>; boolAnd(boolImplies(refNE(ls2<3>, null), boolEq(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), boolAnd(integralLE(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>), org.jmlspecs.models.JMLListValueNode.int_length.424.4(ls2<3>)), (\forall int i:131.471.30; boolImplies(boolAnd(integralLE(0, i:131.471.30), integralLT(i:131.471.30, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30))))))))), boolImplies(refEQ(ls2<3>, null), boolNot(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>))), is(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<68>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<68>)), is(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), \type(int)))), (\forall anytype brokenObj<68>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<68>)), is(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<69>,  item<9>; boolAnd(boolImplies(refNE(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.440.35; boolAnd(integralLE(0, i:185.440.35), integralLT(i:185.440.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), termConditional(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), null), refEQ(item<9>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), item<9>)))))), boolImplies(refEQ(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.448.35; boolAnd(integralLE(0, i:185.448.35), integralLT(i:185.448.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.448.35), null))))), is(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), \type(boolean)))), (\forall anytype brokenObj<69>,  item<9>; boolAnd(boolImplies(refNE(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.440.35; boolAnd(integralLE(0, i:185.440.35), integralLT(i:185.440.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), termConditional(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), null), refEQ(item<9>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), item<9>)))))), boolImplies(refEQ(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.448.35; boolAnd(integralLE(0, i:185.448.35), integralLT(i:185.448.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.448.35), null))))), is(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<70>,  s2<12>; boolAnd(boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null)), boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null), (\forall Object e:181.709.34; boolImplies(boolAnd(is(e:181.709.34, \type(Object)), isAllocated(e:181.709.34, alloc), refNE(e:181.709.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), e:181.709.34), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<70>, e:181.709.34), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<12>, e:181.709.34))))))), is(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<70>,  s2<12>; boolAnd(boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null)), boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null), (\forall Object e:181.709.34; boolImplies(boolAnd(is(e:181.709.34, \type(Object)), isAllocated(e:181.709.34, alloc), refNE(e:181.709.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), e:181.709.34), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<70>, e:181.709.34), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<12>, e:181.709.34))))))), is(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype brokenObj<71>,  s2<13>; boolAnd(boolImplies(boolAnd(refNE(s2<13>, null), refNE(s2<13>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<13>, brokenObj<71>))), is(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), \type(boolean)))), (\forall anytype brokenObj<71>,  s2<13>; boolAnd(boolImplies(boolAnd(refNE(s2<13>, null), refNE(s2<13>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<13>, brokenObj<71>))), is(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<72>,  i<7>; boolAnd(integralLE(0, i<7>), integralLT(i<7>, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<72>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<72>, i<7>), \type(JMLType)))), (\forall anytype brokenObj<72>,  i<7>; boolAnd(integralLE(0, i<7>), integralLT(i<7>, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<72>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<72>, i<7>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<73>; is(org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<73>), \type(bigint))), (\forall anytype brokenObj<73>; is(org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<73>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<74>,  s2<14>; boolAnd(boolImplies(boolAnd(refNE(s2<14>, null), refNE(s2<14>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<14>)), (\forall int i:38.805.29; boolImplies(boolAnd(integralLE(0, i:38.805.29), integralLT(i:38.805.29, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29), null)))))))), is(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), \type(boolean)))), (\forall anytype brokenObj<74>,  s2<14>; boolAnd(boolImplies(boolAnd(refNE(s2<14>, null), refNE(s2<14>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<14>)), (\forall int i:38.805.29; boolImplies(boolAnd(integralLE(0, i:38.805.29), integralLT(i:38.805.29, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29), null)))))))), is(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), \type(boolean)))));
ASSUME (\forall anytype brokenObj<75>; integralEQ(java.lang.Integer#theInteger(state, brokenObj<75>), java.lang.Integer.intValue.329.4(brokenObj<75>)));
ASSUME boolAnd((\forall anytype brokenObj<76>; boolAnd(integralEQ(java.lang.Integer.intValue.329.4(brokenObj<76>), java.lang.Integer#theInteger(state, brokenObj<76>)), is(java.lang.Integer.intValue.329.4(brokenObj<76>), \type(int)))), (\forall anytype brokenObj<76>; boolAnd(integralEQ(java.lang.Integer.intValue.329.4(brokenObj<76>), java.lang.Integer#theInteger(state, brokenObj<76>)), is(java.lang.Integer.intValue.329.4(brokenObj<76>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<77>,  item<10>; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<77>, 0, item<10>))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), 1)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), brokenObj<77>))), is(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), \type(JMLValueSequence)))), (\forall anytype brokenObj<77>,  item<10>; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<77>, 0, item<10>))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), 1)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), brokenObj<77>))), is(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<78>,  ls2<4>; boolAnd(boolImplies(boolAnd(refNE(ls2<4>, null), is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), boolAnd(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<78>, cast(ls2<4>, \type(JMLListEqualsNode))), org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(cast(ls2<4>, \type(JMLListEqualsNode)), brokenObj<78>)))), boolImplies(boolOr(refEQ(ls2<4>, null), boolNot(boolAnd(is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), false)), is(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), \type(boolean)))), (\forall anytype brokenObj<78>,  ls2<4>; boolAnd(boolImplies(boolAnd(refNE(ls2<4>, null), is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), boolAnd(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<78>, cast(ls2<4>, \type(JMLListEqualsNode))), org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(cast(ls2<4>, \type(JMLListEqualsNode)), brokenObj<78>)))), boolImplies(boolOr(refEQ(ls2<4>, null), boolNot(boolAnd(is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), false)), is(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<79>,  ls2<5>; boolAnd(boolImplies(refNE(ls2<5>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), boolAnd(integralLE(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>), org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(ls2<5>)), (\forall int i:185.471.30; boolImplies(boolAnd(integralLE(0, i:185.471.30), integralLT(i:185.471.30, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30))))))))), boolImplies(refEQ(ls2<5>, null), boolNot(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>))), is(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), \type(boolean)))), (\forall anytype brokenObj<79>,  ls2<5>; boolAnd(boolImplies(refNE(ls2<5>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), boolAnd(integralLE(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>), org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(ls2<5>)), (\forall int i:185.471.30; boolImplies(boolAnd(integralLE(0, i:185.471.30), integralLT(i:185.471.30, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30))))))))), boolImplies(refEQ(ls2<5>, null), boolNot(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>))), is(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<80>,  s2<15>; boolAnd(boolImplies(boolAnd(refNE(s2<15>, null), refNE(s2<15>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<15>, brokenObj<80>))), is(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), \type(boolean)))), (\forall anytype brokenObj<80>,  s2<15>; boolAnd(boolImplies(boolAnd(refNE(s2<15>, null), refNE(s2<15>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<15>, brokenObj<80>))), is(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<81>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>))), is(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), \type(int)))), (\forall anytype brokenObj<81>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>))), is(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<82>,  s2<16>; boolAnd(boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null)), boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null), (\forall Object e:181.737.34; boolImplies(boolAnd(is(e:181.737.34, \type(Object)), isAllocated(e:181.737.34, alloc), refNE(e:181.737.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), e:181.737.34), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<82>, e:181.737.34), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<16>, e:181.737.34)))))))), is(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<82>,  s2<16>; boolAnd(boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null)), boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null), (\forall Object e:181.737.34; boolImplies(boolAnd(is(e:181.737.34, \type(Object)), isAllocated(e:181.737.34, alloc), refNE(e:181.737.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), e:181.737.34), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<82>, e:181.737.34), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<16>, e:181.737.34)))))))), is(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype brokenObj<83>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<83>)), is(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), \type(int)))), (\forall anytype brokenObj<83>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<83>)), is(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<84>,  n<6>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), boolImplies(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>), n<6>)), (\forall bigint i:38.1515.35; boolImplies(boolAnd(is(i:38.1515.35, \type(bigint)), integralLE(n<6>, i:38.1515.35), integralLT(i:38.1515.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), \type(JMLValueSequence)))), (\forall anytype brokenObj<84>,  n<6>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), boolImplies(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>), n<6>)), (\forall bigint i:38.1515.35; boolImplies(boolAnd(is(i:38.1515.35, \type(bigint)), integralLE(n<6>, i:38.1515.35), integralLT(i:38.1515.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<85>,  elem<3>; boolAnd(boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null), (\forall Object e:181.600.29; boolImplies(boolAnd(is(e:181.600.29, \type(Object)), isAllocated(e:181.600.29, alloc), refNE(e:181.600.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), e:181.600.29), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, e:181.600.29), boolAnd(refEQ(e:181.600.29, null), refEQ(elem<3>, null)), boolAnd(refNE(e:181.600.29, null), java.lang.Object.equals.89.4(state, e:181.600.29, elem<3>)))))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<85>, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), elem<3>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>), 0, 1))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(refEQ(elem<3>, null), select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>))), boolImplies(refNE(elem<3>, null), boolEq(select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), select(containsNull:39.52.32, brokenObj<85>))), is(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<85>,  elem<3>; boolAnd(boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null), (\forall Object e:181.600.29; boolImplies(boolAnd(is(e:181.600.29, \type(Object)), isAllocated(e:181.600.29, alloc), refNE(e:181.600.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), e:181.600.29), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, e:181.600.29), boolAnd(refEQ(e:181.600.29, null), refEQ(elem<3>, null)), boolAnd(refNE(e:181.600.29, null), java.lang.Object.equals.89.4(state, e:181.600.29, elem<3>)))))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<85>, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), elem<3>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>), 0, 1))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(refEQ(elem<3>, null), select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>))), boolImplies(refNE(elem<3>, null), boolEq(select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), select(containsNull:39.52.32, brokenObj<85>))), is(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), \type(JMLEqualsSet)))));
ASSUME boolAnd(is(this, \type(sos.koa.District)), isAllocated(this, alloc));
ASSUME refNE(this, null);
ASSUME (\forall anytype brokenObj<86>; boolImplies(boolAnd(is(brokenObj<86>, \type(sos.koa.KiesKring)), refNE(brokenObj<86>, null)), refEQ(select(owner:8.45.28, select(my_kiesLijsten:15.80.49, brokenObj<86>)), brokenObj<86>)));
ASSUME (\forall anytype brokenObj<87>; boolImplies(boolAnd(is(brokenObj<87>, \type(sos.koa.Candidate)), refNE(brokenObj<87>, null)), integralLE(0, select(my_position_number:35.114.35, brokenObj<87>))));
ASSUME (\forall anytype brokenObj<88>; boolImplies(boolAnd(is(brokenObj<88>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<88>, null)), integralLE(select(my_kiesKringCount:191.34.35, brokenObj<88>), MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20)));
ASSUME (\forall anytype brokenObj<89>; boolImplies(boolAnd(is(brokenObj<89>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<89>, null), select(containsNull:185.124.29, brokenObj<89>)), typeEQ(\type(Object), select(elementType:185.109.27, brokenObj<89>))));
ASSUME (\forall anytype brokenObj<90>; boolImplies(boolAnd(is(brokenObj<90>, \type(sos.koa.KiesLijst)), refNE(brokenObj<90>, null)), integralGE(select(my_vote_count:34.104.34, brokenObj<90>), 0)));
ASSUME (\forall anytype brokenObj<91>; boolImplies(boolAnd(is(brokenObj<91>, \type(sos.koa.District)), refNE(brokenObj<91>, null)), integralLE(java.lang.String.length.225.4(select(my_name:44.46, brokenObj<91>)), DISTRICT_NAME_MAX_LENGTH:32.20)));
ASSUME (\forall anytype brokenObj<92>; boolImplies(boolAnd(is(brokenObj<92>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<92>, null)), typeLE(select(elementType:185.109.27, brokenObj<92>), \type(Object))));
ASSUME (\forall anytype brokenObj<93>; boolImplies(boolAnd(is(brokenObj<93>, \type(sos.koa.Candidate)), refNE(brokenObj<93>, null)), refNE(select(my_firstname:35.94.46, brokenObj<93>), select(my_name:15.98.46, select(my_kiesKring:35.130.49, brokenObj<93>)))));
ASSUME (\forall anytype brokenObj<94>; boolImplies(boolAnd(is(brokenObj<94>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<94>, null), refNE(select(theSeq:38.188.37, brokenObj<94>), null)), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<94>), org.jmlspecs.models.JMLListValueNode.length.398.26(select(theSeq:38.188.37, brokenObj<94>)))));
ASSUME (\forall anytype brokenObj<95>; boolImplies(boolAnd(is(brokenObj<95>, \type(java.util.Map)), refNE(brokenObj<95>, null)), (\forall Object o1:167.93.29,  o2:167.93.33; boolImplies(boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, brokenObj<95>), o1:167.93.29), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, brokenObj<95>), o2:167.93.33), refNE(o2:167.93.33, o1:167.93.29)), boolNot(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o2:167.93.33, o1:167.93.29))))));
ASSUME (\forall anytype brokenObj<96>; boolImplies(boolAnd(is(brokenObj<96>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<96>, null)), boolEq(refEQ(select(the_list:181.166.38, brokenObj<96>), null), integralEQ(select(size:181.171.44, brokenObj<96>), 0))));
ASSUME (\forall anytype brokenObj<97>; boolImplies(boolAnd(is(brokenObj<97>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<97>, null), refNE(select(val:185.97.24, brokenObj<97>), null)), typeLE(\typeof(select(val:185.97.24, brokenObj<97>)), select(elementType:185.109.27, brokenObj<97>))));
ASSUME (\forall anytype brokenObj<98>; boolImplies(boolAnd(is(brokenObj<98>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<98>, null)), integralGE(select(size:181.171.44, brokenObj<98>), 0)));
ASSUME (\forall anytype brokenObj<99>; boolImplies(boolAnd(is(brokenObj<99>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<99>, null)), boolEq(select(containsNull:185.124.29, brokenObj<99>), boolOr(refEQ(select(val:185.97.24, brokenObj<99>), null), boolAnd(refNE(select(next:185.101.35, brokenObj<99>), null), select(containsNull:185.124.29, select(next:185.101.35, brokenObj<99>)))))));
ASSUME (\forall anytype brokenObj<100>; boolImplies(boolAnd(is(brokenObj<100>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<100>, null)), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<100>), org.jmlspecs.models.JMLValueSequence.length.623.26(brokenObj<100>))));
ASSUME (\forall anytype brokenObj<101>; boolImplies(boolAnd(is(brokenObj<101>, \type(sos.koa.Candidate)), refNE(brokenObj<101>, null)), integralLE(java.lang.String.length.225.4(select(my_initials:35.101.46, brokenObj<101>)), INITIALS_MAX_LENGTH:35.50.20)));
ASSUME (\forall anytype brokenObj<102>; boolImplies(boolAnd(is(brokenObj<102>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<102>, null), refEQ(select(val:185.97.24, brokenObj<102>), null)), typeEQ(\type(Object), select(elementType:185.109.27, brokenObj<102>))));
ASSUME (\forall anytype brokenObj<103>; boolImplies(boolAnd(is(brokenObj<103>, \type(org.jmlspecs.models.JMLListValueNode)), refNE(brokenObj<103>, null)), refEQ(select(owner:8.45.28, brokenObj<103>), null)));
ASSUME (\forall anytype brokenObj<104>; boolImplies(boolAnd(is(brokenObj<104>, \type(sos.koa.District)), refNE(brokenObj<104>, null), refNE(select(my_kiesKring:50.40, brokenObj<104>), null)), refEQ(select(owner:8.45.28, brokenObj<104>), select(my_kiesKring:50.40, brokenObj<104>))));
ASSUME (\forall anytype brokenObj<105>; boolImplies(boolAnd(is(brokenObj<105>, \type(sos.koa.District)), refNE(brokenObj<105>, null)), boolAnd(integralLE(0, select(my_number:37.34, brokenObj<105>)), integralLE(select(my_number:37.34, brokenObj<105>), MAX_DISTRICTS_PER_KIESKRING:15.48.19))));
ASSUME (\forall anytype brokenObj<106>; boolImplies(boolAnd(is(brokenObj<106>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<106>, null)), integralLE(select(my_kiesLijstCount:191.48.35, brokenObj<106>), MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20)));
ASSUME (\forall anytype brokenObj<107>; boolImplies(boolAnd(is(brokenObj<107>, \type(sos.koa.Candidate)), refNE(brokenObj<107>, null)), refNE(select(my_initials:35.101.46, brokenObj<107>), select(my_name:34.83.46, select(my_kiesLijst:35.140.49, brokenObj<107>)))));
ASSUME (\forall anytype brokenObj<108>; boolImplies(boolAnd(is(brokenObj<108>, \type(sos.koa.KiesLijst)), refNE(brokenObj<108>, null)), integralLE(select(my_candidate_count:34.97.35, brokenObj<108>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20)));
ASSUME (\forall anytype brokenObj<109>; boolImplies(boolAnd(is(brokenObj<109>, \type(java.util.Map)), refNE(brokenObj<109>, null)), (\forall Object o:167.89.29; boolImplies(boolAnd(is(o:167.89.29, \type(Object)), isAllocated(o:167.89.29, alloc), refNE(o:167.89.29, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, brokenObj<109>), o:167.89.29)), boolAnd(is(o:167.89.29, \type(Map.Entry)), refNE(o:167.89.29, null))))));
ASSUME (\forall anytype brokenObj<110>; boolImplies(boolAnd(is(brokenObj<110>, \type(sos.koa.KiesKring)), refNE(brokenObj<110>, null)), (\forall int i:15.85.29; boolImplies(boolAnd(integralLE(0, i:15.85.29), integralLT(i:15.85.29, arrayLength(select(my_kiesLijsten:15.80.49, brokenObj<110>)))), refEQ(select(owner:8.45.28, select(select(elems, select(my_kiesLijsten:15.80.49, brokenObj<110>)), i:15.85.29)), brokenObj<110>)))));
ASSUME (\forall anytype brokenObj<111>; boolImplies(boolAnd(is(brokenObj<111>, \type(sos.koa.Candidate)), refNE(brokenObj<111>, null)), refEQ(select(owner:8.45.28, select(my_firstname:35.94.46, brokenObj<111>)), brokenObj<111>)));
ASSUME (\forall anytype brokenObj<112>; boolImplies(boolAnd(is(brokenObj<112>, \type(sos.koa.KiesLijst)), refNE(brokenObj<112>, null)), integralLE(0, select(my_candidate_count:34.97.35, brokenObj<112>))));
ASSUME (\forall anytype brokenObj<113>; boolImplies(boolAnd(is(brokenObj<113>, \type(sos.koa.KiesKring)), refNE(brokenObj<113>, null)), integralEQ(select(my_kieslijst_count:15.125.35, brokenObj<113>), quantvalue#138)));
ASSUME (\forall int i:34.57.29; boolImplies(boolAnd(integralLE(0, i:34.57.29), integralLT(i:34.57.29, arrayLength(MY_CACHED_KIESLIJSTEN:34.54.64))), refEQ(select(owner:8.45.28, select(select(elems, MY_CACHED_KIESLIJSTEN:34.54.64), i:34.57.29)), MY_CACHED_KIESLIJSTEN:34.54.64)));
ASSUME (\forall anytype brokenObj<114>; boolImplies(boolAnd(is(brokenObj<114>, \type(sos.koa.Candidate)), refNE(brokenObj<114>, null)), integralGE(select(my_vote_count:35.150.34, brokenObj<114>), 0)));
ASSUME (\forall anytype brokenObj<115>; boolImplies(boolAnd(is(brokenObj<115>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<115>, null)), boolEq(select(containsNull:39.52.32, brokenObj<115>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<115>, null))));
ASSUME (\forall anytype brokenObj<116>; boolImplies(boolAnd(is(brokenObj<116>, \type(sos.koa.CandidateList)), refNE(brokenObj<116>, null)), refEQ(select(owner:8.45.28, select(my_metadata:33.47.67, brokenObj<116>)), brokenObj<116>)));
ASSUME (\forall anytype brokenObj<117>; boolImplies(boolAnd(is(brokenObj<117>, \type(sos.koa.KiesLijst)), refNE(brokenObj<117>, null)), integralLE(java.lang.String.length.225.4(select(my_name:34.83.46, brokenObj<117>)), GROEPERING_NAME_MAX_LENGTH:34.39.20)));
ASSUME (\forall anytype brokenObj<118>; boolImplies(boolAnd(is(brokenObj<118>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<118>, null)), boolEq(refEQ(select(theSeq:38.188.37, brokenObj<118>), null), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<118>), 0))));
ASSUME (\forall anytype brokenObj<119>; boolImplies(boolAnd(is(brokenObj<119>, \type(sos.koa.Candidate)), refNE(brokenObj<119>, null)), refNE(select(my_city_of_residence:35.123.46, brokenObj<119>), select(my_name:15.98.46, select(my_kiesKring:35.130.49, brokenObj<119>)))));
ASSUME (\forall anytype brokenObj<120>; boolImplies(boolAnd(is(brokenObj<120>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<120>, null)), integralLE(0, select(my_codeCount:191.70.34, brokenObj<120>))));
ASSUME (\forall anytype brokenObj<121>; boolImplies(boolAnd(is(brokenObj<121>, \type(sos.koa.KiesLijst)), refNE(brokenObj<121>, null)), refEQ(select(owner:8.45.28, select(my_name:34.83.46, brokenObj<121>)), brokenObj<121>)));
ASSUME (\forall anytype brokenObj<122>; boolImplies(boolAnd(is(brokenObj<122>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<122>, null), refNE(select(theSeq:38.188.37, brokenObj<122>), null)), refEQ(select(owner:8.45.28, select(theSeq:38.188.37, brokenObj<122>)), brokenObj<122>)));
ASSUME (\forall anytype brokenObj<123>; boolImplies(boolAnd(is(brokenObj<123>, \type(sos.koa.CandidateList)), refNE(brokenObj<123>, null)), refEQ(select(owner:8.45.28, select(my_candidate_codes:33.59.43, brokenObj<123>)), brokenObj<123>)));
ASSUME (\forall anytype brokenObj<124>; boolImplies(boolAnd(is(brokenObj<124>, \type(sos.koa.CandidateList)), refNE(brokenObj<124>, null)), integralLE(0, select(my_blanco_count:33.66.35, brokenObj<124>))));
ASSUME (\forall anytype brokenObj<125>; boolImplies(boolAnd(is(brokenObj<125>, \type(sos.koa.Candidate)), refNE(brokenObj<125>, null)), integralLE(select(my_position_number:35.114.35, brokenObj<125>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20)));
ASSUME (\forall anytype brokenObj<126>; boolImplies(boolAnd(is(brokenObj<126>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<126>, null), org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<126>)), boolNot(select(containsNull:39.52.32, brokenObj<126>))));
ASSUME (\forall int i:15.70.29; boolImplies(boolAnd(integralLE(0, i:15.70.29), integralLT(i:15.70.29, arrayLength(MY_CACHED_KIESKRINGEN:15.68.64))), refEQ(select(owner:8.45.28, select(select(elems, MY_CACHED_KIESKRINGEN:15.68.64), i:15.70.29)), MY_CACHED_KIESKRINGEN:15.68.64)));
ASSUME (\forall anytype brokenObj<127>; boolImplies(boolAnd(is(brokenObj<127>, \type(sos.koa.Candidate)), refNE(brokenObj<127>, null)), boolOr(integralEQ(select(my_gender:35.108.35, brokenObj<127>), MALE:35.58.20), integralEQ(select(my_gender:35.108.35, brokenObj<127>), FEMALE:35.58.32), integralEQ(select(my_gender:35.108.35, brokenObj<127>), UNKNOWN:35.58.46))));
ASSUME (\forall anytype brokenObj<128>; boolImplies(boolAnd(is(brokenObj<128>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<128>, null)), (\forall JMLListEqualsNode l2:185.45.52,  e1:185.46.43,  e2:185.46.47,  n:185.47.45; boolImplies(boolAnd(is(l2:185.45.52, \type(JMLListEqualsNode)), isAllocated(l2:185.45.52, alloc), refNE(l2:185.45.52, null), is(e1:185.46.43, \type(Object)), isAllocated(e1:185.46.43, alloc), refNE(e1:185.46.43, null), is(e2:185.46.47, \type(Object)), isAllocated(e2:185.46.47, alloc), refNE(e2:185.46.47, null), is(n:185.47.45, \type(bigint))), org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<128>, brokenObj<128>, l2:185.45.52, e1:185.46.43, e2:185.46.47, n:185.47.45)))));
ASSUME (\forall anytype brokenObj<129>; boolImplies(boolAnd(is(brokenObj<129>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<129>, null)), integralGE(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<129>), 0)));
ASSUME (\forall anytype brokenObj<130>; boolImplies(boolAnd(is(brokenObj<130>, \type(sos.koa.KiesLijst)), refNE(brokenObj<130>, null)), boolAnd(integralLE(0, sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<130>)), integralLE(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<130>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20))));
ASSUME (\forall anytype brokenObj<131>; boolImplies(boolAnd(is(brokenObj<131>, \type(org.jmlspecs.models.JMLListValueNode)), refNE(brokenObj<131>, null)), (\forall JMLListValueNode l2:131.45.51,  e1:131.46.44,  e2:131.46.48,  n:131.47.45; boolImplies(boolAnd(is(l2:131.45.51, \type(JMLListValueNode)), isAllocated(l2:131.45.51, alloc), refNE(l2:131.45.51, null), is(e1:131.46.44, \type(JMLType)), isAllocated(e1:131.46.44, alloc), refNE(e1:131.46.44, null), is(e2:131.46.48, \type(JMLType)), isAllocated(e2:131.46.48, alloc), refNE(e2:131.46.48, null), is(n:131.47.45, \type(bigint))), org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj<131>, brokenObj<131>, l2:131.45.51, e1:131.46.44, e2:131.46.48, n:131.47.45)))));
ASSUME (\forall anytype brokenObj<132>; boolImplies(boolAnd(is(brokenObj<132>, \type(sos.koa.KiesLijst)), refNE(brokenObj<132>, null)), integralLE(select(my_kieskring_number:34.90.35, brokenObj<132>), MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20)));
ASSUME (\forall anytype brokenObj<133>; boolImplies(boolAnd(is(brokenObj<133>, \type(sos.koa.KiesLijst)), refNE(brokenObj<133>, null)), integralLE(0, select(my_kieskring_number:34.90.35, brokenObj<133>))));
ASSUME (\forall anytype brokenObj<134>; boolImplies(boolAnd(is(brokenObj<134>, \type(sos.koa.KiesKring)), refNE(brokenObj<134>, null)), refEQ(select(owner:8.45.28, select(my_districts:15.105.56, brokenObj<134>)), brokenObj<134>)));
ASSUME (\forall anytype brokenObj<135>; boolImplies(boolAnd(is(brokenObj<135>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<135>, null), refNE(select(next:185.101.35, brokenObj<135>), null)), typeLE(select(elementType:185.109.27, select(next:185.101.35, brokenObj<135>)), select(elementType:185.109.27, brokenObj<135>))));
ASSUME (\forall anytype brokenObj<136>; boolImplies(boolAnd(is(brokenObj<136>, \type(sos.koa.KiesKring)), refNE(brokenObj<136>, null)), integralEQ(arrayLength(select(my_districts:15.105.56, brokenObj<136>)), integralAdd(MAX_DISTRICTS_PER_KIESKRING:15.48.19, 1))));
ASSUME (\forall anytype brokenObj<137>; boolImplies(boolAnd(is(brokenObj<137>, \type(sos.koa.KiesLijst)), refNE(brokenObj<137>, null)), boolAnd(integralLE(0, select(my_number:34.76.35, brokenObj<137>)), integralLE(select(my_number:34.76.35, brokenObj<137>), MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20))));
ASSUME (\forall anytype brokenObj<138>; boolImplies(boolAnd(is(brokenObj<138>, \type(sos.koa.Candidate)), refNE(brokenObj<138>, null)), integralLE(java.lang.String.length.225.4(select(my_city_of_residence:35.123.46, brokenObj<138>)), CITY_OF_RESIDENCE_MAX_LENGTH:35.81.20)));
ASSUME (\forall anytype brokenObj<139>; boolImplies(boolAnd(is(brokenObj<139>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<139>, null), refNE(select(the_list:181.166.38, brokenObj<139>), null), refNE(select(next:185.101.35, select(the_list:181.166.38, brokenObj<139>)), null)), boolNot(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, select(next:185.101.35, select(the_list:181.166.38, brokenObj<139>)), select(val:185.97.24, select(the_list:181.166.38, brokenObj<139>))))));
ASSUME (\forall anytype brokenObj<140>; boolImplies(boolAnd(is(brokenObj<140>, \type(sos.koa.KiesKring)), refNE(brokenObj<140>, null)), integralEQ(arrayLength(select(my_kiesLijsten:15.80.49, brokenObj<140>)), integralAdd(MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20, 1))));
ASSUME (\forall anytype brokenObj<141>; boolImplies(boolAnd(is(brokenObj<141>, \type(sos.koa.Candidate)), refNE(brokenObj<141>, null)), refEQ(select(owner:8.45.28, select(my_lastname:35.86.46, brokenObj<141>)), brokenObj<141>)));
ASSUME (\forall anytype brokenObj<142>; boolImplies(boolAnd(is(brokenObj<142>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<142>, null)), integralLE(0, select(my_kiesKringCount:191.34.35, brokenObj<142>))));
ASSUME (\forall anytype brokenObj<143>; boolImplies(boolAnd(is(brokenObj<143>, \type(sos.koa.KiesKring)), refNE(brokenObj<143>, null)), integralEQ(select(my_district_count:15.116.35, brokenObj<143>), quantvalue#148)));
ASSUME (\forall anytype brokenObj<144>; boolImplies(boolAnd(is(brokenObj<144>, \type(org.jmlspecs.models.JMLChar)), refNE(brokenObj<144>, null)), refEQ(select(owner:8.45.28, brokenObj<144>), null)));
ASSUME (\forall anytype brokenObj<145>; boolImplies(boolAnd(is(brokenObj<145>, \type(sos.koa.KiesKring)), refNE(brokenObj<145>, null)), integralLE(java.lang.String.length.225.4(select(my_name:15.98.46, brokenObj<145>)), KIESKRING_NAME_MAX_LENGTH:15.35.20)));
ASSUME (\forall anytype brokenObj<146>; boolImplies(boolAnd(is(brokenObj<146>, \type(sos.koa.Candidate)), refNE(brokenObj<146>, null)), refNE(select(my_lastname:35.86.46, brokenObj<146>), select(my_name:34.83.46, select(my_kiesLijst:35.140.49, brokenObj<146>)))));
ASSUME (\forall anytype brokenObj<147>; boolImplies(boolAnd(is(brokenObj<147>, \type(sos.koa.Candidate)), refNE(brokenObj<147>, null)), refNE(select(my_initials:35.101.46, brokenObj<147>), select(my_name:15.98.46, select(my_kiesKring:35.130.49, brokenObj<147>)))));
ASSUME (\forall anytype brokenObj<148>; boolImplies(boolAnd(is(brokenObj<148>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<148>, null)), refEQ(select(owner:8.45.28, brokenObj<148>), null)));
ASSUME (\forall anytype brokenObj<149>; boolImplies(boolAnd(is(brokenObj<149>, \type(sos.koa.Candidate)), refNE(brokenObj<149>, null)), integralLE(select(my_vote_count:35.150.34, brokenObj<149>), sos.koa.AuditLog.getDecryptNrOfVotes.1055.1())));
ASSUME (\forall anytype brokenObj<150>; boolImplies(boolAnd(is(brokenObj<150>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<150>, null)), integralLE(select(my_districtCount:191.41.34, brokenObj<150>), MAX_DISTRICTS_PER_KIESKRING:15.48.19)));
ASSUME (\forall anytype brokenObj<151>; boolImplies(boolAnd(is(brokenObj<151>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<151>, null)), (\forall JMLValueSequence s2:38.53.51,  e1:38.54.44,  e2:38.54.48,  n:38.55.45; boolImplies(boolAnd(is(s2:38.53.51, \type(JMLValueSequence)), isAllocated(s2:38.53.51, alloc), refNE(s2:38.53.51, null), is(e1:38.54.44, \type(JMLType)), isAllocated(e1:38.54.44, alloc), refNE(e1:38.54.44, null), is(e2:38.54.48, \type(JMLType)), isAllocated(e2:38.54.48, alloc), refNE(e2:38.54.48, null), is(n:38.55.45, \type(bigint))), org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<151>, brokenObj<151>, s2:38.53.51, e1:38.54.44, e2:38.54.48, n:38.55.45)))));
ASSUME (\forall anytype brokenObj<152>; boolImplies(boolAnd(is(brokenObj<152>, \type(sos.koa.KiesKring)), refNE(brokenObj<152>, null)), integralLE(0, select(my_number:15.90.35, brokenObj<152>))));
ASSUME (\forall anytype brokenObj<153>; boolImplies(boolAnd(is(brokenObj<153>, \type(sos.koa.KiesKring)), refNE(brokenObj<153>, null)), boolAnd(integralLE(0, select(my_district_count:15.116.35, brokenObj<153>)), integralLE(select(my_district_count:15.116.35, brokenObj<153>), MAX_DISTRICTS_PER_KIESKRING:15.48.19))));
ASSUME (\forall anytype brokenObj<154>; boolImplies(boolAnd(is(brokenObj<154>, \type(sos.koa.KiesLijst)), refNE(brokenObj<154>, null)), (\forall int i:34.70.29; boolImplies(boolAnd(integralLE(0, i:34.70.29), integralLT(i:34.70.29, arrayLength(select(my_candidates:34.67.63, brokenObj<154>)))), refEQ(select(owner:8.45.28, select(select(elems, select(my_candidates:34.67.63, brokenObj<154>)), i:34.70.29)), brokenObj<154>)))));
ASSUME (\forall anytype brokenObj<155>; boolImplies(boolAnd(is(brokenObj<155>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<155>, null)), boolEq(select(containsNull:185.124.29, brokenObj<155>), org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<155>, null))));
ASSUME (\forall anytype brokenObj<156>; boolImplies(boolAnd(is(brokenObj<156>, \type(sos.koa.KiesLijst)), refNE(brokenObj<156>, null)), integralLE(select(my_vote_count:34.104.34, brokenObj<156>), sos.koa.AuditLog.getDecryptNrOfVotes.1055.1())));
ASSUME (\forall anytype brokenObj<157>; boolImplies(boolAnd(is(brokenObj<157>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<157>, null), org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<157>)), boolNot(select(containsNull:39.52.32, brokenObj<157>))));
ASSUME (\forall anytype brokenObj<158>; boolImplies(boolAnd(is(brokenObj<158>, \type(sos.koa.Candidate)), refNE(brokenObj<158>, null)), refEQ(select(owner:8.45.28, select(my_initials:35.101.46, brokenObj<158>)), brokenObj<158>)));
ASSUME (\forall anytype brokenObj<159>; boolImplies(boolAnd(is(brokenObj<159>, \type(org.jmlspecs.models.JMLListEqualsNode)), refNE(brokenObj<159>, null)), refEQ(select(owner:8.45.28, brokenObj<159>), null)));
ASSUME (\forall anytype brokenObj<160>; boolImplies(boolAnd(is(brokenObj<160>, \type(sos.koa.KiesKring)), refNE(brokenObj<160>, null)), boolAnd(integralLE(0, select(my_kieslijst_count:15.125.35, brokenObj<160>)), integralLE(select(my_kieslijst_count:15.125.35, brokenObj<160>), MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20))));
ASSUME (\forall anytype brokenObj<161>; boolImplies(boolAnd(is(brokenObj<161>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<161>, null), integralEQ(select(size:181.171.44, brokenObj<161>), 0)), boolNot(select(containsNull:39.52.32, brokenObj<161>))));
ASSUME (\forall anytype brokenObj<162>; boolImplies(boolAnd(is(brokenObj<162>, \type(sos.koa.KiesKring)), refNE(brokenObj<162>, null)), integralLE(select(my_number:15.90.35, brokenObj<162>), MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20)));
ASSUME (\forall anytype brokenObj<163>; boolImplies(boolAnd(is(brokenObj<163>, \type(sos.koa.Candidate)), refNE(brokenObj<163>, null)), refNE(select(my_firstname:35.94.46, brokenObj<163>), select(my_name:34.83.46, select(my_kiesLijst:35.140.49, brokenObj<163>)))));
ASSUME (\forall anytype brokenObj<164>; boolImplies(boolAnd(is(brokenObj<164>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<164>, null)), integralLE(0, select(my_districtCount:191.41.34, brokenObj<164>))));
ASSUME (\forall anytype brokenObj<165>; boolImplies(boolAnd(is(brokenObj<165>, \type(sos.koa.Candidate)), refNE(brokenObj<165>, null)), integralLE(java.lang.String.length.225.4(select(my_lastname:35.86.46, brokenObj<165>)), LASTNAME_MAX_LENGTH:35.28.20)));
ASSUME (\forall anytype brokenObj<166>; boolImplies(boolAnd(is(brokenObj<166>, \type(sos.koa.Candidate)), refNE(brokenObj<166>, null)), refEQ(select(owner:8.45.28, select(my_city_of_residence:35.123.46, brokenObj<166>)), brokenObj<166>)));
ASSUME (\forall anytype brokenObj<167>; boolImplies(boolAnd(is(brokenObj<167>, \type(sos.koa.KiesKring)), refNE(brokenObj<167>, null)), (\forall int i:15.111.29; boolImplies(boolAnd(integralLE(0, i:15.111.29), integralLT(i:15.111.29, arrayLength(select(my_districts:15.105.56, brokenObj<167>)))), refEQ(select(owner:8.45.28, select(select(elems, select(my_districts:15.105.56, brokenObj<167>)), i:15.111.29)), brokenObj<167>)))));
ASSUME (\forall anytype brokenObj<168>; boolImplies(boolAnd(is(brokenObj<168>, \type(sos.koa.KiesLijst)), refNE(brokenObj<168>, null)), integralEQ(arrayLength(select(my_candidates:34.67.63, brokenObj<168>)), integralAdd(MAX_CANDIDATES_PER_KIESLIJST:34.45.20, 1))));
ASSUME (\forall anytype brokenObj<169>; boolImplies(boolAnd(is(brokenObj<169>, \type(sos.koa.CandidateList)), refNE(brokenObj<169>, null)), refEQ(select(owner:8.45.28, select(my_kieskringen:33.37.55, brokenObj<169>)), brokenObj<169>)));
ASSUME (\forall anytype brokenObj<170>; boolImplies(boolAnd(is(brokenObj<170>, \type(sos.koa.CandidateList)), refNE(brokenObj<170>, null)), (\forall int i:33.338.29; refEQ(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<170>, i:33.338.29), sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<170>, java.lang.Integer.toString.249.4(i:33.338.29))))));
ASSUME (\forall anytype brokenObj<171>; boolImplies(boolAnd(is(brokenObj<171>, \type(sos.koa.Candidate)), refNE(brokenObj<171>, null)), refNE(select(my_city_of_residence:35.123.46, brokenObj<171>), select(my_name:34.83.46, select(my_kiesLijst:35.140.49, brokenObj<171>)))));
ASSUME (\forall anytype brokenObj<172>; boolImplies(boolAnd(is(brokenObj<172>, \type(sos.koa.AuditLog)), refNE(brokenObj<172>, null)), refEQ(select(owner:8.45.28, kiesKringen:36.72.53), brokenObj<172>)));
ASSUME (\forall anytype brokenObj<173>; boolImplies(boolAnd(is(brokenObj<173>, \type(sos.koa.Candidate)), refNE(brokenObj<173>, null)), refNE(select(my_lastname:35.86.46, brokenObj<173>), select(my_name:15.98.46, select(my_kiesKring:35.130.49, brokenObj<173>)))));
ASSUME (\forall anytype brokenObj<174>; boolImplies(boolAnd(is(brokenObj<174>, \type(sos.koa.KiesKring)), refNE(brokenObj<174>, null)), refEQ(select(owner:8.45.28, select(my_name:15.98.46, brokenObj<174>)), brokenObj<174>)));
ASSUME (\forall anytype brokenObj<175>; boolImplies(boolAnd(is(brokenObj<175>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<175>, null), refNE(select(the_list:181.166.38, brokenObj<175>), null)), integralEQ(select(size:181.171.44, brokenObj<175>), org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(select(the_list:181.166.38, brokenObj<175>)))));
ASSUME (\forall anytype brokenObj<176>; boolImplies(boolAnd(is(brokenObj<176>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<176>, null)), (\forall JMLEqualsSet s2:181.55.47; boolImplies(boolAnd(is(s2:181.55.47, \type(JMLEqualsSet)), isAllocated(s2:181.55.47, alloc), refNE(s2:181.55.47, null), refNE(s2:181.55.47, null)), (\forall Object e1:181.56.43,  e2:181.56.47; org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, brokenObj<176>, s2:181.55.47, e1:181.56.43, e2:181.56.47))))));
ASSUME (\forall anytype brokenObj<177>; boolImplies(boolAnd(is(brokenObj<177>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<177>, null)), integralLE(0, select(my_kiesLijstCount:191.48.35, brokenObj<177>))));
ASSUME (\forall anytype brokenObj<178>; boolImplies(boolAnd(is(brokenObj<178>, \type(org.jmlspecs.models.JMLEqualsSet)), refNE(brokenObj<178>, null), refEQ(select(the_list:181.166.38, brokenObj<178>), null)), integralEQ(select(size:181.171.44, brokenObj<178>), 0)));
ASSUME (\forall anytype brokenObj<179>; boolImplies(boolAnd(is(brokenObj<179>, \type(sos.koa.Candidate)), refNE(brokenObj<179>, null)), integralLE(java.lang.String.length.225.4(select(my_firstname:35.94.46, brokenObj<179>)), FIRSTNAME_MAX_LENGTH:35.38.20)));
ASSUME (\forall anytype brokenObj<180>; boolImplies(boolAnd(is(brokenObj<180>, \type(sos.koa.CandidateListMetadata)), refNE(brokenObj<180>, null)), integralLE(0, select(my_positieCount:191.55.34, brokenObj<180>))));
ASSUME (\forall anytype brokenObj<181>; boolImplies(boolAnd(is(brokenObj<181>, \type(org.jmlspecs.models.JMLValueSequence)), refNE(brokenObj<181>, null)), refEQ(select(owner:8.45.28, brokenObj<181>), null)));
ASSUME (\forall anytype brokenObj<182>; boolImplies(boolAnd(is(brokenObj<182>, \type(sos.koa.CandidateList)), refNE(brokenObj<182>, null)), integralLE(java.util.Map.size.102.4(state, select(my_kieskringen:33.37.55, brokenObj<182>)), MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20)));
ASSUME (\forall anytype brokenObj<183>; refEQ(java.lang.Object#objectState(state, brokenObj<183>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<184>; typeEQ(java.lang.Object#_getClass(state, brokenObj<184>), \typeof(brokenObj<184>)));
ASSUME (\forall anytype brokenObj<185>; refEQ(java.lang.Object#objectState(state, brokenObj<185>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<186>; typeEQ(java.lang.Object#_getClass(state, brokenObj<186>), \typeof(brokenObj<186>)));
ASSUME (\forall anytype brokenObj<187>; refEQ(java.lang.Object#objectState(state, brokenObj<187>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<188>; typeEQ(java.lang.Object#_getClass(state, brokenObj<188>), \typeof(brokenObj<188>)));
ASSUME (\forall anytype brokenObj<189>; refEQ(java.lang.Object#objectState(state, brokenObj<189>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<190>; typeEQ(java.lang.Object#_getClass(state, brokenObj<190>), \typeof(brokenObj<190>)));
ASSUME (\forall anytype brokenObj<191>; refEQ(java.lang.Object#objectState(state, brokenObj<191>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<192>; typeEQ(java.lang.Object#_getClass(state, brokenObj<192>), \typeof(brokenObj<192>)));
ASSUME (\forall anytype brokenObj<193>; integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<193>), org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(select(_length:38.194.31, brokenObj<193>))));
ASSUME (\forall anytype brokenObj<194>; refEQ(java.lang.Object#objectState(state, brokenObj<194>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<195>; typeEQ(java.lang.Object#_getClass(state, brokenObj<195>), \typeof(brokenObj<195>)));
ASSUME (\forall anytype brokenObj<196>; refEQ(java.lang.Throwable#_message(state, brokenObj<196>), java.lang.Throwable.getMessage.73.4(state, brokenObj<196>)));
ASSUME (\forall anytype brokenObj<197>; refEQ(java.lang.Throwable#_cause(state, brokenObj<197>), java.lang.Throwable.getCause.83.4(state, brokenObj<197>)));
ASSUME (\forall anytype brokenObj<198>; boolEq(java.lang.Throwable#causeKnown(state, brokenObj<198>), refNE(java.lang.Throwable.getCause.83.4(state, brokenObj<198>), null)));
ASSUME (\forall anytype brokenObj<199>; refEQ(java.lang.Throwable#_stackTrace(state, brokenObj<199>), java.lang.Throwable.getStackTrace.129.4(state, brokenObj<199>)));
ASSUME (\forall anytype brokenObj<200>; refEQ(java.lang.Object#objectState(state, brokenObj<200>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<201>; typeEQ(java.lang.Object#_getClass(state, brokenObj<201>), \typeof(brokenObj<201>)));
ASSUME (\forall anytype brokenObj<202>; refEQ(java.lang.Object#objectState(state, brokenObj<202>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<203>; typeEQ(java.lang.Object#_getClass(state, brokenObj<203>), \typeof(brokenObj<203>)));
ASSUME (\forall anytype brokenObj<204>; refEQ(java.lang.Object#objectState(state, brokenObj<204>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<205>; typeEQ(java.lang.Object#_getClass(state, brokenObj<205>), \typeof(brokenObj<205>)));
ASSUME (\forall anytype brokenObj<206>; integralEQ(java.lang.Integer#theInteger(state, brokenObj<206>), java.lang.Integer.intValue.329.4(brokenObj<206>)));
ASSUME (\forall anytype brokenObj<207>; refEQ(java.lang.Object#objectState(state, brokenObj<207>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<208>; typeEQ(java.lang.Object#_getClass(state, brokenObj<208>), \typeof(brokenObj<208>)));
ASSUME (\forall anytype brokenObj<209>; refEQ(java.lang.Object#objectState(state, brokenObj<209>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<210>; typeEQ(java.lang.Object#_getClass(state, brokenObj<210>), \typeof(brokenObj<210>)));
ASSUME (\forall anytype brokenObj<211>; refEQ(java.lang.Object#objectState(state, brokenObj<211>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<212>; typeEQ(java.lang.Object#_getClass(state, brokenObj<212>), \typeof(brokenObj<212>)));
ASSUME (\forall anytype brokenObj<213>; refEQ(java.lang.Object#objectState(state, brokenObj<213>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<214>; typeEQ(java.lang.Object#_getClass(state, brokenObj<214>), \typeof(brokenObj<214>)));
ASSUME (\forall anytype brokenObj<215>; integralEQ(java.lang.Character#ch_(state, brokenObj<215>), java.lang.Character.charValue.210.4(brokenObj<215>)));
ASSUME (\forall anytype brokenObj<216>; refEQ(java.lang.Object#objectState(state, brokenObj<216>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<217>; typeEQ(java.lang.Object#_getClass(state, brokenObj<217>), \typeof(brokenObj<217>)));
ASSUME (\forall anytype brokenObj<218>; refEQ(java.lang.Object#objectState(state, brokenObj<218>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<219>; typeEQ(java.lang.Object#_getClass(state, brokenObj<219>), \typeof(brokenObj<219>)));
ASSUME (\forall anytype brokenObj<220>; refEQ(java.lang.Object#objectState(state, brokenObj<220>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<221>; typeEQ(java.lang.Object#_getClass(state, brokenObj<221>), \typeof(brokenObj<221>)));
ASSUME (\forall anytype brokenObj<222>; refEQ(java.lang.Object#objectState(state, brokenObj<222>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<223>; typeEQ(java.lang.Object#_getClass(state, brokenObj<223>), \typeof(brokenObj<223>)));
ASSUME (\forall anytype brokenObj<224>; refEQ(java.lang.Object#objectState(state, brokenObj<224>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<225>; typeEQ(java.lang.Object#_getClass(state, brokenObj<225>), \typeof(brokenObj<225>)));
ASSUME (\forall anytype brokenObj<226>; refEQ(java.lang.Object#objectState(state, brokenObj<226>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<227>; typeEQ(java.lang.Object#_getClass(state, brokenObj<227>), \typeof(brokenObj<227>)));
ASSUME (\forall anytype brokenObj<228>; refEQ(java.lang.Throwable#_message(state, brokenObj<228>), java.lang.Throwable.getMessage.73.4(state, brokenObj<228>)));
ASSUME (\forall anytype brokenObj<229>; refEQ(java.lang.Throwable#_cause(state, brokenObj<229>), java.lang.Throwable.getCause.83.4(state, brokenObj<229>)));
ASSUME (\forall anytype brokenObj<230>; boolEq(java.lang.Throwable#causeKnown(state, brokenObj<230>), refNE(java.lang.Throwable.getCause.83.4(state, brokenObj<230>), null)));
ASSUME (\forall anytype brokenObj<231>; refEQ(java.lang.Throwable#_stackTrace(state, brokenObj<231>), java.lang.Throwable.getStackTrace.129.4(state, brokenObj<231>)));
ASSUME (\forall anytype brokenObj<232>; refEQ(java.lang.Object#objectState(state, brokenObj<232>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<233>; typeEQ(java.lang.Object#_getClass(state, brokenObj<233>), \typeof(brokenObj<233>)));
ASSUME (\forall anytype brokenObj<234>; refEQ(java.lang.Object#objectState(state, brokenObj<234>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<235>; typeEQ(java.lang.Object#_getClass(state, brokenObj<235>), \typeof(brokenObj<235>)));
ASSUME (\forall anytype brokenObj<236>; integralEQ(org.jmlspecs.models.JMLChar#theChar(state, brokenObj<236>), select(value:47.45.25, brokenObj<236>)));
ASSUME (\forall anytype brokenObj<237>; refEQ(java.lang.Object#objectState(state, brokenObj<237>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<238>; typeEQ(java.lang.Object#_getClass(state, brokenObj<238>), \typeof(brokenObj<238>)));
ASSUME (\forall anytype brokenObj<239>; refEQ(java.lang.Object#objectState(state, brokenObj<239>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<240>; typeEQ(java.lang.Object#_getClass(state, brokenObj<240>), \typeof(brokenObj<240>)));
ASSUME (\forall anytype brokenObj<241>; refEQ(java.lang.Object#objectState(state, brokenObj<241>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<242>; typeEQ(java.lang.Object#_getClass(state, brokenObj<242>), \typeof(brokenObj<242>)));
VAR anytype state:96.14; anytype state:97.12; anytype state:98.17 IN
   {  my_number:37.34[this] = 0;
      state = state:96.14;
      ASSERT (\lblneg NonNull:44.14@97.12 refNE(interned(1), null));
      my_name:44.46[this] = interned(1);
      state = state:97.12;
      my_kiesKring:50.40[this] = null;
      state = state:98.17;
      EC = ecReturn
   !  SKIP
   }
END;
ASSUME boolAnd((\forall anytype brokenObj<243>; boolAnd(refNE(sos.koa.District.name.121.2(state, brokenObj<243>), null), integralLE(java.lang.String.length.225.4(sos.koa.District.name.121.2(state, brokenObj<243>)), DISTRICT_NAME_MAX_LENGTH:32.20), refEQ(sos.koa.District.name.121.2(state, brokenObj<243>), select(my_name:44.46, brokenObj<243>)), is(sos.koa.District.name.121.2(state, brokenObj<243>), \type(String)))), (\forall anytype brokenObj<243>; boolAnd(refNE(sos.koa.District.name.121.2(state, brokenObj<243>), null), integralLE(java.lang.String.length.225.4(sos.koa.District.name.121.2(state, brokenObj<243>)), DISTRICT_NAME_MAX_LENGTH:32.20), refEQ(sos.koa.District.name.121.2(state, brokenObj<243>), select(my_name:44.46, brokenObj<243>)), is(sos.koa.District.name.121.2(state, brokenObj<243>), \type(String)))));
ASSUME boolAnd((\forall anytype brokenObj<244>; boolAnd(refEQ(sos.koa.District.kiesKring.134.2(state, brokenObj<244>), select(my_kiesKring:50.40, brokenObj<244>)), is(sos.koa.District.kiesKring.134.2(state, brokenObj<244>), \type(KiesKring)))), (\forall anytype brokenObj<244>; boolAnd(refEQ(sos.koa.District.kiesKring.134.2(state, brokenObj<244>), select(my_kiesKring:50.40, brokenObj<244>)), is(sos.koa.District.kiesKring.134.2(state, brokenObj<244>), \type(KiesKring)))));
ASSUME boolAnd((\forall anytype brokenObj<245>; boolAnd(integralLE(0, sos.koa.District.number.108.2(state, brokenObj<245>)), integralLE(sos.koa.District.number.108.2(state, brokenObj<245>), MAX_DISTRICTS_PER_KIESKRING:15.48.19), integralEQ(sos.koa.District.number.108.2(state, brokenObj<245>), select(my_number:37.34, brokenObj<245>)), is(sos.koa.District.number.108.2(state, brokenObj<245>), \type(int)))), (\forall anytype brokenObj<245>; boolAnd(integralLE(0, sos.koa.District.number.108.2(state, brokenObj<245>)), integralLE(sos.koa.District.number.108.2(state, brokenObj<245>), MAX_DISTRICTS_PER_KIESKRING:15.48.19), integralEQ(sos.koa.District.number.108.2(state, brokenObj<245>), select(my_number:37.34, brokenObj<245>)), is(sos.koa.District.number.108.2(state, brokenObj<245>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<246>; boolAnd(integralEQ(java.lang.String.length.225.4(brokenObj<246>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(java.lang.String#stringSeq(state, this))), is(java.lang.String.length.225.4(brokenObj<246>), \type(int)))), (\forall anytype brokenObj<246>; boolAnd(integralEQ(java.lang.String.length.225.4(brokenObj<246>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(java.lang.String#stringSeq(state, this))), is(java.lang.String.length.225.4(brokenObj<246>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<247>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<247>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<247>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<247>))), is(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<247>), \type(int)))), (\forall anytype brokenObj<247>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<247>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<247>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<247>))), is(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<247>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<248>; is(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<248>), \type(bigint))), (\forall anytype brokenObj<248>; is(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<248>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<249>,  anObject<1>; boolAnd(boolImplies(boolAnd(refNE(anObject<1>, null), is(anObject<1>, \type(String)), refNE(anObject<1>, null)), boolEq(java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, java.lang.String#stringSeq(state, this), java.lang.String#stringSeq(state, cast(anObject<1>, \type(String)))))), boolImplies(refEQ(this, anObject<1>), java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>)), boolImplies(boolOr(refEQ(anObject<1>, null), boolNot(boolAnd(is(anObject<1>, \type(String)), refNE(anObject<1>, null)))), boolNot(java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>))), is(java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>), \type(boolean)))), (\forall anytype brokenObj<249>,  anObject<1>; boolAnd(boolImplies(boolAnd(refNE(anObject<1>, null), is(anObject<1>, \type(String)), refNE(anObject<1>, null)), boolEq(java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, java.lang.String#stringSeq(state, this), java.lang.String#stringSeq(state, cast(anObject<1>, \type(String)))))), boolImplies(refEQ(this, anObject<1>), java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>)), boolImplies(boolOr(refEQ(anObject<1>, null), boolNot(boolAnd(is(anObject<1>, \type(String)), refNE(anObject<1>, null)))), boolNot(java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>))), is(java.lang.String.equals.320.4(state, brokenObj<249>, anObject<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<250>,  obj<2>; boolAnd(boolImplies(boolAnd(refNE(obj<2>, null), is(obj<2>, \type(JMLValueSequence)), refNE(obj<2>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<250>, cast(obj<2>, \type(JMLValueSequence))), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(cast(obj<2>, \type(JMLValueSequence)), brokenObj<250>)))), boolImplies(boolAnd(refNE(obj<2>, null), is(obj<2>, \type(JMLValueSequence)), refNE(obj<2>, null), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>)), boolEq(select(containsNull:39.52.32, brokenObj<250>), select(containsNull:39.52.32, cast(obj<2>, \type(JMLValueSequence))))), boolImplies(boolOr(refEQ(obj<2>, null), boolNot(boolAnd(is(obj<2>, \type(JMLValueSequence)), refNE(obj<2>, null)))), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>))), is(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>), \type(boolean)))), (\forall anytype brokenObj<250>,  obj<2>; boolAnd(boolImplies(boolAnd(refNE(obj<2>, null), is(obj<2>, \type(JMLValueSequence)), refNE(obj<2>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<250>, cast(obj<2>, \type(JMLValueSequence))), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(cast(obj<2>, \type(JMLValueSequence)), brokenObj<250>)))), boolImplies(boolAnd(refNE(obj<2>, null), is(obj<2>, \type(JMLValueSequence)), refNE(obj<2>, null), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>)), boolEq(select(containsNull:39.52.32, brokenObj<250>), select(containsNull:39.52.32, cast(obj<2>, \type(JMLValueSequence))))), boolImplies(boolOr(refEQ(obj<2>, null), boolNot(boolAnd(is(obj<2>, \type(JMLValueSequence)), refNE(obj<2>, null)))), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>))), is(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<250>, obj<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<251>,  s2<17>; boolAnd(boolImplies(boolAnd(refNE(s2<17>, null), refNE(s2<17>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<251>, s2<17>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<251>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<17>)), (\forall int i:38.805.29; boolImplies(boolAnd(integralLE(0, i:38.805.29), integralLT(i:38.805.29, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<251>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<17>, i:38.805.29), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<17>, i:38.805.29), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<251>, i:38.805.29))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<17>, i:38.805.29), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<251>, i:38.805.29), null)))))))), is(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<251>, s2<17>), \type(boolean)))), (\forall anytype brokenObj<251>,  s2<17>; boolAnd(boolImplies(boolAnd(refNE(s2<17>, null), refNE(s2<17>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<251>, s2<17>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<251>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<17>)), (\forall int i:38.805.29; boolImplies(boolAnd(integralLE(0, i:38.805.29), integralLT(i:38.805.29, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<251>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<17>, i:38.805.29), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<17>, i:38.805.29), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<251>, i:38.805.29))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<17>, i:38.805.29), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<251>, i:38.805.29), null)))))))), is(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<251>, s2<17>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<252>,  ob2<1>; boolAnd(boolImplies(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<252>, ob2<1>), boolAnd(refNE(ob2<1>, null), (* ob2 is not distinguishable from this,
                          except by using mutation or == *))), is(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<252>, ob2<1>), \type(boolean)))), (\forall anytype brokenObj<252>,  ob2<1>; boolAnd(boolImplies(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<252>, ob2<1>), boolAnd(refNE(ob2<1>, null), (* ob2 is not distinguishable from this,
                          except by using mutation or == *))), is(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<252>, ob2<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<253>,  i<8>; boolAnd(boolImplies(boolAnd(integralLE(0, i<8>), integralLT(i<8>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<253>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>)), select(elementType:39.44.30, brokenObj<253>))), boolImplies(boolAnd(integralLE(0, i<8>), integralLT(i<8>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<253>)), boolNot(select(containsNull:39.52.32, brokenObj<253>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>), null)), integralLE(0, i<8>), integralLT(i<8>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<253>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>), \type(JMLType)))), (\forall anytype brokenObj<253>,  i<8>; boolAnd(boolImplies(boolAnd(integralLE(0, i<8>), integralLT(i<8>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<253>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>)), select(elementType:39.44.30, brokenObj<253>))), boolImplies(boolAnd(integralLE(0, i<8>), integralLT(i<8>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<253>)), boolNot(select(containsNull:39.52.32, brokenObj<253>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>), null)), integralLE(0, i<8>), integralLT(i<8>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<253>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<253>, i<8>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<254>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<254>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<254>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<254>))), is(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<254>), \type(int)))), (\forall anytype brokenObj<254>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<254>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<254>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<254>))), is(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<254>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj,  ls,  ls2,  e1,  e2,  n; boolAnd(boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc, alloc:131.60.15, e1, null)), 1)), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:131.60.15, alloc:131.64.22, e1, ls)), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), boolEq(refEQ(select(next:131.101.34, ls), null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), 1)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(next:131.101.34, ls), null)), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(select(next:131.101.34, ls)))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, ls), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(e1, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(e1, ls)), e1))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls, 0), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), integralLT(0, n), integralLT(n, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.289.19(ls, n), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(select(next:131.101.34, ls), integralSub(n, 1))))), is(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), \type(boolean)))), (\forall anytype brokenObj,  ls,  ls2,  e1,  e2,  n; boolAnd(boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc, alloc:131.60.15, e1, null)), 1)), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:131.60.15, alloc:131.64.22, e1, ls)), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(ls, null), boolEq(refEQ(select(next:131.101.34, ls), null), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), 1)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(next:131.101.34, ls), null)), integralEQ(org.jmlspecs.models.JMLListValueNode.size.377.26(ls), integralAdd(1, org.jmlspecs.models.JMLListValueNode.size.377.26(select(next:131.101.34, ls)))))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, ls), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(refNE(e1, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(e1, ls)), e1))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), refNE(select(val:131.97.25, ls), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls, 0), org.jmlspecs.models.JMLListValueNode.head.227.4(ls)))), boolEq(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), boolImplies(boolAnd(refNE(ls, null), integralLT(0, n), integralLT(n, org.jmlspecs.models.JMLListValueNode.size.377.26(ls))), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.289.19(ls, n), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(select(next:131.101.34, ls), integralSub(n, 1))))), is(org.jmlspecs.models.JMLListValueNode.equational_theory.90.24(brokenObj, ls, ls2, e1, e2, n), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<1>,  i; boolAnd(integralLE(0, i), integralLT(i, org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<1>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.289.19(brokenObj<1>, i), \type(JMLType)))), (\forall anytype brokenObj<1>,  i; boolAnd(integralLE(0, i), integralLT(i, org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<1>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.289.19(brokenObj<1>, i), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<2>,  a_candidate_code; boolAnd(boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refNE(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), null)), boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refEQ(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<2>), java.lang.Integer.Integer.300.4(alloc:131.64.22, alloc:33.383.49, a_candidate_code)))), is(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), \type(Candidate)))), (\forall anytype brokenObj<2>,  a_candidate_code; boolAnd(boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refNE(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), null)), boolImplies(boolAnd(integralLE(0, a_candidate_code), sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<2>, a_candidate_code)), refEQ(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<2>), java.lang.Integer.Integer.300.4(alloc:131.64.22, alloc:33.383.49, a_candidate_code)))), is(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<2>, a_candidate_code), \type(Candidate)))));
ASSUME boolAnd((\forall anytype brokenObj<3>,  a_candidate_code<1>; boolAnd(boolImplies(integralLE(0, a_candidate_code<1>), boolEq(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<3>), java.lang.Integer.Integer.300.4(alloc:33.383.49, alloc:33.400.57, a_candidate_code<1>)))), is(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), \type(boolean)))), (\forall anytype brokenObj<3>,  a_candidate_code<1>; boolAnd(boolImplies(integralLE(0, a_candidate_code<1>), boolEq(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<3>), java.lang.Integer.Integer.300.4(alloc:33.383.49, alloc:33.400.57, a_candidate_code<1>)))), is(sos.koa.CandidateList.validCandidate.390.2(state, brokenObj<3>, a_candidate_code<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<4>,  key; boolAnd(boolImplies(refNE(key, null), boolEq(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), (\exists Map.Entry e:167.118.32; boolAnd(is(e:167.118.32, \type(Map.Entry)), isAllocated(e:167.118.32, alloc), refNE(e:167.118.32, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.118.32), refNE(e:167.118.32, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.118.32), key))))), is(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), \type(boolean)))), (\forall anytype brokenObj<4>,  key; boolAnd(boolImplies(refNE(key, null), boolEq(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), (\exists Map.Entry e:167.118.32; boolAnd(is(e:167.118.32, \type(Map.Entry)), isAllocated(e:167.118.32, alloc), refNE(e:167.118.32, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.118.32), refNE(e:167.118.32, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.118.32), key))))), is(java.util.Map.containsKey.115.4(state, brokenObj<4>, key), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<5>; boolAnd(integralEQ(java.lang.String.length.225.4(brokenObj<5>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(java.lang.String#stringSeq(state, this))), is(java.lang.String.length.225.4(brokenObj<5>), \type(int)))), (\forall anytype brokenObj<5>; boolAnd(integralEQ(java.lang.String.length.225.4(brokenObj<5>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(java.lang.String#stringSeq(state, this))), is(java.lang.String.length.225.4(brokenObj<5>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<6>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<6>), null), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), select(val:131.97.25, brokenObj<6>)))), boolImplies(refEQ(select(val:131.97.25, brokenObj<6>), null), refEQ(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null)), is(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), \type(JMLType)))), (\forall anytype brokenObj<6>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<6>), null), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), select(val:131.97.25, brokenObj<6>)))), boolImplies(refEQ(select(val:131.97.25, brokenObj<6>), null), refEQ(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), null)), is(org.jmlspecs.models.JMLListValueNode.head.227.4(brokenObj<6>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<7>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<7>)), is(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), \type(bigint)))), (\forall anytype brokenObj<7>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<7>)), is(org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<7>), \type(bigint)))));
ASSUME boolAnd((\forall anytype brokenObj<8>,  ob2; boolAnd(boolImplies(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), boolAnd(refNE(ob2, null), (* ob2 is not distinguishable from this,
                          except by using mutation or == *))), is(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), \type(boolean)))), (\forall anytype brokenObj<8>,  ob2; boolAnd(boolImplies(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), boolAnd(refNE(ob2, null), (* ob2 is not distinguishable from this,
                          except by using mutation or == *))), is(org.jmlspecs.models.JMLType.equals.52.4(state, brokenObj<8>, ob2), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<9>,  elem; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem))), is(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem), \type(boolean)))), (\forall anytype brokenObj<9>,  elem; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem))), is(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<9>, elem), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<10>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<10>)), is(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), \type(int)))), (\forall anytype brokenObj<10>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<10>)), is(org.jmlspecs.models.JMLListEqualsNode.int_size.405.4(brokenObj<10>), \type(int)))));
ASSUME boolAnd((\forall anytype o1,  o2; boolAnd(boolEq(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), termConditional(refEQ(o1, null), refEQ(o2, null), java.lang.Object.equals.89.4(state, o1, o2))), is(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), \type(boolean)))), (\forall anytype o1,  o2; boolAnd(boolEq(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), termConditional(refEQ(o1, null), refEQ(o2, null), java.lang.Object.equals.89.4(state, o1, o2))), is(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o1, o2), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<11>,  obj; boolAnd(boolImplies(refEQ(brokenObj<11>, obj), java.lang.Object.equals.89.4(state, brokenObj<11>, obj)), boolImplies(boolAnd(refNE(obj, null), typeEQ(\typeof(brokenObj<11>), \type(Object))), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), refEQ(brokenObj<11>, obj))), boolImplies(refEQ(obj, null), boolNot(java.lang.Object.equals.89.4(state, brokenObj<11>, obj))), boolImplies(refNE(obj, null), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), java.lang.Object.equals.89.4(state, obj, brokenObj<11>))), is(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), \type(boolean)))), (\forall anytype brokenObj<11>,  obj; boolAnd(boolImplies(refEQ(brokenObj<11>, obj), java.lang.Object.equals.89.4(state, brokenObj<11>, obj)), boolImplies(boolAnd(refNE(obj, null), typeEQ(\typeof(brokenObj<11>), \type(Object))), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), refEQ(brokenObj<11>, obj))), boolImplies(refEQ(obj, null), boolNot(java.lang.Object.equals.89.4(state, brokenObj<11>, obj))), boolImplies(refNE(obj, null), boolEq(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), java.lang.Object.equals.89.4(state, obj, brokenObj<11>))), is(java.lang.Object.equals.89.4(state, brokenObj<11>, obj), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<12>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), (\forall Object e:181.447.47; boolImplies(boolAnd(is(e:181.447.47, \type(Object)), isAllocated(e:181.447.47, alloc), refNE(e:181.447.47, null)), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<12>, e:181.447.47))))), boolEq(refEQ(select(the_list:181.166.38, brokenObj<12>), null), org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>)), is(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), \type(boolean)))), (\forall anytype brokenObj<12>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), (\forall Object e:181.447.47; boolImplies(boolAnd(is(e:181.447.47, \type(Object)), isAllocated(e:181.447.47, alloc), refNE(e:181.447.47, null)), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<12>, e:181.447.47))))), boolEq(refEQ(select(the_list:181.166.38, brokenObj<12>), null), org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>)), is(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<12>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<13>,  key<1>; boolAnd(boolImplies(boolNot(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>)), refEQ(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), null)), boolImplies(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>), (\exists Entry e:167.140.34; boolAnd(is(e:167.140.34, \type(Entry)), isAllocated(e:167.140.34, alloc), refNE(e:167.140.34, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.140.34), refNE(e:167.140.34, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.140.34), key<1>), java.lang.Object.equals.89.4(state, java.util.Map.get.134.4(state, brokenObj<13>, key<1>), java.util.Map$Entry#abstractValue(state, e:167.140.34))))), is(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), \type(java.lang.Object)))), (\forall anytype brokenObj<13>,  key<1>; boolAnd(boolImplies(boolNot(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>)), refEQ(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), null)), boolImplies(java.util.Map.containsKey.115.4(state, brokenObj<13>, key<1>), (\exists Entry e:167.140.34; boolAnd(is(e:167.140.34, \type(Entry)), isAllocated(e:167.140.34, alloc), refNE(e:167.140.34, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, this), e:167.140.34), refNE(e:167.140.34, null), org.jmlspecs.models.JMLNullSafe.equals.32.4(state, java.util.Map$Entry#abstractKey(state, e:167.140.34), key<1>), java.lang.Object.equals.89.4(state, java.util.Map.get.134.4(state, brokenObj<13>, key<1>), java.util.Map$Entry#abstractValue(state, e:167.140.34))))), is(java.util.Map.get.134.4(state, brokenObj<13>, key<1>), \type(java.lang.Object)))));
ASSUME boolAnd((\forall anytype brokenObj<14>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<14>), 0)), is(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), \type(boolean)))), (\forall anytype brokenObj<14>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<14>), 0)), is(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(brokenObj<14>), \type(boolean)))));
ASSUME (\forall anytype brokenObj<15>; integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<15>), org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(select(_length:38.194.31, brokenObj<15>))));
ASSUME boolAnd((\forall anytype brokenObj<16>; is(org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<16>), \type(bigint))), (\forall anytype brokenObj<16>; is(org.jmlspecs.models.JMLListValueNode.size.377.26(brokenObj<16>), \type(bigint))));
ASSUME boolAnd((\forall anytype s,  s2,  e1<1>,  e2<1>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:33.400.57, alloc:181.66.37), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), boolOr(refEQ(e2<1>, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), boolOr(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.66.37, alloc:181.77.19)), 0)), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>)), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 1)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), (\forall Object o:181.85.40; boolImplies(boolAnd(is(o:181.85.40, \type(Object)), isAllocated(o:181.85.40, alloc), refNE(o:181.85.40, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, o:181.85.40)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, o:181.85.40))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.77.19, alloc:181.91.19), e1<1>), org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.91.19, alloc:181.91.57))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), termConditional(refEQ(e2<1>, null), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), null)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), termConditional(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(s, s2), e1<1>), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(s), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 0))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc:181.91.57, alloc:181.122.17, e1<1>), org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.122.17, alloc:181.122.46), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2, s))), is(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), \type(boolean)))), (\forall anytype s,  s2,  e1<1>,  e2<1>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:33.400.57, alloc:181.66.37), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), boolOr(refEQ(e2<1>, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), boolOr(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e2<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.66.37, alloc:181.77.19)), 0)), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>)), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 1)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), (\forall Object o:181.85.40; boolImplies(boolAnd(is(o:181.85.40, \type(Object)), isAllocated(o:181.85.40, alloc), refNE(o:181.85.40, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, o:181.85.40)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, o:181.85.40))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.77.19, alloc:181.91.19), e1<1>), org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.91.19, alloc:181.91.57))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, null), e2<1>), termConditional(refEQ(e2<1>, null), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), null)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolImplies(refNE(e1<1>, null), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, s, e1<1>), e2<1>), termConditional(java.lang.Object.equals.89.4(state, e1<1>, e2<1>), s, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, s, e2<1>), e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(s, s2), e1<1>), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>)))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(s, s2), e1<1>), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s, e1<1>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2, e1<1>))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(s), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(s), 0))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc:181.91.57, alloc:181.122.17, e1<1>), org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc:181.122.17, alloc:181.122.46), e1<1>))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s, s2), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s, s2), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, s, s2))))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2, s))), boolEq(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(s, s2), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2, s))), is(org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, s, s2, e1<1>, e2<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<17>,  s2<1>; boolAnd(boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null)), boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null), (\forall Object e:181.680.29; boolImplies(boolAnd(is(e:181.680.29, \type(Object)), isAllocated(e:181.680.29, alloc), refNE(e:181.680.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), e:181.680.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<17>, e:181.680.29), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<1>, e:181.680.29))))))), is(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<17>,  s2<1>; boolAnd(boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null)), boolImplies(boolAnd(refNE(s2<1>, null), refNE(s2<1>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), null), (\forall Object e:181.680.29; boolImplies(boolAnd(is(e:181.680.29, \type(Object)), isAllocated(e:181.680.29, alloc), refNE(e:181.680.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), e:181.680.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<17>, e:181.680.29), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<1>, e:181.680.29))))))), is(org.jmlspecs.models.JMLEqualsSet.intersection.677.4(brokenObj<17>, s2<1>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype alloc_,  allocNew_,  e; boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), e), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), 1), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), alloc_)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), allocNew_))), (\forall anytype alloc_,  allocNew_,  e; boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), e), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), 1), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), alloc_)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4(state, alloc_, allocNew_, e), allocNew_))));
ASSUME boolAnd((\forall anytype alloc_<1>,  allocNew_<1>; boolAnd(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), alloc_<1>)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), allocNew_<1>))), (\forall anytype alloc_<1>,  allocNew_<1>; boolAnd(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), refNE(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>)), \type(org.jmlspecs.models.JMLEqualsSet)), boolNot(isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), alloc_<1>)), isAllocated(org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4(alloc_<1>, allocNew_<1>), allocNew_<1>))));
ASSUME boolAnd((\forall anytype brokenObj<18>,  s2<2>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), (\forall Object e:181.411.36; boolImplies(boolAnd(is(e:181.411.36, \type(Object)), isAllocated(e:181.411.36, alloc), refNE(e:181.411.36, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<18>, e:181.411.36), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, cast(s2<2>, \type(JMLEqualsSet)), e:181.411.36)))))), boolImplies(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), boolEq(select(containsNull:39.52.32, brokenObj<18>), select(containsNull:39.52.32, cast(s2<2>, \type(JMLEqualsSet)))))), is(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), \type(boolean)))), (\forall anytype brokenObj<18>,  s2<2>; boolAnd(boolEq(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), (\forall Object e:181.411.36; boolImplies(boolAnd(is(e:181.411.36, \type(Object)), isAllocated(e:181.411.36, alloc), refNE(e:181.411.36, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<18>, e:181.411.36), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, cast(s2<2>, \type(JMLEqualsSet)), e:181.411.36)))))), boolImplies(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), boolAnd(refNE(s2<2>, null), is(s2<2>, \type(JMLEqualsSet)), refNE(s2<2>, null), boolEq(select(containsNull:39.52.32, brokenObj<18>), select(containsNull:39.52.32, cast(s2<2>, \type(JMLEqualsSet)))))), is(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<18>, s2<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<19>; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), 0)), boolImplies(boolNot(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>)), (\exists Object e:181.463.36; boolAnd(is(e:181.463.36, \type(Object)), isAllocated(e:181.463.36, alloc), refNE(e:181.463.36, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<19>, e:181.463.36), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), integralAdd(1, org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<19>, e:181.463.36))))))), is(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), \type(int)))), (\forall anytype brokenObj<19>; boolAnd(boolImplies(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), 0)), boolImplies(boolNot(org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4(brokenObj<19>)), (\exists Object e:181.463.36; boolAnd(is(e:181.463.36, \type(Object)), isAllocated(e:181.463.36, alloc), refNE(e:181.463.36, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<19>, e:181.463.36), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), integralAdd(1, org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<19>, e:181.463.36))))))), is(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<19>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<20>,  s2<3>; boolAnd(boolImplies(boolAnd(refNE(s2<3>, null), refNE(s2<3>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2<3>, brokenObj<20>))), is(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), \type(boolean)))), (\forall anytype brokenObj<20>,  s2<3>; boolAnd(boolImplies(boolAnd(refNE(s2<3>, null), refNE(s2<3>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(s2<3>, brokenObj<20>))), is(org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4(brokenObj<20>, s2<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype i<1>; boolAnd(refNE(java.lang.Integer.toString.249.4(i<1>), null), java.lang.String.equals.320.4(state, java.lang.Integer.toString.249.4(i<1>), java.lang.Integer.toString.115.4(i<1>, 10)), is(java.lang.Integer.toString.249.4(i<1>), \type(java.lang.String)))), (\forall anytype i<1>; boolAnd(refNE(java.lang.Integer.toString.249.4(i<1>), null), java.lang.String.equals.320.4(state, java.lang.Integer.toString.249.4(i<1>), java.lang.Integer.toString.115.4(i<1>, 10)), is(java.lang.Integer.toString.249.4(i<1>), \type(java.lang.String)))));
ASSUME boolAnd((\forall anytype brokenObj<21>,  anObject; boolAnd(boolImplies(boolAnd(refNE(anObject, null), is(anObject, \type(String)), refNE(anObject, null)), boolEq(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, java.lang.String#stringSeq(state, this), java.lang.String#stringSeq(state, cast(anObject, \type(String)))))), boolImplies(refEQ(this, anObject), java.lang.String.equals.320.4(state, brokenObj<21>, anObject)), boolImplies(boolOr(refEQ(anObject, null), boolNot(boolAnd(is(anObject, \type(String)), refNE(anObject, null)))), boolNot(java.lang.String.equals.320.4(state, brokenObj<21>, anObject))), is(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), \type(boolean)))), (\forall anytype brokenObj<21>,  anObject; boolAnd(boolImplies(boolAnd(refNE(anObject, null), is(anObject, \type(String)), refNE(anObject, null)), boolEq(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, java.lang.String#stringSeq(state, this), java.lang.String#stringSeq(state, cast(anObject, \type(String)))))), boolImplies(refEQ(this, anObject), java.lang.String.equals.320.4(state, brokenObj<21>, anObject)), boolImplies(boolOr(refEQ(anObject, null), boolNot(boolAnd(is(anObject, \type(String)), refNE(anObject, null)))), boolNot(java.lang.String.equals.320.4(state, brokenObj<21>, anObject))), is(java.lang.String.equals.320.4(state, brokenObj<21>, anObject), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<22>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>))), is(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), \type(int)))), (\forall anytype brokenObj<22>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<22>))), is(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<22>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<23>; is(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<23>), \type(bigint))), (\forall anytype brokenObj<23>; is(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<23>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<24>,  s<1>,  s2<4>,  e1<2>,  e2<2>,  n<1>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolNot(org.jmlspecs.models.JMLValueSequence.has.750.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:181.122.46, alloc:38.65.34), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.65.34, alloc:38.67.33)), 0)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.67.33, alloc:38.69.33, e1<2>)), 1)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.69.33, alloc:38.73.16, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>), org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>), integralAdd(n<1>, 1)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>), n<1>), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), (\forall int i:38.117.34; boolImplies(boolAnd(integralLE(0, i:38.117.34), integralLT(i:38.117.34, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34), null))))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<4>))), boolOr(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.73.16, alloc:38.137.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.137.14, alloc:38.138.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.138.25, alloc:38.141.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.141.14, alloc:38.142.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.142.25, alloc:38.145.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.145.14, alloc:38.146.25), integralNeg(1), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.146.25, alloc:38.149.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.149.14, alloc:38.150.25), 0, e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s<1>), org.jmlspecs.models.JMLValueSequence.first.1044.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(s<1>), org.jmlspecs.models.JMLValueSequence.last.1083.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s<1>, s2<4>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<4>, s<1>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<4>, s<1>))), is(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), \type(boolean)))), (\forall anytype brokenObj<24>,  s<1>,  s2<4>,  e1<2>,  e2<2>,  n<1>; boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolNot(org.jmlspecs.models.JMLValueSequence.has.750.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:181.122.46, alloc:38.65.34), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.65.34, alloc:38.67.33)), 0)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.67.33, alloc:38.69.33, e1<2>)), 1)), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.69.33, alloc:38.73.16, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>), 0), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(refNE(e1<2>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>), org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(s<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>), integralAdd(n<1>, 1)), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(integralNeg(1), n<1>), integralLT(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>)), refNE(e1<2>, null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>), n<1>), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(boolAnd(integralLE(0, n<1>), integralLE(n<1>, org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>))), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(s<1>, n<1>, e1<2>)), integralAdd(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1)))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), (\forall int i:38.117.34; boolImplies(boolAnd(integralLE(0, i:38.117.34), integralLT(i:38.117.34, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<4>, i:38.117.34), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s<1>, i:38.117.34), null))))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolAnd(boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s<1>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<4>))), boolOr(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(s<1>), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, s<1>), 0))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.73.16, alloc:38.137.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.137.14, alloc:38.138.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.138.25, alloc:38.141.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.141.14, alloc:38.142.25), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.142.25, alloc:38.145.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.145.14, alloc:38.146.25), integralNeg(1), e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.146.25, alloc:38.149.14, e1<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc:38.149.14, alloc:38.150.25), 0, e1<2>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(s<1>), org.jmlspecs.models.JMLValueSequence.first.1044.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.size.612.26(s<1>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(s<1>), org.jmlspecs.models.JMLValueSequence.last.1083.4(s<1>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s<1>, s2<4>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s<1>, s2<4>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, s<1>, s2<4>))))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<4>, s<1>))), boolEq(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(s<1>, s2<4>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<4>, s<1>))), is(org.jmlspecs.models.JMLValueSequence.equational_theory.172.24(brokenObj<24>, s<1>, s2<4>, e1<2>, e2<2>, n<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<25>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<25>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), \type(int))))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), (* \result is like this, but without the last item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0)), is(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), \type(JMLValueSequence)))), (\forall anytype brokenObj<25>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<25>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), \type(int))))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), (* \result is like this, but without the last item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<25>), 0)), is(org.jmlspecs.models.JMLValueSequence.header.1840.4(brokenObj<25>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<26>; boolAnd(boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))))), boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), refEQ(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 0)), is(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), \type(JMLType)))), (\forall anytype brokenObj<26>; boolAnd(boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))))), boolImplies(boolAnd(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<26>, cast(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 1), \type(int))), null)), refEQ(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<26>), 0)), is(org.jmlspecs.models.JMLValueSequence.last.1083.4(brokenObj<26>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<27>,  s2<5>; boolAnd(boolImplies(boolAnd(refNE(s2<5>, null), refNE(s2<5>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<27>, s2<5>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<27>, s2<5>))))), is(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), \type(boolean)))), (\forall anytype brokenObj<27>,  s2<5>; boolAnd(boolImplies(boolAnd(refNE(s2<5>, null), refNE(s2<5>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), boolAnd(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<27>, s2<5>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<27>, s2<5>))))), is(org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(brokenObj<27>, s2<5>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<28>,  item; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), item))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), 1)), org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)))), is(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), \type(JMLValueSequence)))), (\forall anytype brokenObj<28>,  item; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), item))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<28>), 1)), org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<28>, org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item)))), is(org.jmlspecs.models.JMLValueSequence.insertBack.2122.4(brokenObj<28>, item), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<29>,  s2<6>; boolAnd(boolImplies(boolAnd(refNE(s2<6>, null), refNE(s2<6>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<29>, s2<6>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<29>, s2<6>))))), is(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), \type(boolean)))), (\forall anytype brokenObj<29>,  s2<6>; boolAnd(boolImplies(boolAnd(refNE(s2<6>, null), refNE(s2<6>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<29>, s2<6>), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<29>, s2<6>))))), is(org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4(brokenObj<29>, s2<6>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<30>; boolAnd(integralEQ(java.util.Map.size.102.4(state, brokenObj<30>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(java.util.Map#theMap(state, this))), is(java.util.Map.size.102.4(state, brokenObj<30>), \type(int)))), (\forall anytype brokenObj<30>; boolAnd(integralEQ(java.util.Map.size.102.4(state, brokenObj<30>), org.jmlspecs.models.JMLEqualsSet.int_size.458.4(java.util.Map#theMap(state, this))), is(java.util.Map.size.102.4(state, brokenObj<30>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<31>,  ls<1>,  ls2<1>,  e1<3>,  e2<3>,  n<2>; boolAnd(boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:38.150.25, alloc:185.60.15, e1<3>, null)), 1)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:185.60.15, alloc:185.64.22, e1<3>, ls<1>)), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), boolEq(refEQ(select(next:185.101.35, ls<1>), null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), 1)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(next:185.101.35, ls<1>), null)), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(select(next:185.101.35, ls<1>)))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, select(val:185.97.24, ls<1>), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(e1<3>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, e1<3>, ls<1>)), e1<3>))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls<1>, 0), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), integralLT(0, n<2>), integralLT(n<2>, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(ls<1>, n<2>), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(select(next:185.101.35, ls<1>), integralSub(n<2>, 1))))), is(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), \type(boolean)))), (\forall anytype brokenObj<31>,  ls<1>,  ls2<1>,  e1<3>,  e2<3>,  n<2>; boolAnd(boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:38.150.25, alloc:185.60.15, e1<3>, null)), 1)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:185.60.15, alloc:185.64.22, e1<3>, ls<1>)), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(ls<1>, null), boolEq(refEQ(select(next:185.101.35, ls<1>), null), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), 1)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(next:185.101.35, ls<1>), null)), integralEQ(org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>), integralAdd(1, org.jmlspecs.models.JMLListEqualsNode.size.377.26(select(next:185.101.35, ls<1>)))))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, select(val:185.97.24, ls<1>), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(refNE(e1<3>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, e1<3>, ls<1>)), e1<3>))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), refNE(select(val:185.97.24, ls<1>), null)), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls<1>, 0), org.jmlspecs.models.JMLListEqualsNode.head.227.4(ls<1>)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), boolImplies(boolAnd(refNE(ls<1>, null), integralLT(0, n<2>), integralLT(n<2>, org.jmlspecs.models.JMLListEqualsNode.size.377.26(ls<1>))), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(ls<1>, n<2>), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(select(next:185.101.35, ls<1>), integralSub(n<2>, 1))))), is(org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<31>, ls<1>, ls2<1>, e1<3>, e2<3>, n<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<32>,  elem<1>; boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), (\forall Object e:181.651.29; boolImplies(boolAnd(is(e:181.651.29, \type(Object)), isAllocated(e:181.651.29, alloc), refNE(e:181.651.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), e:181.651.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, e:181.651.29), boolNot(boolOr(boolAnd(refEQ(e:181.651.29, null), refEQ(elem<1>, null)), boolAnd(refNE(e:181.651.29, null), java.lang.Object.equals.89.4(state, e:181.651.29, elem<1>)))))))), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), brokenObj<32>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), elem<1>)), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>)), integralSub(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<32>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, elem<1>), 1, 0))), is(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<32>,  elem<1>; boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), refNE(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), null), (\forall Object e:181.651.29; boolImplies(boolAnd(is(e:181.651.29, \type(Object)), isAllocated(e:181.651.29, alloc), refNE(e:181.651.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), e:181.651.29), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, e:181.651.29), boolNot(boolOr(boolAnd(refEQ(e:181.651.29, null), refEQ(elem<1>, null)), boolAnd(refNE(e:181.651.29, null), java.lang.Object.equals.89.4(state, e:181.651.29, elem<1>)))))))), org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), brokenObj<32>), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), elem<1>)), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>)), integralSub(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<32>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<32>, elem<1>), 1, 0))), is(org.jmlspecs.models.JMLEqualsSet.remove.649.4(state, brokenObj<32>, elem<1>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype brokenObj<33>; is(org.jmlspecs.models.JMLValueSequence.length.623.26(brokenObj<33>), \type(bigint))), (\forall anytype brokenObj<33>; is(org.jmlspecs.models.JMLValueSequence.length.623.26(brokenObj<33>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<34>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<34>), null), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), select(val:185.97.24, brokenObj<34>)))), boolImplies(refEQ(select(val:185.97.24, brokenObj<34>), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null)), is(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), \type(Object)))), (\forall anytype brokenObj<34>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<34>), null), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), select(val:185.97.24, brokenObj<34>)))), boolImplies(refEQ(select(val:185.97.24, brokenObj<34>), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), null)), is(org.jmlspecs.models.JMLListEqualsNode.head.227.4(brokenObj<34>), \type(Object)))));
ASSUME boolAnd((\forall anytype brokenObj<35>,  index; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), boolImplies(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<35>, cast(integralAdd(index, 1), \type(int)))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)), is(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), \type(JMLValueSequence)))), (\forall anytype brokenObj<35>,  index; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), boolImplies(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<35>, index), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<35>, cast(integralAdd(index, 1), \type(int)))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)))), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>))), refNE(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), null)), integralLE(0, index), integralLT(index, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<35>)), is(org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4(brokenObj<35>, index), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<36>,  s2<7>; boolAnd(boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), refNE(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), null)), boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), (\forall int i:38.1574.32; boolImplies(boolAnd(integralLE(0, i:38.1574.32), integralLT(i:38.1574.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32), null))))), (\forall int i:38.1579.32; boolImplies(boolAnd(integralLE(0, i:38.1579.32), integralLT(i:38.1579.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32), null))))))), is(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), \type(JMLValueSequence)))), (\forall anytype brokenObj<36>,  s2<7>; boolAnd(boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), refNE(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), null)), boolImplies(boolAnd(refNE(s2<7>, null), refNE(s2<7>, null)), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), (\forall int i:38.1574.32; boolImplies(boolAnd(integralLE(0, i:38.1574.32), integralLT(i:38.1574.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), i:38.1574.32), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<36>, i:38.1574.32), null))))), (\forall int i:38.1579.32; boolImplies(boolAnd(integralLE(0, i:38.1579.32), integralLT(i:38.1579.32, org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<7>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), cast(integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<36>), i:38.1579.32), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<7>, i:38.1579.32), null))))))), is(org.jmlspecs.models.JMLValueSequence.concat.1571.4(brokenObj<36>, s2<7>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<37>,  n<3>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), boolImplies(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>)), n<3>), (\forall int i:38.1392.35; boolImplies(boolAnd(integralLE(0, i:38.1392.35), integralLT(i:38.1392.35, n<3>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), \type(JMLValueSequence)))), (\forall anytype brokenObj<37>,  n<3>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), boolImplies(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>)), n<3>), (\forall int i:38.1392.35; boolImplies(boolAnd(integralLE(0, i:38.1392.35), integralLT(i:38.1392.35, n<3>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), i:38.1392.35), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<37>, i:38.1392.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)))), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>))), refNE(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), null)), integralLE(0, n<3>), integralLE(n<3>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<37>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<37>, n<3>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype oBi; boolAnd(boolImplies(java.math.BigInteger.equals.250.4(state, oBi, ZERO:153..), integralEQ(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), cast(0, \type(bigint)))), is(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), \type(bigint)))), (\forall anytype oBi; boolAnd(boolImplies(java.math.BigInteger.equals.250.4(state, oBi, ZERO:153..), integralEQ(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), cast(0, \type(bigint)))), is(org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(oBi), \type(bigint)))));
ASSUME boolAnd((\forall anytype brokenObj<38>,  x; is(java.math.BigInteger.equals.250.4(state, brokenObj<38>, x), \type(boolean))), (\forall anytype brokenObj<38>,  x; is(java.math.BigInteger.equals.250.4(state, brokenObj<38>, x), \type(boolean))));
ASSUME boolAnd((\forall anytype alloc_<2>,  allocNew_<2>,  e<1>; boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), 1), boolImplies(refEQ(e<1>, null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), null)), boolImplies(refNE(e<1>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), e<1>)), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), alloc_<2>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), allocNew_<2>))), (\forall anytype alloc_<2>,  allocNew_<2>,  e<1>; boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), 1), boolImplies(refEQ(e<1>, null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), null)), boolImplies(refNE(e<1>, null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), 0), e<1>)), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), alloc_<2>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc_<2>, allocNew_<2>, e<1>), allocNew_<2>))));
ASSUME boolAnd((\forall anytype brokenObj<39>,  s2<8>; boolAnd(boolImplies(boolAnd(refNE(s2<8>, null), refNE(s2<8>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), (\forall Object e:181.479.29; boolImplies(boolAnd(is(e:181.479.29, \type(Object)), isAllocated(e:181.479.29, alloc), refNE(e:181.479.29, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<39>, e:181.479.29)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<8>, e:181.479.29))))), is(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), \type(boolean)))), (\forall anytype brokenObj<39>,  s2<8>; boolAnd(boolImplies(boolAnd(refNE(s2<8>, null), refNE(s2<8>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), (\forall Object e:181.479.29; boolImplies(boolAnd(is(e:181.479.29, \type(Object)), isAllocated(e:181.479.29, alloc), refNE(e:181.479.29, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<39>, e:181.479.29)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<8>, e:181.479.29))))), is(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<39>, s2<8>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<40>,  a_candidate_code<2>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refNE(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), null)), boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refEQ(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<40>), java.lang.Integer.Integer.300.4(alloc:185.64.22, alloc:33.350.49, java.lang.Integer.parseInt.266.4(a_candidate_code<2>))))), is(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), \type(Candidate)))), (\forall anytype brokenObj<40>,  a_candidate_code<2>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refNE(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), null)), boolImplies(boolAnd(refNE(a_candidate_code<2>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<2>)), sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<40>, a_candidate_code<2>)), refEQ(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), java.util.Map.get.134.4(state, select(my_candidate_codes:33.59.43, brokenObj<40>), java.lang.Integer.Integer.300.4(alloc:185.64.22, alloc:33.350.49, java.lang.Integer.parseInt.266.4(a_candidate_code<2>))))), is(sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<40>, a_candidate_code<2>), \type(Candidate)))));
ASSUME boolAnd((\forall anytype s<2>; boolAnd(boolImplies(java.lang.Integer.parseable.38.33(s<2>), integralEQ(java.lang.Integer.parseInt.266.4(s<2>), java.lang.Integer.parseInt.254.4(s<2>, 10))), java.lang.Integer.parseable.38.33(s<2>), is(java.lang.Integer.parseInt.266.4(s<2>), \type(int)))), (\forall anytype s<2>; boolAnd(boolImplies(java.lang.Integer.parseable.38.33(s<2>), integralEQ(java.lang.Integer.parseInt.266.4(s<2>), java.lang.Integer.parseInt.254.4(s<2>, 10))), java.lang.Integer.parseable.38.33(s<2>), is(java.lang.Integer.parseInt.266.4(s<2>), \type(int)))));
ASSUME boolAnd((\forall anytype s<3>; boolAnd(boolEq(java.lang.Integer.parseable.38.33(s<3>), java.lang.Integer.parseable.54.33(s<3>, 10)), is(java.lang.Integer.parseable.38.33(s<3>), \type(boolean)))), (\forall anytype s<3>; boolAnd(boolEq(java.lang.Integer.parseable.38.33(s<3>), java.lang.Integer.parseable.54.33(s<3>, 10)), is(java.lang.Integer.parseable.38.33(s<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype s<4>,  r; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.44.31; boolImplies(boolAnd(integralLE(0, i:117.44.31), integralLT(i:117.44.31, java.lang.String.length.225.4(s<4>))), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.44.31), r), integralNeg(1))))))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.51.31; boolImplies(boolAnd(integralLE(1, i:117.51.31), integralLT(i:117.51.31, java.lang.String.length.225.4(s<4>)), integralEQ(java.lang.String.charAt.233.4(s<4>, 0), '-')), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.51.31), r), integralNeg(1))))))), is(java.lang.Integer.parseable.54.33(s<4>, r), \type(boolean)))), (\forall anytype s<4>,  r; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.44.31; boolImplies(boolAnd(integralLE(0, i:117.44.31), integralLT(i:117.44.31, java.lang.String.length.225.4(s<4>))), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.44.31), r), integralNeg(1))))))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., r), integralLE(r, MAX_RADIX:128..)), boolEq(java.lang.Integer.parseable.54.33(s<4>, r), boolAnd(refNE(s<4>, null), boolNot(java.lang.String.equals.320.4(state, s<4>, "")), (\forall int i:117.51.31; boolImplies(boolAnd(integralLE(1, i:117.51.31), integralLT(i:117.51.31, java.lang.String.length.225.4(s<4>)), integralEQ(java.lang.String.charAt.233.4(s<4>, 0), '-')), integralNE(java.lang.Character.digit.410.4(java.lang.String.charAt.233.4(s<4>, i:117.51.31), r), integralNeg(1))))))), is(java.lang.Integer.parseable.54.33(s<4>, r), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<41>,  index<1>; boolAnd(boolImplies(boolAnd(integralLE(0, index<1>), integralLT(index<1>, java.lang.String.length.225.4(brokenObj<41>))), integralEQ(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), org.jmlspecs.models.JMLChar.charValue.115.4(cast(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(java.lang.String#stringSeq(state, this), index<1>), \type(JMLChar))))), boolNot(boolOr(integralLT(index<1>, 0), integralGE(index<1>, java.lang.String.length.225.4(this)))), is(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), \type(char)))), (\forall anytype brokenObj<41>,  index<1>; boolAnd(boolImplies(boolAnd(integralLE(0, index<1>), integralLT(index<1>, java.lang.String.length.225.4(brokenObj<41>))), integralEQ(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), org.jmlspecs.models.JMLChar.charValue.115.4(cast(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(java.lang.String#stringSeq(state, this), index<1>), \type(JMLChar))))), boolNot(boolOr(integralLT(index<1>, 0), integralGE(index<1>, java.lang.String.length.225.4(this)))), is(java.lang.String.charAt.233.4(brokenObj<41>, index<1>), \type(char)))));
ASSUME boolAnd((\forall anytype brokenObj<42>; boolAnd(boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0))), boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), refEQ(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0)), is(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), \type(JMLType)))), (\forall anytype brokenObj<42>; boolAnd(boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0))), boolImplies(boolAnd(integralGT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<42>, 0), null)), refEQ(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<42>), 0)), is(org.jmlspecs.models.JMLValueSequence.first.1044.4(brokenObj<42>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<43>,  elem<2>; boolAnd(boolImplies(refNE(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.755.37; boolAnd(integralLE(0, i:38.755.37), integralLT(i:38.755.37, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.755.37), elem<2>))))), boolImplies(refEQ(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.760.38; boolAnd(integralLE(0, i:38.760.38), integralLT(i:38.760.38, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.760.38), null))))), is(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), \type(boolean)))), (\forall anytype brokenObj<43>,  elem<2>; boolAnd(boolImplies(refNE(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.755.37; boolAnd(integralLE(0, i:38.755.37), integralLT(i:38.755.37, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.755.37), elem<2>))))), boolImplies(refEQ(elem<2>, null), boolEq(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), (\exists int i:38.760.38; boolAnd(integralLE(0, i:38.760.38), integralLT(i:38.760.38, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<43>)), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<43>, i:38.760.38), null))))), is(org.jmlspecs.models.JMLValueSequence.has.750.4(brokenObj<43>, elem<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype alloc_<3>,  allocNew_<3>,  item<1>,  nxt; boolAnd(boolImplies(refNE(item<1>, null), boolAnd(org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), item<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeLE(\typeof(item<1>), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt))), boolImplies(refNE(nxt, null), typeLE(select(elementType:131.109.27, nxt), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), boolImplies(refEQ(nxt, null), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \typeof(item<1>))), boolEq(select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), termConditional(refEQ(nxt, null), false, select(containsNull:131.124.29, nxt))))), boolImplies(refEQ(item<1>, null), boolAnd(refEQ(select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), null), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(JMLType)), select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), refNE(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), null), typeEQ(\typeof(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(org.jmlspecs.models.JMLListValueNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), alloc_<3>)), isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), allocNew_<3>))), (\forall anytype alloc_<3>,  allocNew_<3>,  item<1>,  nxt; boolAnd(boolImplies(refNE(item<1>, null), boolAnd(org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), item<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeLE(\typeof(item<1>), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt))), boolImplies(refNE(nxt, null), typeLE(select(elementType:131.109.27, nxt), select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), boolImplies(refEQ(nxt, null), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \typeof(item<1>))), boolEq(select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), termConditional(refEQ(nxt, null), false, select(containsNull:131.124.29, nxt))))), boolImplies(refEQ(item<1>, null), boolAnd(refEQ(select(val:131.97.25, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), null), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), nxt), typeEQ(select(elementType:131.109.27, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(JMLType)), select(containsNull:131.124.29, org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)))), refNE(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), null), typeEQ(\typeof(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt)), \type(org.jmlspecs.models.JMLListValueNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), alloc_<3>)), isAllocated(org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc_<3>, allocNew_<3>, item<1>, nxt), allocNew_<3>))));
ASSUME boolAnd((\forall anytype brokenObj<44>,  s2<9>; boolAnd(boolImplies(boolAnd(refNE(s2<9>, null), refNE(s2<9>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<44>, s2<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<44>, s2<9>))))), is(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), \type(boolean)))), (\forall anytype brokenObj<44>,  s2<9>; boolAnd(boolImplies(boolAnd(refNE(s2<9>, null), refNE(s2<9>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<44>, s2<9>), boolNot(org.jmlspecs.models.JMLEqualsSet.equals.407.4(state, brokenObj<44>, s2<9>))))), is(org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(brokenObj<44>, s2<9>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<45>,  a_candidate_code<3>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<3>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))), boolEq(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<45>), java.lang.Integer.Integer.300.4(alloc:33.350.49, alloc:33.367.57, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))))), is(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), \type(boolean)))), (\forall anytype brokenObj<45>,  a_candidate_code<3>; boolAnd(boolImplies(boolAnd(refNE(a_candidate_code<3>, null), integralLE(0, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))), boolEq(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), java.util.Map.containsKey.115.4(state, select(my_candidate_codes:33.59.43, brokenObj<45>), java.lang.Integer.Integer.300.4(alloc:33.350.49, alloc:33.367.57, java.lang.Integer.parseInt.266.4(a_candidate_code<3>))))), is(sos.koa.CandidateList.validCandidate.357.2(state, brokenObj<45>, a_candidate_code<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype hd,  tl; boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), null), org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), hd), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl)), tl), org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:33.367.57, alloc:185.200.34, hd, tl)), is(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), \type(JMLListEqualsNode)))), (\forall anytype hd,  tl; boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), null), org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), hd), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl)), tl), org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc:33.367.57, alloc:185.200.34, hd, tl)), is(org.jmlspecs.models.JMLListEqualsNode.cons.198.4(state, hd, tl), \type(JMLListEqualsNode)))));
ASSUME boolAnd((\forall anytype brokenObj<46>,  s2<10>; boolAnd(boolImplies(boolAnd(refNE(s2<10>, null), refNE(s2<10>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2<10>, brokenObj<46>))), is(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), \type(boolean)))), (\forall anytype brokenObj<46>,  s2<10>; boolAnd(boolImplies(boolAnd(refNE(s2<10>, null), refNE(s2<10>, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4(s2<10>, brokenObj<46>))), is(org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4(brokenObj<46>, s2<10>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<47>,  i<2>; boolAnd(boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>)), select(elementType:39.44.30, brokenObj<47>))), boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), boolNot(select(containsNull:39.52.32, brokenObj<47>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), \type(JMLType)))), (\forall anytype brokenObj<47>,  i<2>; boolAnd(boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>)), select(elementType:39.44.30, brokenObj<47>))), boolImplies(boolAnd(integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), boolNot(select(containsNull:39.52.32, brokenObj<47>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), null)), integralLE(0, i<2>), integralLT(i<2>, org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<47>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<47>, i<2>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype alloc_<4>,  allocNew_<4>; boolAnd(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), 0), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), alloc_<4>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), allocNew_<4>))), (\forall anytype alloc_<4>,  allocNew_<4>; boolAnd(org.jmlspecs.models.JMLValueSequence.isEmpty.939.4(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), integralEQ(org.jmlspecs.models.JMLValueSequence.size.612.26(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), 0), refNE(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), null), typeEQ(\typeof(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>)), \type(org.jmlspecs.models.JMLValueSequence)), boolNot(isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), alloc_<4>)), isAllocated(org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4(alloc_<4>, allocNew_<4>), allocNew_<4>))));
ASSUME boolAnd(integralEQ(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), decryptNrOfVotes:36.195.40), is(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), \type(int)), integralEQ(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), decryptNrOfVotes:36.195.40), is(sos.koa.AuditLog.getDecryptNrOfVotes.1055.1(), \type(int)));
ASSUME boolAnd((\forall anytype brokenObj<48>,  obj<1>; boolAnd(boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<48>, cast(obj<1>, \type(JMLValueSequence))), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(cast(obj<1>, \type(JMLValueSequence)), brokenObj<48>)))), boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>)), boolEq(select(containsNull:39.52.32, brokenObj<48>), select(containsNull:39.52.32, cast(obj<1>, \type(JMLValueSequence))))), boolImplies(boolOr(refEQ(obj<1>, null), boolNot(boolAnd(is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)))), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>))), is(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), \type(boolean)))), (\forall anytype brokenObj<48>,  obj<1>; boolAnd(boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), boolAnd(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<48>, cast(obj<1>, \type(JMLValueSequence))), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(cast(obj<1>, \type(JMLValueSequence)), brokenObj<48>)))), boolImplies(boolAnd(refNE(obj<1>, null), is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>)), boolEq(select(containsNull:39.52.32, brokenObj<48>), select(containsNull:39.52.32, cast(obj<1>, \type(JMLValueSequence))))), boolImplies(boolOr(refEQ(obj<1>, null), boolNot(boolAnd(is(obj<1>, \type(JMLValueSequence)), refNE(obj<1>, null)))), boolNot(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>))), is(org.jmlspecs.models.JMLValueSequence.equals.910.4(state, brokenObj<48>, obj<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<49>,  afterThisOne,  item<2>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<49>, cast(integralAdd(afterThisOne, 1), \type(int)), item<2>))), integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), \type(JMLValueSequence)))), (\forall anytype brokenObj<49>,  afterThisOne,  item<2>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<49>, cast(integralAdd(afterThisOne, 1), \type(int)), item<2>))), integralLE(integralNeg(1), afterThisOne), integralLT(afterThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<49>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4(brokenObj<49>, afterThisOne, item<2>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<50>,  s2<11>; boolAnd(boolImplies(boolAnd(refNE(s2<11>, null), refNE(s2<11>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>)), (\exists int i:38.1125.37; boolAnd(integralLE(0, i:38.1125.37), integralLT(i:38.1125.37, integralAdd(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>)), 1)), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<50>, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(s2<11>, i:38.1125.37))))))), is(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), \type(boolean)))), (\forall anytype brokenObj<50>,  s2<11>; boolAnd(boolImplies(boolAnd(refNE(s2<11>, null), refNE(s2<11>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>)), (\exists int i:38.1125.37; boolAnd(integralLE(0, i:38.1125.37), integralLT(i:38.1125.37, integralAdd(integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<11>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<50>)), 1)), org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<50>, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(s2<11>, i:38.1125.37))))))), is(org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(brokenObj<50>, s2<11>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<51>,  beforeThisOne,  item<3>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<51>, beforeThisOne), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:185.200.34, alloc:38.2030.32, item<3>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<51>, beforeThisOne)))), integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), \type(JMLValueSequence)))), (\forall anytype brokenObj<51>,  beforeThisOne,  item<3>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<51>, beforeThisOne), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:185.200.34, alloc:38.2030.32, item<3>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<51>, beforeThisOne)))), integralLE(0, beforeThisOne), integralLE(beforeThisOne, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<51>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8(brokenObj<51>, beforeThisOne, item<3>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<52>,  n<4>; boolAnd(boolImplies(boolAnd(integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>), n<4>)), (\forall bigint i:38.1455.35; boolImplies(boolAnd(is(i:38.1455.35, \type(bigint)), integralLE(n<4>, i:38.1455.35), integralLT(i:38.1455.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35), null))))))), integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), \type(JMLValueSequence)))), (\forall anytype brokenObj<52>,  n<4>; boolAnd(boolImplies(boolAnd(integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>), n<4>)), (\forall bigint i:38.1455.35; boolImplies(boolAnd(is(i:38.1455.35, \type(bigint)), integralLE(n<4>, i:38.1455.35), integralLT(i:38.1455.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), integralSub(i:38.1455.35, n<4>)), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<52>, i:38.1455.35), null))))))), integralLE(0, n<4>), integralLE(n<4>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<52>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19(brokenObj<52>, n<4>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<53>,  i<3>; boolAnd(integralLE(0, i<3>), integralLT(i<3>, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<53>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<53>, i<3>), \type(Object)))), (\forall anytype brokenObj<53>,  i<3>; boolAnd(integralLE(0, i<3>), integralLT(i<3>, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<53>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<53>, i<3>), \type(Object)))));
ASSUME boolAnd((\forall anytype alloc_<5>,  allocNew_<5>,  item<4>,  nxt<1>; boolAnd(boolImplies(refNE(item<4>, null), boolAnd(java.lang.Object.equals.89.4(state, select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), item<4>), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeLE(\typeof(item<4>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>))), boolImplies(refNE(nxt<1>, null), typeLE(select(elementType:185.109.27, nxt<1>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), boolImplies(refEQ(nxt<1>, null), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \typeof(item<4>))), boolEq(select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), termConditional(refEQ(nxt<1>, null), false, select(containsNull:185.124.29, nxt<1>))))), boolImplies(refEQ(item<4>, null), boolAnd(refEQ(select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), null), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(Object)), select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), refNE(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(org.jmlspecs.models.JMLListEqualsNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), alloc_<5>)), isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), allocNew_<5>))), (\forall anytype alloc_<5>,  allocNew_<5>,  item<4>,  nxt<1>; boolAnd(boolImplies(refNE(item<4>, null), boolAnd(java.lang.Object.equals.89.4(state, select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), item<4>), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeLE(\typeof(item<4>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>))), boolImplies(refNE(nxt<1>, null), typeLE(select(elementType:185.109.27, nxt<1>), select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), boolImplies(refEQ(nxt<1>, null), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \typeof(item<4>))), boolEq(select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), termConditional(refEQ(nxt<1>, null), false, select(containsNull:185.124.29, nxt<1>))))), boolImplies(refEQ(item<4>, null), boolAnd(refEQ(select(val:185.97.24, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), null), refEQ(select(next:185.101.35, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), nxt<1>), typeEQ(select(elementType:185.109.27, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(Object)), select(containsNull:185.124.29, org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)))), refNE(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), null), typeEQ(\typeof(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>)), \type(org.jmlspecs.models.JMLListEqualsNode)), boolNot(isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), alloc_<5>)), isAllocated(org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4(state, alloc_<5>, allocNew_<5>, item<4>, nxt<1>), allocNew_<5>))));
ASSUME boolAnd((\forall anytype s<5>,  radix; boolAnd(java.lang.Integer.parseable.54.33(s<5>, radix), is(java.lang.Integer.parseInt.254.4(s<5>, radix), \type(int)))), (\forall anytype s<5>,  radix; boolAnd(java.lang.Integer.parseable.54.33(s<5>, radix), is(java.lang.Integer.parseInt.254.4(s<5>, radix), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<54>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<54>, 1))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), (* \result is like this, but without the first item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0)), is(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), \type(JMLValueSequence)))), (\forall anytype brokenObj<54>; boolAnd(boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<54>, 1))), boolImplies(integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>)), integralSub(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), (* \result is like this, but without the first item *))), boolImplies(boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0), integralGE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 1)), refNE(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), null)), boolNot(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<54>), 0)), is(org.jmlspecs.models.JMLValueSequence.trailer.1876.4(brokenObj<54>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<55>; boolAnd(integralEQ(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), org.jmlspecs.models.JMLChar#theChar(state, brokenObj<55>)), is(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), \type(char)))), (\forall anytype brokenObj<55>; boolAnd(integralEQ(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), org.jmlspecs.models.JMLChar#theChar(state, brokenObj<55>)), is(org.jmlspecs.models.JMLChar.charValue.115.4(brokenObj<55>), \type(char)))));
ASSUME (\forall anytype brokenObj<56>; integralEQ(org.jmlspecs.models.JMLChar#theChar(state, brokenObj<56>), select(value:47.45.25, brokenObj<56>)));
ASSUME boolAnd((\forall anytype brokenObj<57>,  i<4>; boolAnd(integralLE(0, i<4>), integralLT(i<4>, org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<57>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(brokenObj<57>, i<4>), \type(Object)))), (\forall anytype brokenObj<57>,  i<4>; boolAnd(integralLE(0, i<4>), integralLT(i<4>, org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<57>)), is(org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19(brokenObj<57>, i<4>), \type(Object)))));
ASSUME boolAnd((\forall anytype brokenObj<58>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<58>)), is(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), \type(bigint)))), (\forall anytype brokenObj<58>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<58>)), is(org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<58>), \type(bigint)))));
ASSUME boolAnd((\forall anytype brokenObj<59>,  beforeThisOne<1>,  item<5>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<59>, beforeThisOne<1>), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.2030.32, alloc:38.2079.32, item<5>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<59>, beforeThisOne<1>)))), integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), \type(JMLValueSequence)))), (\forall anytype brokenObj<59>,  beforeThisOne<1>,  item<5>; boolAnd(boolImplies(boolAnd(integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.concat.1571.4(org.jmlspecs.models.JMLValueSequence.prefix.1389.4(brokenObj<59>, beforeThisOne<1>), org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4(alloc:38.2030.32, alloc:38.2079.32, item<5>)), org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<59>, beforeThisOne<1>)))), integralLE(0, beforeThisOne<1>), integralLE(beforeThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<59>)), is(org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<59>, beforeThisOne<1>, item<5>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<60>,  i<5>; boolAnd(boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>)), select(elementType:39.44.30, brokenObj<60>))), boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), boolNot(select(containsNull:39.52.32, brokenObj<60>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), \type(JMLType)))), (\forall anytype brokenObj<60>,  i<5>; boolAnd(boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), typeLE(\typeof(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>)), select(elementType:39.44.30, brokenObj<60>))), boolImplies(boolAnd(integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), boolNot(select(containsNull:39.52.32, brokenObj<60>))), refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), null)), integralLE(0, i<5>), integralLT(i<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<60>)), is(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<60>, i<5>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<61>,  afterThisOne<1>,  item<6>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<61>, cast(integralAdd(afterThisOne<1>, 1), \type(int)), item<6>))), integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), \type(JMLValueSequence)))), (\forall anytype brokenObj<61>,  afterThisOne<1>,  item<6>; boolAnd(boolImplies(boolAnd(integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), integralLT(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>), MAX_VALUE:118..)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<61>, cast(integralAdd(afterThisOne<1>, 1), \type(int)), item<6>))), integralLE(integralNeg(1), afterThisOne<1>), integralLT(afterThisOne<1>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<61>)), is(org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17(brokenObj<61>, afterThisOne<1>, item<6>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<62>,  n<5>; boolAnd(boolImplies(boolAnd(integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>)), n<5>), (\forall bigint i:38.1328.39; boolImplies(boolAnd(is(i:38.1328.39, \type(bigint)), integralLE(0, i:38.1328.39), integralLT(i:38.1328.39, n<5>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39), null))))))), integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), \type(JMLValueSequence)))), (\forall anytype brokenObj<62>,  n<5>; boolAnd(boolImplies(boolAnd(integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>)), n<5>), (\forall bigint i:38.1328.39; boolImplies(boolAnd(is(i:38.1328.39, \type(bigint)), integralLE(0, i:38.1328.39), integralLT(i:38.1328.39, n<5>)), boolOr(boolImplies(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39))), boolImplies(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), i:38.1328.39), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<62>, i:38.1328.39), null))))))), integralLE(0, n<5>), integralLE(n<5>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<62>)), is(org.jmlspecs.models.JMLValueSequence.prefix.1361.21(brokenObj<62>, n<5>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<63>,  item<7>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), java.lang.Object.equals.89.4(state, select(val:185.97.24, brokenObj<63>), item<7>))), boolImplies(refEQ(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), refEQ(item<7>, null))), is(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), \type(boolean)))), (\forall anytype brokenObj<63>,  item<7>; boolAnd(boolImplies(refNE(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), java.lang.Object.equals.89.4(state, select(val:185.97.24, brokenObj<63>), item<7>))), boolImplies(refEQ(select(val:185.97.24, brokenObj<63>), null), boolEq(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), refEQ(item<7>, null))), is(org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4(state, brokenObj<63>, item<7>), \type(boolean)))));
ASSUME boolAnd((\forall anytype alloc_<6>,  allocNew_<6>,  value; boolAnd(integralEQ(java.lang.Integer#theInteger(state, java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), value), refNE(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), null), typeEQ(\typeof(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), \type(java.lang.Integer)), boolNot(isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), alloc_<6>)), isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), allocNew_<6>))), (\forall anytype alloc_<6>,  allocNew_<6>,  value; boolAnd(integralEQ(java.lang.Integer#theInteger(state, java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), value), refNE(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), null), typeEQ(\typeof(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value)), \type(java.lang.Integer)), boolNot(isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), alloc_<6>)), isAllocated(java.lang.Integer.Integer.300.4(alloc_<6>, allocNew_<6>, value), allocNew_<6>))));
ASSUME boolAnd((\forall anytype i<6>,  radix<1>; boolAnd(boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'))), is(java.lang.Integer.toString.115.4(i<6>, radix<1>), \type(java.lang.String)))), (\forall anytype i<6>,  radix<1>; boolAnd(boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), radix<1>)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 2), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '-'), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 1), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralGE(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralNE(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'), integralEQ(i<6>, java.lang.Integer.parseInt.254.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 10)))), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralGT(i<6>, 0), integralLE(MIN_RADIX:128.., radix<1>), integralLE(radix<1>, MAX_RADIX:128..), integralLT(i<6>, 0)), refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null)), boolImplies(boolAnd(integralGT(MIN_RADIX:128.., radix<1>), integralGT(radix<1>, MAX_RADIX:128..), integralEQ(i<6>, 0)), boolAnd(refNE(java.lang.Integer.toString.115.4(i<6>, radix<1>), null), integralEQ(java.lang.String.length.225.4(java.lang.Integer.toString.115.4(i<6>, radix<1>)), 1), integralEQ(java.lang.String.charAt.233.4(java.lang.Integer.toString.115.4(i<6>, radix<1>), 0), '0'))), is(java.lang.Integer.toString.115.4(i<6>, radix<1>), \type(java.lang.String)))));
ASSUME boolAnd((\forall anytype brokenObj<64>; boolAnd(integralLE(0, sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>)), integralLE(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20), integralEQ(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), select(my_candidate_count:34.97.35, brokenObj<64>)), is(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), \type(byte)))), (\forall anytype brokenObj<64>; boolAnd(integralLE(0, sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>)), integralLE(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20), integralEQ(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), select(my_candidate_count:34.97.35, brokenObj<64>)), is(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<64>), \type(byte)))));
ASSUME boolAnd((\forall anytype ch,  radix<2>; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), java.lang.Character.isDigit.256.4(ch), integralLT(java.lang.Character.digitVal.390.33(ch), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), java.lang.Character.digitVal.390.33(ch))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'A'), integralLE(ch, 'Z'), integralLT(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'A'), 10))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'a'), integralLE(ch, 'z'), integralLT(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'a'), 10))), boolImplies(boolOr(integralLT(radix<2>, MIN_RADIX:128..), integralGT(radix<2>, MAX_RADIX:128..), boolAnd(java.lang.Character.isDigit.256.4(ch), integralGE(java.lang.Character.digitVal.390.33(ch), radix<2>)), boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'), integralGE(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'), integralGE(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), boolAnd(boolNot(java.lang.Character.isDigit.256.4(ch)), boolNot(boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'))), boolNot(boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'))))), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralNeg(1))), is(java.lang.Character.digit.410.4(ch, radix<2>), \type(int)))), (\forall anytype ch,  radix<2>; boolAnd(boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), java.lang.Character.isDigit.256.4(ch), integralLT(java.lang.Character.digitVal.390.33(ch), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), java.lang.Character.digitVal.390.33(ch))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'A'), integralLE(ch, 'Z'), integralLT(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'A'), 10))), boolImplies(boolAnd(integralLE(MIN_RADIX:128.., radix<2>), integralLE(radix<2>, MAX_RADIX:128..), integralGE(ch, 'a'), integralLE(ch, 'z'), integralLT(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralAdd(integralSub(ch, 'a'), 10))), boolImplies(boolOr(integralLT(radix<2>, MIN_RADIX:128..), integralGT(radix<2>, MAX_RADIX:128..), boolAnd(java.lang.Character.isDigit.256.4(ch), integralGE(java.lang.Character.digitVal.390.33(ch), radix<2>)), boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'), integralGE(integralAdd(integralSub(ch, 'A'), 10), radix<2>)), boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'), integralGE(integralAdd(integralSub(ch, 'a'), 10), radix<2>)), boolAnd(boolNot(java.lang.Character.isDigit.256.4(ch)), boolNot(boolAnd(integralGE(ch, 'A'), integralLE(ch, 'Z'))), boolNot(boolAnd(integralGE(ch, 'a'), integralLE(ch, 'z'))))), integralEQ(java.lang.Character.digit.410.4(ch, radix<2>), integralNeg(1))), is(java.lang.Character.digit.410.4(ch, radix<2>), \type(int)))));
ASSUME boolAnd((\forall anytype ch<1>; boolAnd(boolEq(java.lang.Character.isDigit.256.4(ch<1>), integralEQ(java.lang.Character.getType.510.4(ch<1>), DECIMAL_DIGIT_NUMBER:128..)), is(java.lang.Character.isDigit.256.4(ch<1>), \type(boolean)))), (\forall anytype ch<1>; boolAnd(boolEq(java.lang.Character.isDigit.256.4(ch<1>), integralEQ(java.lang.Character.getType.510.4(ch<1>), DECIMAL_DIGIT_NUMBER:128..)), is(java.lang.Character.isDigit.256.4(ch<1>), \type(boolean)))));
ASSUME boolAnd((\forall anytype ch<2>; boolAnd(integralLE(UNASSIGNED:128.., java.lang.Character.getType.510.4(ch<2>)), integralLE(java.lang.Character.getType.510.4(ch<2>), OTHER_SYMBOL:128..), (* \result == the Unicode character category of ch *), is(java.lang.Character.getType.510.4(ch<2>), \type(int)))), (\forall anytype ch<2>; boolAnd(integralLE(UNASSIGNED:128.., java.lang.Character.getType.510.4(ch<2>)), integralLE(java.lang.Character.getType.510.4(ch<2>), OTHER_SYMBOL:128..), (* \result == the Unicode character category of ch *), is(java.lang.Character.getType.510.4(ch<2>), \type(int)))));
ASSUME boolAnd((\forall anytype ch<3>; is(java.lang.Character.digitVal.390.33(ch<3>), \type(int))), (\forall anytype ch<3>; is(java.lang.Character.digitVal.390.33(ch<3>), \type(int))));
ASSUME boolAnd((\forall anytype hd<1>,  tl<1>; boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), null), org.jmlspecs.models.JMLListValueNode.headEquals.252.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), hd<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>)), tl<1>), org.jmlspecs.models.JMLListValueNode.equals.501.4(state, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:38.2079.32, alloc:131.200.34, hd<1>, tl<1>)), is(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), \type(JMLListValueNode)))), (\forall anytype hd<1>,  tl<1>; boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), null), org.jmlspecs.models.JMLListValueNode.headEquals.252.4(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), hd<1>), refEQ(select(next:131.101.34, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>)), tl<1>), org.jmlspecs.models.JMLListValueNode.equals.501.4(state, org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4(alloc:38.2079.32, alloc:131.200.34, hd<1>, tl<1>)), is(org.jmlspecs.models.JMLListValueNode.cons.198.4(hd<1>, tl<1>), \type(JMLListValueNode)))));
ASSUME boolAnd((\forall anytype brokenObj<65>,  item<8>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, brokenObj<65>), item<8>))), boolImplies(refEQ(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), refEQ(item<8>, null))), is(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), \type(boolean)))), (\forall anytype brokenObj<65>,  item<8>; boolAnd(boolImplies(refNE(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), org.jmlspecs.models.JMLType.equals.52.4(state, select(val:131.97.25, brokenObj<65>), item<8>))), boolImplies(refEQ(select(val:131.97.25, brokenObj<65>), null), boolEq(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), refEQ(item<8>, null))), is(org.jmlspecs.models.JMLListValueNode.headEquals.252.4(brokenObj<65>, item<8>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<66>,  ls2<2>; boolAnd(boolImplies(boolAnd(refNE(ls2<2>, null), is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), boolAnd(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<66>, cast(ls2<2>, \type(JMLListValueNode))), org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(cast(ls2<2>, \type(JMLListValueNode)), brokenObj<66>)))), boolImplies(boolOr(refEQ(ls2<2>, null), boolNot(boolAnd(is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)))), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), false)), is(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), \type(boolean)))), (\forall anytype brokenObj<66>,  ls2<2>; boolAnd(boolImplies(boolAnd(refNE(ls2<2>, null), is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), boolAnd(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<66>, cast(ls2<2>, \type(JMLListValueNode))), org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(cast(ls2<2>, \type(JMLListValueNode)), brokenObj<66>)))), boolImplies(boolOr(refEQ(ls2<2>, null), boolNot(boolAnd(is(ls2<2>, \type(JMLListValueNode)), refNE(ls2<2>, null)))), boolEq(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), false)), is(org.jmlspecs.models.JMLListValueNode.equals.501.4(state, brokenObj<66>, ls2<2>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<67>,  ls2<3>; boolAnd(boolImplies(refNE(ls2<3>, null), boolEq(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), boolAnd(integralLE(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>), org.jmlspecs.models.JMLListValueNode.int_length.424.4(ls2<3>)), (\forall int i:131.471.30; boolImplies(boolAnd(integralLE(0, i:131.471.30), integralLT(i:131.471.30, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30))))))))), boolImplies(refEQ(ls2<3>, null), boolNot(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>))), is(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), \type(boolean)))), (\forall anytype brokenObj<67>,  ls2<3>; boolAnd(boolImplies(refNE(ls2<3>, null), boolEq(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), boolAnd(integralLE(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>), org.jmlspecs.models.JMLListValueNode.int_length.424.4(ls2<3>)), (\forall int i:131.471.30; boolImplies(boolAnd(integralLE(0, i:131.471.30), integralLT(i:131.471.30, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<67>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), refEQ(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLListValueNode.itemAt.324.4(ls2<3>, i:131.471.30), org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<67>, i:131.471.30))))))))), boolImplies(refEQ(ls2<3>, null), boolNot(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>))), is(org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4(brokenObj<67>, ls2<3>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<68>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<68>)), is(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), \type(int)))), (\forall anytype brokenObj<68>; boolAnd(integralEQ(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), org.jmlspecs.models.JMLListValueNode.length.398.26(brokenObj<68>)), is(org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<68>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<69>,  item<9>; boolAnd(boolImplies(refNE(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.440.35; boolAnd(integralLE(0, i:185.440.35), integralLT(i:185.440.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), termConditional(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), null), refEQ(item<9>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), item<9>)))))), boolImplies(refEQ(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.448.35; boolAnd(integralLE(0, i:185.448.35), integralLT(i:185.448.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.448.35), null))))), is(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), \type(boolean)))), (\forall anytype brokenObj<69>,  item<9>; boolAnd(boolImplies(refNE(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.440.35; boolAnd(integralLE(0, i:185.440.35), integralLT(i:185.440.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), termConditional(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), null), refEQ(item<9>, null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.440.35), item<9>)))))), boolImplies(refEQ(item<9>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), (\exists int i:185.448.35; boolAnd(integralLE(0, i:185.448.35), integralLT(i:185.448.35, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<69>)), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<69>, i:185.448.35), null))))), is(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<69>, item<9>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<70>,  s2<12>; boolAnd(boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null)), boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null), (\forall Object e:181.709.34; boolImplies(boolAnd(is(e:181.709.34, \type(Object)), isAllocated(e:181.709.34, alloc), refNE(e:181.709.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), e:181.709.34), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<70>, e:181.709.34), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<12>, e:181.709.34))))))), is(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<70>,  s2<12>; boolAnd(boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null)), boolImplies(boolAnd(refNE(s2<12>, null), refNE(s2<12>, null), integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<70>), integralSub(MAX_VALUE:118.., org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.difference.734.4(s2<12>, brokenObj<70>))))), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), null), (\forall Object e:181.709.34; boolImplies(boolAnd(is(e:181.709.34, \type(Object)), isAllocated(e:181.709.34, alloc), refNE(e:181.709.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), e:181.709.34), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<70>, e:181.709.34), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<12>, e:181.709.34))))))), is(org.jmlspecs.models.JMLEqualsSet.union.705.4(brokenObj<70>, s2<12>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype brokenObj<71>,  s2<13>; boolAnd(boolImplies(boolAnd(refNE(s2<13>, null), refNE(s2<13>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<13>, brokenObj<71>))), is(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), \type(boolean)))), (\forall anytype brokenObj<71>,  s2<13>; boolAnd(boolImplies(boolAnd(refNE(s2<13>, null), refNE(s2<13>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4(s2<13>, brokenObj<71>))), is(org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4(brokenObj<71>, s2<13>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<72>,  i<7>; boolAnd(integralLE(0, i<7>), integralLT(i<7>, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<72>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<72>, i<7>), \type(JMLType)))), (\forall anytype brokenObj<72>,  i<7>; boolAnd(integralLE(0, i<7>), integralLT(i<7>, org.jmlspecs.models.JMLListValueNode.int_length.424.4(brokenObj<72>)), is(org.jmlspecs.models.JMLListValueNode.itemAt.324.4(brokenObj<72>, i<7>), \type(JMLType)))));
ASSUME boolAnd((\forall anytype brokenObj<73>; is(org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<73>), \type(bigint))), (\forall anytype brokenObj<73>; is(org.jmlspecs.models.JMLListEqualsNode.size.377.26(brokenObj<73>), \type(bigint))));
ASSUME boolAnd((\forall anytype brokenObj<74>,  s2<14>; boolAnd(boolImplies(boolAnd(refNE(s2<14>, null), refNE(s2<14>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<14>)), (\forall int i:38.805.29; boolImplies(boolAnd(integralLE(0, i:38.805.29), integralLT(i:38.805.29, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29), null)))))))), is(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), \type(boolean)))), (\forall anytype brokenObj<74>,  s2<14>; boolAnd(boolImplies(boolAnd(refNE(s2<14>, null), refNE(s2<14>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), boolAnd(integralLE(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>), org.jmlspecs.models.JMLValueSequence.int_length.655.4(s2<14>)), (\forall int i:38.805.29; boolImplies(boolAnd(integralLE(0, i:38.805.29), integralLT(i:38.805.29, org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<74>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(s2<14>, i:38.805.29), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(brokenObj<74>, i:38.805.29), null)))))))), is(org.jmlspecs.models.JMLValueSequence.isPrefix.801.4(brokenObj<74>, s2<14>), \type(boolean)))));
ASSUME (\forall anytype brokenObj<75>; integralEQ(java.lang.Integer#theInteger(state, brokenObj<75>), java.lang.Integer.intValue.329.4(brokenObj<75>)));
ASSUME boolAnd((\forall anytype brokenObj<76>; boolAnd(integralEQ(java.lang.Integer.intValue.329.4(brokenObj<76>), java.lang.Integer#theInteger(state, brokenObj<76>)), is(java.lang.Integer.intValue.329.4(brokenObj<76>), \type(int)))), (\forall anytype brokenObj<76>; boolAnd(integralEQ(java.lang.Integer.intValue.329.4(brokenObj<76>), java.lang.Integer#theInteger(state, brokenObj<76>)), is(java.lang.Integer.intValue.329.4(brokenObj<76>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<77>,  item<10>; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<77>, 0, item<10>))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), 1)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), brokenObj<77>))), is(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), \type(JMLValueSequence)))), (\forall anytype brokenObj<77>,  item<10>; boolAnd(boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4(brokenObj<77>, 0, item<10>))), boolImplies(integralLT(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), MAX_VALUE:118..), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence.int_length.655.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), integralAdd(org.jmlspecs.models.JMLValueSequence.int_length.655.4(brokenObj<77>), 1)), org.jmlspecs.models.JMLValueSequence.equals.910.4(state, org.jmlspecs.models.JMLValueSequence.trailer.1876.4(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>)), brokenObj<77>))), is(org.jmlspecs.models.JMLValueSequence.insertFront.2161.4(brokenObj<77>, item<10>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<78>,  ls2<4>; boolAnd(boolImplies(boolAnd(refNE(ls2<4>, null), is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), boolAnd(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<78>, cast(ls2<4>, \type(JMLListEqualsNode))), org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(cast(ls2<4>, \type(JMLListEqualsNode)), brokenObj<78>)))), boolImplies(boolOr(refEQ(ls2<4>, null), boolNot(boolAnd(is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), false)), is(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), \type(boolean)))), (\forall anytype brokenObj<78>,  ls2<4>; boolAnd(boolImplies(boolAnd(refNE(ls2<4>, null), is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), boolAnd(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<78>, cast(ls2<4>, \type(JMLListEqualsNode))), org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(cast(ls2<4>, \type(JMLListEqualsNode)), brokenObj<78>)))), boolImplies(boolOr(refEQ(ls2<4>, null), boolNot(boolAnd(is(ls2<4>, \type(JMLListEqualsNode)), refNE(ls2<4>, null)))), boolEq(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), false)), is(org.jmlspecs.models.JMLListEqualsNode.equals.501.4(state, brokenObj<78>, ls2<4>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<79>,  ls2<5>; boolAnd(boolImplies(refNE(ls2<5>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), boolAnd(integralLE(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>), org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(ls2<5>)), (\forall int i:185.471.30; boolImplies(boolAnd(integralLE(0, i:185.471.30), integralLT(i:185.471.30, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30))))))))), boolImplies(refEQ(ls2<5>, null), boolNot(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>))), is(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), \type(boolean)))), (\forall anytype brokenObj<79>,  ls2<5>; boolAnd(boolImplies(refNE(ls2<5>, null), boolEq(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), boolAnd(integralLE(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>), org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(ls2<5>)), (\forall int i:185.471.30; boolImplies(boolAnd(integralLE(0, i:185.471.30), integralLT(i:185.471.30, org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<79>))), boolOr(boolAnd(refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), refEQ(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30), null)), boolAnd(refNE(org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), null), java.lang.Object.equals.89.4(state, org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(ls2<5>, i:185.471.30), org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4(brokenObj<79>, i:185.471.30))))))))), boolImplies(refEQ(ls2<5>, null), boolNot(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>))), is(org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4(brokenObj<79>, ls2<5>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<80>,  s2<15>; boolAnd(boolImplies(boolAnd(refNE(s2<15>, null), refNE(s2<15>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<15>, brokenObj<80>))), is(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), \type(boolean)))), (\forall anytype brokenObj<80>,  s2<15>; boolAnd(boolImplies(boolAnd(refNE(s2<15>, null), refNE(s2<15>, null)), boolEq(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4(s2<15>, brokenObj<80>))), is(org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4(brokenObj<80>, s2<15>), \type(boolean)))));
ASSUME boolAnd((\forall anytype brokenObj<81>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>))), is(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), \type(int)))), (\forall anytype brokenObj<81>; boolAnd(boolImplies(integralLE(org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>), MAX_VALUE:118..), integralEQ(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), org.jmlspecs.models.JMLValueSequence.size.612.26(brokenObj<81>))), is(org.jmlspecs.models.JMLValueSequence.int_size.633.4(brokenObj<81>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<82>,  s2<16>; boolAnd(boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null)), boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null), (\forall Object e:181.737.34; boolImplies(boolAnd(is(e:181.737.34, \type(Object)), isAllocated(e:181.737.34, alloc), refNE(e:181.737.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), e:181.737.34), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<82>, e:181.737.34), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<16>, e:181.737.34)))))))), is(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<82>,  s2<16>; boolAnd(boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null)), boolImplies(boolAnd(refNE(s2<16>, null), refNE(s2<16>, null)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), null), (\forall Object e:181.737.34; boolImplies(boolAnd(is(e:181.737.34, \type(Object)), isAllocated(e:181.737.34, alloc), refNE(e:181.737.34, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), e:181.737.34), boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<82>, e:181.737.34), boolNot(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, s2<16>, e:181.737.34)))))))), is(org.jmlspecs.models.JMLEqualsSet.difference.734.4(brokenObj<82>, s2<16>), \type(JMLEqualsSet)))));
ASSUME boolAnd((\forall anytype brokenObj<83>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<83>)), is(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), \type(int)))), (\forall anytype brokenObj<83>; boolAnd(integralEQ(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), org.jmlspecs.models.JMLListEqualsNode.length.398.26(brokenObj<83>)), is(org.jmlspecs.models.JMLListEqualsNode.int_length.424.4(brokenObj<83>), \type(int)))));
ASSUME boolAnd((\forall anytype brokenObj<84>,  n<6>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), boolImplies(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>), n<6>)), (\forall bigint i:38.1515.35; boolImplies(boolAnd(is(i:38.1515.35, \type(bigint)), integralLE(n<6>, i:38.1515.35), integralLT(i:38.1515.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), \type(JMLValueSequence)))), (\forall anytype brokenObj<84>,  n<6>; boolAnd(boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), boolImplies(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolAnd(integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>)), integralSub(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>), n<6>)), (\forall bigint i:38.1515.35; boolImplies(boolAnd(is(i:38.1515.35, \type(bigint)), integralLE(n<6>, i:38.1515.35), integralLT(i:38.1515.35, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), boolOr(boolAnd(refNE(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), org.jmlspecs.models.JMLType.equals.52.4(state, org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35))), boolAnd(refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.502.4(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), cast(integralSub(i:38.1515.35, n<6>), \type(int))), null), refEQ(org.jmlspecs.models.JMLValueSequence.itemAt.477.17(brokenObj<84>, i:38.1515.35), null))))))), boolImplies(boolAnd(boolNot(boolAnd(integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)))), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>))), refNE(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), null)), integralLE(0, n<6>), integralLE(n<6>, org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<84>)), is(org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4(brokenObj<84>, n<6>), \type(JMLValueSequence)))));
ASSUME boolAnd((\forall anytype brokenObj<85>,  elem<3>; boolAnd(boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null), (\forall Object e:181.600.29; boolImplies(boolAnd(is(e:181.600.29, \type(Object)), isAllocated(e:181.600.29, alloc), refNE(e:181.600.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), e:181.600.29), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, e:181.600.29), boolAnd(refEQ(e:181.600.29, null), refEQ(elem<3>, null)), boolAnd(refNE(e:181.600.29, null), java.lang.Object.equals.89.4(state, e:181.600.29, elem<3>)))))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<85>, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), elem<3>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>), 0, 1))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(refEQ(elem<3>, null), select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>))), boolImplies(refNE(elem<3>, null), boolEq(select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), select(containsNull:39.52.32, brokenObj<85>))), is(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), \type(JMLEqualsSet)))), (\forall anytype brokenObj<85>,  elem<3>; boolAnd(boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null), (\forall Object e:181.600.29; boolImplies(boolAnd(is(e:181.600.29, \type(Object)), isAllocated(e:181.600.29, alloc), refNE(e:181.600.29, null)), boolEq(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), e:181.600.29), boolOr(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, e:181.600.29), boolAnd(refEQ(e:181.600.29, null), refEQ(elem<3>, null)), boolAnd(refNE(e:181.600.29, null), java.lang.Object.equals.89.4(state, e:181.600.29, elem<3>)))))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), boolAnd(org.jmlspecs.models.JMLEqualsSet.isSubset.476.4(brokenObj<85>, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), elem<3>), integralEQ(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), integralAdd(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), termConditional(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>), 0, 1))))), boolImplies(boolOr(integralLT(org.jmlspecs.models.JMLEqualsSet.int_size.458.4(brokenObj<85>), MAX_VALUE:118..), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<85>, elem<3>)), refNE(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), null)), boolImplies(refEQ(elem<3>, null), select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>))), boolImplies(refNE(elem<3>, null), boolEq(select(containsNull:39.52.32, org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>)), select(containsNull:39.52.32, brokenObj<85>))), is(org.jmlspecs.models.JMLEqualsSet.insert.596.4(state, brokenObj<85>, elem<3>), \type(JMLEqualsSet)))));
ASSUME (\forall anytype brokenObj<183>; refEQ(java.lang.Object#objectState(state, brokenObj<183>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<184>; typeEQ(java.lang.Object#_getClass(state, brokenObj<184>), \typeof(brokenObj<184>)));
ASSUME (\forall anytype brokenObj<185>; refEQ(java.lang.Object#objectState(state, brokenObj<185>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<186>; typeEQ(java.lang.Object#_getClass(state, brokenObj<186>), \typeof(brokenObj<186>)));
ASSUME (\forall anytype brokenObj<187>; refEQ(java.lang.Object#objectState(state, brokenObj<187>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<188>; typeEQ(java.lang.Object#_getClass(state, brokenObj<188>), \typeof(brokenObj<188>)));
ASSUME (\forall anytype brokenObj<189>; refEQ(java.lang.Object#objectState(state, brokenObj<189>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<190>; typeEQ(java.lang.Object#_getClass(state, brokenObj<190>), \typeof(brokenObj<190>)));
ASSUME (\forall anytype brokenObj<191>; refEQ(java.lang.Object#objectState(state, brokenObj<191>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<192>; typeEQ(java.lang.Object#_getClass(state, brokenObj<192>), \typeof(brokenObj<192>)));
ASSUME (\forall anytype brokenObj<193>; integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<193>), org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33(select(_length:38.194.31, brokenObj<193>))));
ASSUME (\forall anytype brokenObj<194>; refEQ(java.lang.Object#objectState(state, brokenObj<194>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<195>; typeEQ(java.lang.Object#_getClass(state, brokenObj<195>), \typeof(brokenObj<195>)));
ASSUME (\forall anytype brokenObj<196>; refEQ(java.lang.Throwable#_message(state, brokenObj<196>), java.lang.Throwable.getMessage.73.4(state, brokenObj<196>)));
ASSUME (\forall anytype brokenObj<197>; refEQ(java.lang.Throwable#_cause(state, brokenObj<197>), java.lang.Throwable.getCause.83.4(state, brokenObj<197>)));
ASSUME (\forall anytype brokenObj<198>; boolEq(java.lang.Throwable#causeKnown(state, brokenObj<198>), refNE(java.lang.Throwable.getCause.83.4(state, brokenObj<198>), null)));
ASSUME (\forall anytype brokenObj<199>; refEQ(java.lang.Throwable#_stackTrace(state, brokenObj<199>), java.lang.Throwable.getStackTrace.129.4(state, brokenObj<199>)));
ASSUME (\forall anytype brokenObj<200>; refEQ(java.lang.Object#objectState(state, brokenObj<200>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<201>; typeEQ(java.lang.Object#_getClass(state, brokenObj<201>), \typeof(brokenObj<201>)));
ASSUME (\forall anytype brokenObj<202>; refEQ(java.lang.Object#objectState(state, brokenObj<202>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<203>; typeEQ(java.lang.Object#_getClass(state, brokenObj<203>), \typeof(brokenObj<203>)));
ASSUME (\forall anytype brokenObj<204>; refEQ(java.lang.Object#objectState(state, brokenObj<204>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<205>; typeEQ(java.lang.Object#_getClass(state, brokenObj<205>), \typeof(brokenObj<205>)));
ASSUME (\forall anytype brokenObj<206>; integralEQ(java.lang.Integer#theInteger(state, brokenObj<206>), java.lang.Integer.intValue.329.4(brokenObj<206>)));
ASSUME (\forall anytype brokenObj<207>; refEQ(java.lang.Object#objectState(state, brokenObj<207>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<208>; typeEQ(java.lang.Object#_getClass(state, brokenObj<208>), \typeof(brokenObj<208>)));
ASSUME (\forall anytype brokenObj<209>; refEQ(java.lang.Object#objectState(state, brokenObj<209>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<210>; typeEQ(java.lang.Object#_getClass(state, brokenObj<210>), \typeof(brokenObj<210>)));
ASSUME (\forall anytype brokenObj<211>; refEQ(java.lang.Object#objectState(state, brokenObj<211>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<212>; typeEQ(java.lang.Object#_getClass(state, brokenObj<212>), \typeof(brokenObj<212>)));
ASSUME (\forall anytype brokenObj<213>; refEQ(java.lang.Object#objectState(state, brokenObj<213>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<214>; typeEQ(java.lang.Object#_getClass(state, brokenObj<214>), \typeof(brokenObj<214>)));
ASSUME (\forall anytype brokenObj<215>; integralEQ(java.lang.Character#ch_(state, brokenObj<215>), java.lang.Character.charValue.210.4(brokenObj<215>)));
ASSUME (\forall anytype brokenObj<216>; refEQ(java.lang.Object#objectState(state, brokenObj<216>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<217>; typeEQ(java.lang.Object#_getClass(state, brokenObj<217>), \typeof(brokenObj<217>)));
ASSUME (\forall anytype brokenObj<218>; refEQ(java.lang.Object#objectState(state, brokenObj<218>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<219>; typeEQ(java.lang.Object#_getClass(state, brokenObj<219>), \typeof(brokenObj<219>)));
ASSUME (\forall anytype brokenObj<220>; refEQ(java.lang.Object#objectState(state, brokenObj<220>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<221>; typeEQ(java.lang.Object#_getClass(state, brokenObj<221>), \typeof(brokenObj<221>)));
ASSUME (\forall anytype brokenObj<222>; refEQ(java.lang.Object#objectState(state, brokenObj<222>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<223>; typeEQ(java.lang.Object#_getClass(state, brokenObj<223>), \typeof(brokenObj<223>)));
ASSUME (\forall anytype brokenObj<224>; refEQ(java.lang.Object#objectState(state, brokenObj<224>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<225>; typeEQ(java.lang.Object#_getClass(state, brokenObj<225>), \typeof(brokenObj<225>)));
ASSUME (\forall anytype brokenObj<226>; refEQ(java.lang.Object#objectState(state, brokenObj<226>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<227>; typeEQ(java.lang.Object#_getClass(state, brokenObj<227>), \typeof(brokenObj<227>)));
ASSUME (\forall anytype brokenObj<228>; refEQ(java.lang.Throwable#_message(state, brokenObj<228>), java.lang.Throwable.getMessage.73.4(state, brokenObj<228>)));
ASSUME (\forall anytype brokenObj<229>; refEQ(java.lang.Throwable#_cause(state, brokenObj<229>), java.lang.Throwable.getCause.83.4(state, brokenObj<229>)));
ASSUME (\forall anytype brokenObj<230>; boolEq(java.lang.Throwable#causeKnown(state, brokenObj<230>), refNE(java.lang.Throwable.getCause.83.4(state, brokenObj<230>), null)));
ASSUME (\forall anytype brokenObj<231>; refEQ(java.lang.Throwable#_stackTrace(state, brokenObj<231>), java.lang.Throwable.getStackTrace.129.4(state, brokenObj<231>)));
ASSUME (\forall anytype brokenObj<232>; refEQ(java.lang.Object#objectState(state, brokenObj<232>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<233>; typeEQ(java.lang.Object#_getClass(state, brokenObj<233>), \typeof(brokenObj<233>)));
ASSUME (\forall anytype brokenObj<234>; refEQ(java.lang.Object#objectState(state, brokenObj<234>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<235>; typeEQ(java.lang.Object#_getClass(state, brokenObj<235>), \typeof(brokenObj<235>)));
ASSUME (\forall anytype brokenObj<236>; integralEQ(org.jmlspecs.models.JMLChar#theChar(state, brokenObj<236>), select(value:47.45.25, brokenObj<236>)));
ASSUME (\forall anytype brokenObj<237>; refEQ(java.lang.Object#objectState(state, brokenObj<237>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<238>; typeEQ(java.lang.Object#_getClass(state, brokenObj<238>), \typeof(brokenObj<238>)));
ASSUME (\forall anytype brokenObj<239>; refEQ(java.lang.Object#objectState(state, brokenObj<239>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<240>; typeEQ(java.lang.Object#_getClass(state, brokenObj<240>), \typeof(brokenObj<240>)));
ASSUME (\forall anytype brokenObj<241>; refEQ(java.lang.Object#objectState(state, brokenObj<241>), IT:32.46.54));
ASSUME (\forall anytype brokenObj<242>; typeEQ(java.lang.Object#_getClass(state, brokenObj<242>), \typeof(brokenObj<242>)));
ASSERT (\lblneg Exception@103.2 anyEQ(EC, ecReturn));
ASSUME boolImplies(anyEQ(EC, ecReturn), integralEQ(sos.koa.District.number.108.2(state, this), 0));
ASSUME boolImplies(anyEQ(EC, ecReturn), java.lang.String.equals.320.4(state, sos.koa.District.name.121.2(state, this), ""));
ASSUME boolImplies(anyEQ(EC, ecReturn), refEQ(sos.koa.District.kiesKring.134.2(state, this), null));
ASSUME boolNot(boolAnd(anyEQ(EC, ecThrow), typeLE(\typeof(XRES), \type(java.lang.Exception))));
ASSERT (\lblneg Invariant:45.6@103.2 (\forall anytype brokenObj<91>; boolImplies(boolAnd(is(brokenObj<91>, \type(sos.koa.District)), isAllocated(brokenObj<91>, alloc), refNE(brokenObj<91>, null)), integralLE(java.lang.String.length.225.4(select(my_name:44.46, brokenObj<91>)), DISTRICT_NAME_MAX_LENGTH:32.20))));
ASSERT (\lblneg Invariant:38.202.18@103.2 (\forall anytype brokenObj<94>; boolImplies(boolAnd(is(brokenObj<94>, \type(org.jmlspecs.models.JMLValueSequence)), isAllocated(brokenObj<94>, alloc), refNE(brokenObj<94>, null), refNE(select(theSeq:38.188.37, brokenObj<94>), null)), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<94>), org.jmlspecs.models.JMLListValueNode.length.398.26(select(theSeq:38.188.37, brokenObj<94>))))));
ASSERT (\lblneg Invariant:167.92.24@103.2 (\forall anytype brokenObj<95>; boolImplies(boolAnd(is(brokenObj<95>, \type(java.util.Map)), isAllocated(brokenObj<95>, alloc), refNE(brokenObj<95>, null)), (\forall Object o1:167.93.29,  o2:167.93.33; boolImplies(boolAnd(org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, brokenObj<95>), o1:167.93.29), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, brokenObj<95>), o2:167.93.33), refNE(o2:167.93.33, o1:167.93.29)), boolNot(org.jmlspecs.models.JMLNullSafe.equals.32.4(state, o2:167.93.33, o1:167.93.29)))))));
ASSERT (\lblneg Invariant:38.203.19@103.2 (\forall anytype brokenObj<100>; boolImplies(boolAnd(is(brokenObj<100>, \type(org.jmlspecs.models.JMLValueSequence)), isAllocated(brokenObj<100>, alloc), refNE(brokenObj<100>, null)), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<100>), org.jmlspecs.models.JMLValueSequence.length.623.26(brokenObj<100>)))));
ASSERT (\lblneg Invariant:51.6@103.2 (\forall anytype brokenObj<104>; boolImplies(boolAnd(is(brokenObj<104>, \type(sos.koa.District)), isAllocated(brokenObj<104>, alloc), refNE(brokenObj<104>, null), refNE(select(my_kiesKring:50.40, brokenObj<104>), null)), refEQ(select(owner:8.45.28, brokenObj<104>), select(my_kiesKring:50.40, brokenObj<104>)))));
ASSERT (\lblneg Invariant:38.6@103.2 (\forall anytype brokenObj<105>; boolImplies(boolAnd(is(brokenObj<105>, \type(sos.koa.District)), isAllocated(brokenObj<105>, alloc), refNE(brokenObj<105>, null)), boolAnd(integralLE(0, select(my_number:37.34, brokenObj<105>)), integralLE(select(my_number:37.34, brokenObj<105>), MAX_DISTRICTS_PER_KIESKRING:15.48.19)))));
ASSERT (\lblneg Invariant:167.88.24@103.2 (\forall anytype brokenObj<109>; boolImplies(boolAnd(is(brokenObj<109>, \type(java.util.Map)), isAllocated(brokenObj<109>, alloc), refNE(brokenObj<109>, null)), (\forall Object o:167.89.29; boolImplies(boolAnd(is(o:167.89.29, \type(Object)), isAllocated(o:167.89.29, alloc), refNE(o:167.89.29, null), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, java.util.Map#theMap(state, brokenObj<109>), o:167.89.29)), boolAnd(is(o:167.89.29, \type(Map.Entry)), refNE(o:167.89.29, null)))))));
ASSERT (\lblneg Invariant:181.161.15@103.2 (\forall anytype brokenObj<115>; boolImplies(boolAnd(is(brokenObj<115>, \type(org.jmlspecs.models.JMLEqualsSet)), isAllocated(brokenObj<115>, alloc), refNE(brokenObj<115>, null)), boolEq(select(containsNull:39.52.32, brokenObj<115>), org.jmlspecs.models.JMLEqualsSet.has.368.4(state, brokenObj<115>, null)))));
ASSERT (\lblneg Invariant:38.199.18@103.2 (\forall anytype brokenObj<118>; boolImplies(boolAnd(is(brokenObj<118>, \type(org.jmlspecs.models.JMLValueSequence)), isAllocated(brokenObj<118>, alloc), refNE(brokenObj<118>, null)), boolEq(refEQ(select(theSeq:38.188.37, brokenObj<118>), null), integralEQ(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<118>), 0)))));
ASSERT (\lblneg Invariant:185.45.15@103.2 (\forall anytype brokenObj<128>; boolImplies(boolAnd(is(brokenObj<128>, \type(org.jmlspecs.models.JMLListEqualsNode)), isAllocated(brokenObj<128>, alloc), refNE(brokenObj<128>, null)), (\forall JMLListEqualsNode l2:185.45.52,  e1:185.46.43,  e2:185.46.47,  n:185.47.45; boolImplies(boolAnd(is(l2:185.45.52, \type(JMLListEqualsNode)), isAllocated(l2:185.45.52, alloc), refNE(l2:185.45.52, null), is(e1:185.46.43, \type(Object)), isAllocated(e1:185.46.43, alloc), refNE(e1:185.46.43, null), is(e2:185.46.47, \type(Object)), isAllocated(e2:185.46.47, alloc), refNE(e2:185.46.47, null), is(n:185.47.45, \type(bigint))), org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24(state, brokenObj<128>, brokenObj<128>, l2:185.45.52, e1:185.46.43, e2:185.46.47, n:185.47.45))))));
ASSERT (\lblneg Invariant:38.200.18@103.2 (\forall anytype brokenObj<129>; boolImplies(boolAnd(is(brokenObj<129>, \type(org.jmlspecs.models.JMLValueSequence)), isAllocated(brokenObj<129>, alloc), refNE(brokenObj<129>, null)), integralGE(org.jmlspecs.models.JMLValueSequence#length(state, brokenObj<129>), 0))));
ASSERT (\lblneg Invariant:34.46.6@103.2 (\forall anytype brokenObj<130>; boolImplies(boolAnd(is(brokenObj<130>, \type(sos.koa.KiesLijst)), isAllocated(brokenObj<130>, alloc), refNE(brokenObj<130>, null)), boolAnd(integralLE(0, sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<130>)), integralLE(sos.koa.KiesLijst.candidateCount.256.2(state, brokenObj<130>), MAX_CANDIDATES_PER_KIESLIJST:34.45.20)))));
ASSERT (\lblneg Invariant:181.178.18@103.2 (\forall anytype brokenObj<139>; boolImplies(boolAnd(is(brokenObj<139>, \type(org.jmlspecs.models.JMLEqualsSet)), isAllocated(brokenObj<139>, alloc), refNE(brokenObj<139>, null), refNE(select(the_list:181.166.38, brokenObj<139>), null), refNE(select(next:185.101.35, select(the_list:181.166.38, brokenObj<139>)), null)), boolNot(org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, select(next:185.101.35, select(the_list:181.166.38, brokenObj<139>)), select(val:185.97.24, select(the_list:181.166.38, brokenObj<139>)))))));
ASSERT (\lblneg Invariant:185.128.15@103.2 (\forall anytype brokenObj<155>; boolImplies(boolAnd(is(brokenObj<155>, \type(org.jmlspecs.models.JMLListEqualsNode)), isAllocated(brokenObj<155>, alloc), refNE(brokenObj<155>, null)), boolEq(select(containsNull:185.124.29, brokenObj<155>), org.jmlspecs.models.JMLListEqualsNode.has.437.4(state, brokenObj<155>, null)))));
ASSERT (\lblneg Invariant:33.338.6@103.2 (\forall anytype brokenObj<170>; boolImplies(boolAnd(is(brokenObj<170>, \type(sos.koa.CandidateList)), isAllocated(brokenObj<170>, alloc), refNE(brokenObj<170>, null)), (\forall int i:33.338.29; refEQ(sos.koa.CandidateList.getCandidate.374.2(state, brokenObj<170>, i:33.338.29), sos.koa.CandidateList.getCandidate.341.2(state, brokenObj<170>, java.lang.Integer.toString.249.4(i:33.338.29)))))));
ASSERT (\lblneg Invariant:181.55.15@103.2 (\forall anytype brokenObj<176>; boolImplies(boolAnd(is(brokenObj<176>, \type(org.jmlspecs.models.JMLEqualsSet)), isAllocated(brokenObj<176>, alloc), refNE(brokenObj<176>, null)), (\forall JMLEqualsSet s2:181.55.47; boolImplies(boolAnd(is(s2:181.55.47, \type(JMLEqualsSet)), isAllocated(s2:181.55.47, alloc), refNE(s2:181.55.47, null), refNE(s2:181.55.47, null)), (\forall Object e1:181.56.43,  e2:181.56.47; org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31(state, brokenObj<176>, s2:181.55.47, e1:181.56.43, e2:181.56.47)))))));
ASSERT (\lblneg Invariant:33.39.6@103.2 (\forall anytype brokenObj<182>; boolImplies(boolAnd(is(brokenObj<182>, \type(sos.koa.CandidateList)), isAllocated(brokenObj<182>, alloc), refNE(brokenObj<182>, null)), integralLE(java.util.Map.size.102.4(state, select(my_kieskringen:33.37.55, brokenObj<182>)), MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20))))
[converting VC to a string]

(EXPLIES 
(LBLNEG |vc.sos.koa.District.clear.84.2| (IMPLIES (AND (EQ |MAX_KIESKRINGEN_PER_CANDIDATE_LIST@pre:33.30.20| |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20|) (EQ |@true| (is |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20| T_byte)) (EQ |my_city_of_residence@pre:35.123.46| |my_city_of_residence:35.123.46|) (EQ |my_city_of_residence:35.123.46| (asField |my_city_of_residence:35.123.46| |T_java.lang.String|)) (< (fClosedTime |my_city_of_residence:35.123.46|) alloc) (FORALL (|s<6>|) (IMPLIES (NEQ |s<6>| null) (NEQ (select |my_city_of_residence:35.123.46| |s<6>|) null))) (EQ |next@pre:185.101.35| |next:185.101.35|) (EQ |next:185.101.35| (asField |next:185.101.35| |T_org.jmlspecs.models.JMLListEqualsNode|)) (< (fClosedTime |next:185.101.35|) alloc) (EQ |MY_CACHED_KIESLIJSTEN@pre:34.54.64| |MY_CACHED_KIESLIJSTEN:34.54.64|) (EQ |@true| (is |MY_CACHED_KIESLIJSTEN:34.54.64| (array |T_sos.koa.KiesLijst|))) (EQ |@true| (isAllocated |MY_CACHED_KIESLIJSTEN:34.54.64| alloc)) (NEQ |MY_CACHED_KIESLIJSTEN:34.54.64| null) (EQ |my_kieslijst_count@pre:15.125.35| |my_kieslijst_count:15.125.35|) (EQ |my_kieslijst_count:15.125.35| (asField |my_kieslijst_count:15.125.35| T_byte)) (EQ |MAX_CANDIDATES_PER_KIESLIJST@pre:34.45.20| |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|) (EQ |@true| (is |MAX_CANDIDATES_PER_KIESLIJST:34.45.20| T_byte)) (EQ |my_kiesKringCount@pre:191.34.35| |my_kiesKringCount:191.34.35|) (EQ |my_kiesKringCount:191.34.35| (asField |my_kiesKringCount:191.34.35| T_byte)) (EQ |FIRSTNAME_MAX_LENGTH@pre:35.38.20| |FIRSTNAME_MAX_LENGTH:35.38.20|) (EQ |@true| (is |FIRSTNAME_MAX_LENGTH:35.38.20| T_byte)) (EQ |theSeq@pre:38.188.37| |theSeq:38.188.37|) (EQ |theSeq:38.188.37| (asField |theSeq:38.188.37| |T_org.jmlspecs.models.JMLListValueNode|)) (< (fClosedTime |theSeq:38.188.37|) alloc) (EQ |my_firstname@pre:35.94.46| |my_firstname:35.94.46|) (EQ |my_firstname:35.94.46| (asField |my_firstname:35.94.46| |T_java.lang.String|)) (< (fClosedTime |my_firstname:35.94.46|) alloc) (FORALL (|s<7>|) (IMPLIES (NEQ |s<7>| null) (NEQ (select |my_firstname:35.94.46| |s<7>|) null))) (EQ |INITIALS_MAX_LENGTH@pre:35.50.20| |INITIALS_MAX_LENGTH:35.50.20|) (EQ |@true| (is |INITIALS_MAX_LENGTH:35.50.20| T_byte)) (EQ |containsNull@pre:185.124.29| |containsNull:185.124.29|) (EQ |containsNull:185.124.29| (asField |containsNull:185.124.29| T_boolean)) (EQ |size@pre:181.171.44| |size:181.171.44|) (EQ |size:181.171.44| (asField |size:181.171.44| T_int)) (EQ |my_gender@pre:35.108.35| |my_gender:35.108.35|) (EQ |my_gender:35.108.35| (asField |my_gender:35.108.35| T_char)) (EQ |my_kiesKring@pre:35.130.49| |my_kiesKring:35.130.49|) (EQ |my_kiesKring:35.130.49| (asField |my_kiesKring:35.130.49| |T_sos.koa.KiesKring|)) (< (fClosedTime |my_kiesKring:35.130.49|) alloc) (FORALL (|s<8>|) (IMPLIES (NEQ |s<8>| null) (NEQ (select |my_kiesKring:35.130.49| |s<8>|) null))) (EQ |my_vote_count@pre:34.104.34| |my_vote_count:34.104.34|) (EQ |my_vote_count:34.104.34| (asField |my_vote_count:34.104.34| T_int)) (EQ |objectState@pre:8.38.43| |objectState:8.38.43|) (EQ |objectState:8.38.43| (asField |objectState:8.38.43| |T_org.jmlspecs.lang.JMLDataGroup|)) (< (fClosedTime |objectState:8.38.43|) alloc) (FORALL (|s<9>|) (IMPLIES (NEQ |s<9>| null) (NEQ (select |objectState:8.38.43| |s<9>|) null))) (EQ |my_district_count@pre:15.116.35| |my_district_count:15.116.35|) (EQ |my_district_count:15.116.35| (asField |my_district_count:15.116.35| T_byte)) (EQ |my_vote_count@pre:35.150.34| |my_vote_count:35.150.34|) (EQ |my_vote_count:35.150.34| (asField |my_vote_count:35.150.34| T_int)) (EQ |containsNull@pre:39.52.32| |containsNull:39.52.32|) (EQ |containsNull:39.52.32| (asField |containsNull:39.52.32| T_boolean)) (EQ |my_positieCount@pre:191.55.34| |my_positieCount:191.55.34|) (EQ |my_positieCount:191.55.34| (asField |my_positieCount:191.55.34| T_int)) (EQ |theString@pre:8.184.28| |theString:8.184.28|) (EQ |theString:8.184.28| (asField |theString:8.184.28| |T_java.lang.String|)) (< (fClosedTime |theString:8.184.28|) alloc) (EQ |UNKNOWN@pre:35.58.46| |UNKNOWN:35.58.46|) (EQ |@true| (is |UNKNOWN:35.58.46| T_char)) (EQ |my_blanco_count@pre:33.66.35| |my_blanco_count:33.66.35|) (EQ |my_blanco_count:33.66.35| (asField |my_blanco_count:33.66.35| T_byte)) (EQ |DISTRICT_NAME_MAX_LENGTH@pre:32.20| |DISTRICT_NAME_MAX_LENGTH:32.20|) (EQ |@true| (is |DISTRICT_NAME_MAX_LENGTH:32.20| T_byte)) (EQ |owner@pre:8.45.28| |owner:8.45.28|) (EQ |owner:8.45.28| (asField |owner:8.45.28| |T_java.lang.Object|)) (< (fClosedTime |owner:8.45.28|) alloc) (EQ |KIESKRING_NAME_MAX_LENGTH@pre:15.35.20| |KIESKRING_NAME_MAX_LENGTH:15.35.20|) (EQ |@true| (is |KIESKRING_NAME_MAX_LENGTH:15.35.20| T_byte)) (EQ |my_lastname@pre:35.86.46| |my_lastname:35.86.46|) (EQ |my_lastname:35.86.46| (asField |my_lastname:35.86.46| |T_java.lang.String|)) (< (fClosedTime |my_lastname:35.86.46|) alloc) (FORALL (|s<10>|) (IMPLIES (NEQ |s<10>| null) (NEQ (select |my_lastname:35.86.46| |s<10>|) null))) (EQ |val@pre:185.97.24| |val:185.97.24|) (EQ |val:185.97.24| (asField |val:185.97.24| |T_java.lang.Object|)) (< (fClosedTime |val:185.97.24|) alloc) (EQ |elementType@pre:185.109.27| |elementType:185.109.27|) (EQ |elementType:185.109.27| (asField |elementType:185.109.27| |T_.TYPE|)) (EQ |my_name@pre:15.98.46| |my_name:15.98.46|) (EQ |my_name:15.98.46| (asField |my_name:15.98.46| |T_java.lang.String|)) (< (fClosedTime |my_name:15.98.46|) alloc) (FORALL (|s<11>|) (IMPLIES (NEQ |s<11>| null) (NEQ (select |my_name:15.98.46| |s<11>|) null))) (EQ |MY_CACHED_KIESKRINGEN@pre:15.68.64| |MY_CACHED_KIESKRINGEN:15.68.64|) (EQ |@true| (is |MY_CACHED_KIESKRINGEN:15.68.64| (array |T_sos.koa.KiesKring|))) (EQ |@true| (isAllocated |MY_CACHED_KIESKRINGEN:15.68.64| alloc)) (NEQ |MY_CACHED_KIESKRINGEN:15.68.64| null) (EQ |my_candidates@pre:34.67.63| |my_candidates:34.67.63|) (EQ |my_candidates:34.67.63| (asField |my_candidates:34.67.63| (array |T_sos.koa.Candidate|))) (< (fClosedTime |my_candidates:34.67.63|) alloc) (FORALL (|s<12>|) (IMPLIES (NEQ |s<12>| null) (NEQ (select |my_candidates:34.67.63| |s<12>|) null))) (EQ |my_kieskring_number@pre:34.90.35| |my_kieskring_number:34.90.35|) (EQ |my_kieskring_number:34.90.35| (asField |my_kieskring_number:34.90.35| T_byte)) (EQ |my_number@pre:34.76.35| |my_number:34.76.35|) (EQ |my_number:34.76.35| (asField |my_number:34.76.35| T_byte)) (EQ |my_number@pre:15.90.35| |my_number:15.90.35|) (EQ |my_number:15.90.35| (asField |my_number:15.90.35| T_byte)) (EQ |my_name@pre:34.83.46| |my_name:34.83.46|) (EQ |my_name:34.83.46| (asField |my_name:34.83.46| |T_java.lang.String|)) (< (fClosedTime |my_name:34.83.46|) alloc) (FORALL (|s<13>|) (IMPLIES (NEQ |s<13>| null) (NEQ (select |my_name:34.83.46| |s<13>|) null))) (EQ |my_districts@pre:15.105.56| |my_districts:15.105.56|) (EQ |my_districts:15.105.56| (asField |my_districts:15.105.56| (array |T_sos.koa.District|))) (< (fClosedTime |my_districts:15.105.56|) alloc) (FORALL (|s<14>|) (IMPLIES (NEQ |s<14>| null) (NEQ (select |my_districts:15.105.56| |s<14>|) null))) (EQ |GROEPERING_NAME_MAX_LENGTH@pre:34.39.20| |GROEPERING_NAME_MAX_LENGTH:34.39.20|) (EQ |@true| (is |GROEPERING_NAME_MAX_LENGTH:34.39.20| T_byte)) (EQ |MALE@pre:35.58.20| |MALE:35.58.20|) (EQ |@true| (is |MALE:35.58.20| T_char)) (EQ |my_kiesKring@pre:50.40| |my_kiesKring:50.40|) (EQ |my_kiesKring:50.40| (asField |my_kiesKring:50.40| |T_sos.koa.KiesKring|)) (< (fClosedTime |my_kiesKring:50.40|) alloc) (EQ |my_kieskringen@pre:33.37.55| |my_kieskringen:33.37.55|) (EQ |my_kieskringen:33.37.55| (asField |my_kieskringen:33.37.55| |T_java.util.SortedMap|)) (< (fClosedTime |my_kieskringen:33.37.55|) alloc) (FORALL (|s<15>|) (IMPLIES (NEQ |s<15>| null) (NEQ (select |my_kieskringen:33.37.55| |s<15>|) null))) (EQ |MAX_KIESLIJSTEN_PER_KIESKRING@pre:15.61.20| |MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20|) (EQ |@true| (is |MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20| T_byte)) (EQ |theMap@pre:167.86.52| |theMap:167.86.52|) (EQ |theMap:167.86.52| (asField |theMap:167.86.52| |T_org.jmlspecs.models.JMLEqualsSet|)) (< (fClosedTime |theMap:167.86.52|) alloc) (FORALL (|s<16>|) (IMPLIES (NEQ |s<16>| null) (NEQ (select |theMap:167.86.52| |s<16>|) null))) (EQ |my_number@pre:37.34| |my_number:37.34|) (EQ |my_number:37.34| (asField |my_number:37.34| T_int)) (EQ |my_metadata@pre:33.47.67| |my_metadata:33.47.67|) (EQ |my_metadata:33.47.67| (asField |my_metadata:33.47.67| |T_sos.koa.CandidateListMetadata|)) (< (fClosedTime |my_metadata:33.47.67|) alloc) (FORALL (|s<17>|) (IMPLIES (NEQ |s<17>| null) (NEQ (select |my_metadata:33.47.67| |s<17>|) null))) (EQ |kiesKringen@pre:36.72.53| |kiesKringen:36.72.53|) (EQ |@true| (is |kiesKringen:36.72.53| |T_java.util.TreeMap|)) (EQ |@true| (isAllocated |kiesKringen:36.72.53| alloc)) (NEQ |kiesKringen:36.72.53| null) (EQ |my_initials@pre:35.101.46| |my_initials:35.101.46|) (EQ |my_initials:35.101.46| (asField |my_initials:35.101.46| |T_java.lang.String|)) (< (fClosedTime |my_initials:35.101.46|) alloc) (FORALL (|s<18>|) (IMPLIES (NEQ |s<18>| null) (NEQ (select |my_initials:35.101.46| |s<18>|) null))) (EQ |CITY_OF_RESIDENCE_MAX_LENGTH@pre:35.81.20| |CITY_OF_RESIDENCE_MAX_LENGTH:35.81.20|) (EQ |@true| (is |CITY_OF_RESIDENCE_MAX_LENGTH:35.81.20| T_byte)) (EQ |FEMALE@pre:35.58.32| |FEMALE:35.58.32|) (EQ |@true| (is |FEMALE:35.58.32| T_char)) (EQ |my_kiesLijsten@pre:15.80.49| |my_kiesLijsten:15.80.49|) (EQ |my_kiesLijsten:15.80.49| (asField |my_kiesLijsten:15.80.49| (array |T_sos.koa.KiesLijst|))) (< (fClosedTime |my_kiesLijsten:15.80.49|) alloc) (FORALL (|s<19>|) (IMPLIES (NEQ |s<19>| null) (NEQ (select |my_kiesLijsten:15.80.49| |s<19>|) null))) (EQ |my_candidate_count@pre:34.97.35| |my_candidate_count:34.97.35|) (EQ |my_candidate_count:34.97.35| (asField |my_candidate_count:34.97.35| T_byte)) (EQ |my_name@pre:44.46| |my_name:44.46|) (EQ |my_name:44.46| (asField |my_name:44.46| |T_java.lang.String|)) (< (fClosedTime |my_name:44.46|) alloc) (FORALL (|s<20>|) (IMPLIES (NEQ |s<20>| null) (NEQ (select |my_name:44.46| |s<20>|) null))) (EQ |my_codeCount@pre:191.70.34| |my_codeCount:191.70.34|) (EQ |my_codeCount:191.70.34| (asField |my_codeCount:191.70.34| T_int)) (EQ |length@pre:38.196.29| |length:38.196.29|) (EQ |length:38.196.29| (asField |length:38.196.29| T_bigint)) (EQ |my_candidate_codes@pre:33.59.43| |my_candidate_codes:33.59.43|) (EQ |my_candidate_codes:33.59.43| (asField |my_candidate_codes:33.59.43| |T_java.util.Map|)) (< (fClosedTime |my_candidate_codes:33.59.43|) alloc) (FORALL (|s<21>|) (IMPLIES (NEQ |s<21>| null) (NEQ (select |my_candidate_codes:33.59.43| |s<21>|) null))) (EQ |the_list@pre:181.166.38| |the_list:181.166.38|) (EQ |the_list:181.166.38| (asField |the_list:181.166.38| |T_org.jmlspecs.models.JMLListEqualsNode|)) (< (fClosedTime |the_list:181.166.38|) alloc) (EQ |LASTNAME_MAX_LENGTH@pre:35.28.20| |LASTNAME_MAX_LENGTH:35.28.20|) (EQ |@true| (is |LASTNAME_MAX_LENGTH:35.28.20| T_byte)) (EQ |my_kiesLijstCount@pre:191.48.35| |my_kiesLijstCount:191.48.35|) (EQ |my_kiesLijstCount:191.48.35| (asField |my_kiesLijstCount:191.48.35| T_byte)) (EQ |my_position_number@pre:35.114.35| |my_position_number:35.114.35|) (EQ |my_position_number:35.114.35| (asField |my_position_number:35.114.35| T_byte)) (EQ |MAX_DISTRICTS_PER_KIESKRING@pre:15.48.19| |MAX_DISTRICTS_PER_KIESKRING:15.48.19|) (EQ |@true| (is |MAX_DISTRICTS_PER_KIESKRING:15.48.19| T_int)) (EQ |my_districtCount@pre:191.41.34| |my_districtCount:191.41.34|) (EQ |my_districtCount:191.41.34| (asField |my_districtCount:191.41.34| T_int)) (EQ |my_kiesLijst@pre:35.140.49| |my_kiesLijst:35.140.49|) (EQ |my_kiesLijst:35.140.49| (asField |my_kiesLijst:35.140.49| |T_sos.koa.KiesLijst|)) (< (fClosedTime |my_kiesLijst:35.140.49|) alloc) (FORALL (|s<22>|) (IMPLIES (NEQ |s<22>| null) (NEQ (select |my_kiesLijst:35.140.49| |s<22>|) null))) (EQ |MAX_VALUE@pre:118..| |MAX_VALUE:118..|) (EQ |@true| (is |MAX_VALUE:118..| T_int)) (EQ |MIN_RADIX@pre:128..| |MIN_RADIX:128..|) (EQ |@true| (is |MIN_RADIX:128..| T_int)) (EQ |MAX_RADIX@pre:128..| |MAX_RADIX:128..|) (EQ |@true| (is |MAX_RADIX:128..| T_int)) (EQ |val@pre:131.97.25| |val:131.97.25|) (EQ |val:131.97.25| (asField |val:131.97.25| |T_org.jmlspecs.models.JMLType|)) (< (fClosedTime |val:131.97.25|) alloc) (EQ |elems@pre| elems) (EQ elems (asElems elems)) (< (eClosedTime elems) alloc) (EQ LS (asLockSet LS)) (EQ |alloc@pre| alloc) (EQ |state@pre| state)) (NOT (AND (FORALL (brokenObj ls ls2 e1 e2 n) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| alloc |alloc:131.60.15| e1 null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:131.60.15| |alloc:131.64.22| e1 ls)) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (IFF (EQ (select |next:131.101.34| ls) null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |next:131.101.34| ls) null)) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| (select |next:131.101.34| ls)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (select |val:131.97.25| ls) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ e1 null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.head.227.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| e1 ls)) e1 )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| ls 0) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (< 0 n) (< n (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| ls n) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| (select |next:131.101.34| ls) (- n 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n) T_boolean)))) (FORALL (brokenObj ls ls2 e1 e2 n) (PATS (|org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| alloc |alloc:131.60.15| e1 null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:131.60.15| |alloc:131.64.22| e1 ls)) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (IFF (EQ (select |next:131.101.34| ls) null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |next:131.101.34| ls) null)) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| (select |next:131.101.34| ls)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (select |val:131.97.25| ls) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ e1 null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.head.227.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| e1 ls)) e1 )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| ls 0) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (< 0 n) (< n (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| ls n) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| (select |next:131.101.34| ls) (- n 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n) T_boolean)))) (FORALL (|brokenObj<1>| i) (AND (<= 0 i) (< i (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<1>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| |brokenObj<1>| i) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<1>| i) (PATS (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| |brokenObj<1>| i)) (AND (<= 0 i) (< i (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<1>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| |brokenObj<1>| i) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<2>| a_candidate_code) (AND (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<2>| a_candidate_code ))) (NEQ (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code) null)) (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<2>| a_candidate_code ))) (EQ (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code) (|java.util.Map.get.134.4| state (select |my_candidate_codes:33.59.43| |brokenObj<2>|) (|java.lang.Integer.Integer.300.4| |alloc:131.64.22| |alloc:33.383.49| a_candidate_code)))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code) |T_sos.koa.Candidate|)))) (FORALL (|brokenObj<2>| a_candidate_code) (PATS (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code)) (AND (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<2>| a_candidate_code ))) (NEQ (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code) null)) (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<2>| a_candidate_code ))) (EQ (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code) (|java.util.Map.get.134.4| state (select |my_candidate_codes:33.59.43| |brokenObj<2>|) (|java.lang.Integer.Integer.300.4| |alloc:131.64.22| |alloc:33.383.49| a_candidate_code)))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<2>| a_candidate_code) |T_sos.koa.Candidate|)))) (FORALL (|brokenObj<3>| |a_candidate_code<1>|) (AND (IMPLIES (<= 0 |a_candidate_code<1>|) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<3>| |a_candidate_code<1>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| state (select |my_candidate_codes:33.59.43| |brokenObj<3>|) (|java.lang.Integer.Integer.300.4| |alloc:33.383.49| |alloc:33.400.57| |a_candidate_code<1>|) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<3>| |a_candidate_code<1>|) T_boolean)))) (FORALL (|brokenObj<3>| |a_candidate_code<1>|) (PATS (|sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<3>| |a_candidate_code<1>|)) (AND (IMPLIES (<= 0 |a_candidate_code<1>|) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<3>| |a_candidate_code<1>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| state (select |my_candidate_codes:33.59.43| |brokenObj<3>|) (|java.lang.Integer.Integer.300.4| |alloc:33.383.49| |alloc:33.400.57| |a_candidate_code<1>|) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.390.2| state |brokenObj<3>| |a_candidate_code<1>|) T_boolean)))) (FORALL (|brokenObj<4>| key) (AND (IMPLIES (NEQ key null) (IFF (EQ |@true| ( |java.util.Map.containsKey.115.4| state |brokenObj<4>| key )) (EXISTS (|e:167.118.32|) (AND (EQ |@true| (is |e:167.118.32| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.118.32| alloc)) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state this) |e:167.118.32| )) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state (|java.util.Map$Entry#abstractKey| state |e:167.118.32|) key )))))) (EQ |@true| (is (|java.util.Map.containsKey.115.4| state |brokenObj<4>| key) T_boolean)))) (FORALL (|brokenObj<4>| key) (PATS (|java.util.Map.containsKey.115.4| state |brokenObj<4>| key)) (AND (IMPLIES (NEQ key null) (IFF (EQ |@true| ( |java.util.Map.containsKey.115.4| state |brokenObj<4>| key )) (EXISTS (|e:167.118.32|) (AND (EQ |@true| (is |e:167.118.32| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.118.32| alloc)) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state this) |e:167.118.32| )) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state (|java.util.Map$Entry#abstractKey| state |e:167.118.32|) key )))))) (EQ |@true| (is (|java.util.Map.containsKey.115.4| state |brokenObj<4>| key) T_boolean)))) (FORALL (|brokenObj<5>|) (AND (EQ (|java.lang.String.length.225.4| |brokenObj<5>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|java.lang.String#stringSeq| state this))) (EQ |@true| (is (|java.lang.String.length.225.4| |brokenObj<5>|) T_int)))) (FORALL (|brokenObj<5>|) (PATS (|java.lang.String.length.225.4| |brokenObj<5>|)) (AND (EQ (|java.lang.String.length.225.4| |brokenObj<5>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|java.lang.String#stringSeq| state this))) (EQ |@true| (is (|java.lang.String.length.225.4| |brokenObj<5>|) T_int)))) (FORALL (|brokenObj<6>|) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<6>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) (select |val:131.97.25| |brokenObj<6>|) )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<6>|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<6>|) (PATS (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|)) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<6>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) (select |val:131.97.25| |brokenObj<6>|) )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<6>|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<7>|) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<7>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) T_bigint)))) (FORALL (|brokenObj<7>|) (PATS (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|)) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<7>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) T_bigint)))) (FORALL (|brokenObj<8>| ob2) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state |brokenObj<8>| ob2 )) (AND (NEQ ob2 null) (EQ |@true| |@true|))) (EQ |@true| (is (|org.jmlspecs.models.JMLType.equals.52.4| state |brokenObj<8>| ob2) T_boolean)))) (FORALL (|brokenObj<8>| ob2) (PATS (|org.jmlspecs.models.JMLType.equals.52.4| state |brokenObj<8>| ob2)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state |brokenObj<8>| ob2 )) (AND (NEQ ob2 null) (EQ |@true| |@true|))) (EQ |@true| (is (|org.jmlspecs.models.JMLType.equals.52.4| state |brokenObj<8>| ob2) T_boolean)))) (FORALL (|brokenObj<9>| elem) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<9>| elem )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<9>| elem) T_boolean)))) (FORALL (|brokenObj<9>| elem) (PATS (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<9>| elem)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<9>| elem )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<9>| elem) T_boolean)))) (FORALL (|brokenObj<10>|) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<10>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) T_int)))) (FORALL (|brokenObj<10>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|)) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<10>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) T_int)))) (FORALL (o1 o2) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state o1 o2 )) (EQ |@true| (termConditional (refEQ o1 null) (refEQ o2 null) (|java.lang.Object.equals.89.4| state o1 o2)))) (EQ |@true| (is (|org.jmlspecs.models.JMLNullSafe.equals.32.4| state o1 o2) T_boolean)))) (FORALL (o1 o2) (PATS (|org.jmlspecs.models.JMLNullSafe.equals.32.4| state o1 o2)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state o1 o2 )) (EQ |@true| (termConditional (refEQ o1 null) (refEQ o2 null) (|java.lang.Object.equals.89.4| state o1 o2)))) (EQ |@true| (is (|org.jmlspecs.models.JMLNullSafe.equals.32.4| state o1 o2) T_boolean)))) (FORALL (|brokenObj<11>| obj) (AND (IMPLIES (EQ |brokenObj<11>| obj) (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj ))) (IMPLIES (AND (NEQ obj null) (EQ (typeof |brokenObj<11>|) |T_java.lang.Object|)) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj )) (EQ |brokenObj<11>| obj))) (IMPLIES (EQ obj null) (NOT (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj )))) (IMPLIES (NEQ obj null) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj )) (EQ |@true| ( |java.lang.Object.equals.89.4| state obj |brokenObj<11>| )))) (EQ |@true| (is (|java.lang.Object.equals.89.4| state |brokenObj<11>| obj) T_boolean)))) (FORALL (|brokenObj<11>| obj) (PATS (|java.lang.Object.equals.89.4| state |brokenObj<11>| obj)) (AND (IMPLIES (EQ |brokenObj<11>| obj) (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj ))) (IMPLIES (AND (NEQ obj null) (EQ (typeof |brokenObj<11>|) |T_java.lang.Object|)) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj )) (EQ |brokenObj<11>| obj))) (IMPLIES (EQ obj null) (NOT (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj )))) (IMPLIES (NEQ obj null) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| state |brokenObj<11>| obj )) (EQ |@true| ( |java.lang.Object.equals.89.4| state obj |brokenObj<11>| )))) (EQ |@true| (is (|java.lang.Object.equals.89.4| state |brokenObj<11>| obj) T_boolean)))) (FORALL (|brokenObj<12>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| )) (FORALL (|e:181.447.47|) (IMPLIES (AND (EQ |@true| (is |e:181.447.47| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.447.47| alloc)) (NEQ |e:181.447.47| null)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<12>| |e:181.447.47| )))))) (IFF (EQ (select |the_list:181.166.38| |brokenObj<12>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| ))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>|) T_boolean)))) (FORALL (|brokenObj<12>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| )) (FORALL (|e:181.447.47|) (IMPLIES (AND (EQ |@true| (is |e:181.447.47| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.447.47| alloc)) (NEQ |e:181.447.47| null)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<12>| |e:181.447.47| )))))) (IFF (EQ (select |the_list:181.166.38| |brokenObj<12>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| ))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>|) T_boolean)))) (FORALL (|brokenObj<13>| |key<1>|) (AND (IMPLIES (NOT (EQ |@true| ( |java.util.Map.containsKey.115.4| state |brokenObj<13>| |key<1>| ))) (EQ (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|) null)) (IMPLIES (EQ |@true| ( |java.util.Map.containsKey.115.4| state |brokenObj<13>| |key<1>| )) (EXISTS (|e:167.140.34|) (AND (EQ |@true| (is |e:167.140.34| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.140.34| alloc)) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state this) |e:167.140.34| )) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state (|java.util.Map$Entry#abstractKey| state |e:167.140.34|) |key<1>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|) (|java.util.Map$Entry#abstractValue| state |e:167.140.34|) ))))) (EQ |@true| (is (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<13>| |key<1>|) (PATS (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|)) (AND (IMPLIES (NOT (EQ |@true| ( |java.util.Map.containsKey.115.4| state |brokenObj<13>| |key<1>| ))) (EQ (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|) null)) (IMPLIES (EQ |@true| ( |java.util.Map.containsKey.115.4| state |brokenObj<13>| |key<1>| )) (EXISTS (|e:167.140.34|) (AND (EQ |@true| (is |e:167.140.34| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.140.34| alloc)) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state this) |e:167.140.34| )) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state (|java.util.Map$Entry#abstractKey| state |e:167.140.34|) |key<1>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|) (|java.util.Map$Entry#abstractValue| state |e:167.140.34|) ))))) (EQ |@true| (is (|java.util.Map.get.134.4| state |brokenObj<13>| |key<1>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<14>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<14>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>|) T_boolean)))) (FORALL (|brokenObj<14>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<14>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>|) T_boolean)))) (FORALL (|brokenObj<15>|) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<15>|) (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| (select |_length:38.194.31| |brokenObj<15>|)))) (FORALL (|brokenObj<16>|) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<16>|) T_bigint))) (FORALL (|brokenObj<16>|) (PATS (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<16>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<16>|) T_bigint))) (FORALL (s s2 |e1<1>| |e2<1>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:33.400.57| |alloc:181.66.37|) |e1<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s null) |e2<1>| )) (OR (EQ |e2<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e2<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s |e1<1>|) |e2<1>| )) (OR (EQ |@true| ( |java.lang.Object.equals.89.4| state |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e2<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.66.37| |alloc:181.77.19|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s |e1<1>|)) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (FORALL (|o:181.85.40|) (IMPLIES (AND (EQ |@true| (is |o:181.85.40| |T_java.lang.Object|)) (EQ |@true| (isAllocated |o:181.85.40| alloc)) (NEQ |o:181.85.40| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |o:181.85.40| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |o:181.85.40| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.77.19| |alloc:181.91.19|) |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.91.19| |alloc:181.91.57|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s null) |e2<1>|) (termConditional (refEQ |e2<1>| null) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state s |e2<1>|) null)) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s |e1<1>|) |e2<1>|) (termConditional (|java.lang.Object.equals.89.4| state |e1<1>| |e2<1>|) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state s |e2<1>|) |e1<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.union.705.4| s s2) |e1<1>| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |e1<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| s )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state |alloc:181.91.57| |alloc:181.122.17| |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.122.17| |alloc:181.122.46|) |e1<1>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state s s2 )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s2 s )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>|) T_boolean)))) (FORALL (s s2 |e1<1>| |e2<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:33.400.57| |alloc:181.66.37|) |e1<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s null) |e2<1>| )) (OR (EQ |e2<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e2<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s |e1<1>|) |e2<1>| )) (OR (EQ |@true| ( |java.lang.Object.equals.89.4| state |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e2<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.66.37| |alloc:181.77.19|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s |e1<1>|)) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (FORALL (|o:181.85.40|) (IMPLIES (AND (EQ |@true| (is |o:181.85.40| |T_java.lang.Object|)) (EQ |@true| (isAllocated |o:181.85.40| alloc)) (NEQ |o:181.85.40| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |o:181.85.40| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |o:181.85.40| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.77.19| |alloc:181.91.19|) |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.91.19| |alloc:181.91.57|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s null) |e2<1>|) (termConditional (refEQ |e2<1>| null) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state s |e2<1>|) null)) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state s |e1<1>|) |e2<1>|) (termConditional (|java.lang.Object.equals.89.4| state |e1<1>| |e2<1>|) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state s |e2<1>|) |e1<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.union.705.4| s s2) |e1<1>| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s |e1<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state s2 |e1<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| s )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state |alloc:181.91.57| |alloc:181.122.17| |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.122.17| |alloc:181.122.46|) |e1<1>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state s s2 )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s2 s )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state s s2 |e1<1>| |e2<1>|) T_boolean)))) (FORALL (|brokenObj<17>| |s2<1>|) (AND (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null)) (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null) (FORALL (|e:181.680.29|) (IMPLIES (AND (EQ |@true| (is |e:181.680.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.680.29| alloc)) (NEQ |e:181.680.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |e:181.680.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<17>| |e:181.680.29| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<1>| |e:181.680.29| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<17>| |s2<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|)) (AND (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null)) (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null) (FORALL (|e:181.680.29|) (IMPLIES (AND (EQ |@true| (is |e:181.680.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.680.29| alloc)) (NEQ |e:181.680.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |e:181.680.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<17>| |e:181.680.29| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<1>| |e:181.680.29| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (alloc_ allocNew_ e) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) e )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e)) 1) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) alloc_))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) allocNew_)))) (FORALL (alloc_ allocNew_ e) (PATS (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e)) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) e )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e)) 1) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) alloc_))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| state alloc_ allocNew_ e) allocNew_)))) (FORALL (|alloc_<1>| |allocNew_<1>|) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) )) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |alloc_<1>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |allocNew_<1>|)))) (FORALL (|alloc_<1>| |allocNew_<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|)) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) )) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |alloc_<1>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |allocNew_<1>|)))) (FORALL (|brokenObj<18>| |s2<2>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (FORALL (|e:181.411.36|) (IMPLIES (AND (EQ |@true| (is |e:181.411.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.411.36| alloc)) (NEQ |e:181.411.36| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<18>| |e:181.411.36| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|) |e:181.411.36| ))))))) (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<18>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>|) T_boolean)))) (FORALL (|brokenObj<18>| |s2<2>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (FORALL (|e:181.411.36|) (IMPLIES (AND (EQ |@true| (is |e:181.411.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.411.36| alloc)) (NEQ |e:181.411.36| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<18>| |e:181.411.36| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|) |e:181.411.36| ))))))) (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<18>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<18>| |s2<2>|) T_boolean)))) (FORALL (|brokenObj<19>|) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) 0)) (IMPLIES (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| ))) (EXISTS (|e:181.463.36|) (AND (EQ |@true| (is |e:181.463.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.463.36| alloc)) (NEQ |e:181.463.36| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<19>| |e:181.463.36| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) (+ 1 (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<19>| |e:181.463.36|))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) T_int)))) (FORALL (|brokenObj<19>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) 0)) (IMPLIES (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| ))) (EXISTS (|e:181.463.36|) (AND (EQ |@true| (is |e:181.463.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.463.36| alloc)) (NEQ |e:181.463.36| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<19>| |e:181.463.36| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) (+ 1 (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<19>| |e:181.463.36|))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) T_int)))) (FORALL (|brokenObj<20>| |s2<3>|) (AND (IMPLIES (AND (NEQ |s2<3>| null) (NEQ |s2<3>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |s2<3>| |brokenObj<20>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>|) T_boolean)))) (FORALL (|brokenObj<20>| |s2<3>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>|)) (AND (IMPLIES (AND (NEQ |s2<3>| null) (NEQ |s2<3>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |s2<3>| |brokenObj<20>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>|) T_boolean)))) (FORALL (|i<1>|) (AND (NEQ (|java.lang.Integer.toString.249.4| |i<1>|) null) (EQ |@true| ( |java.lang.String.equals.320.4| state (|java.lang.Integer.toString.249.4| |i<1>|) (|java.lang.Integer.toString.115.4| |i<1>| 10) )) (EQ |@true| (is (|java.lang.Integer.toString.249.4| |i<1>|) |T_java.lang.String|)))) (FORALL (|i<1>|) (PATS (|java.lang.Integer.toString.249.4| |i<1>|)) (AND (NEQ (|java.lang.Integer.toString.249.4| |i<1>|) null) (EQ |@true| ( |java.lang.String.equals.320.4| state (|java.lang.Integer.toString.249.4| |i<1>|) (|java.lang.Integer.toString.115.4| |i<1>| 10) )) (EQ |@true| (is (|java.lang.Integer.toString.249.4| |i<1>|) |T_java.lang.String|)))) (FORALL (|brokenObj<21>| anObject) (AND (IMPLIES (AND (NEQ anObject null) (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)) (IFF (EQ |@true| ( |java.lang.String.equals.320.4| state |brokenObj<21>| anObject )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|java.lang.String#stringSeq| state this) (|java.lang.String#stringSeq| state (cast anObject |T_java.lang.String|)) )))) (IMPLIES (EQ this anObject) (EQ |@true| ( |java.lang.String.equals.320.4| state |brokenObj<21>| anObject ))) (IMPLIES (OR (EQ anObject null) (NOT (AND (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)))) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| state |brokenObj<21>| anObject )))) (EQ |@true| (is (|java.lang.String.equals.320.4| state |brokenObj<21>| anObject) T_boolean)))) (FORALL (|brokenObj<21>| anObject) (PATS (|java.lang.String.equals.320.4| state |brokenObj<21>| anObject)) (AND (IMPLIES (AND (NEQ anObject null) (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)) (IFF (EQ |@true| ( |java.lang.String.equals.320.4| state |brokenObj<21>| anObject )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|java.lang.String#stringSeq| state this) (|java.lang.String#stringSeq| state (cast anObject |T_java.lang.String|)) )))) (IMPLIES (EQ this anObject) (EQ |@true| ( |java.lang.String.equals.320.4| state |brokenObj<21>| anObject ))) (IMPLIES (OR (EQ anObject null) (NOT (AND (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)))) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| state |brokenObj<21>| anObject )))) (EQ |@true| (is (|java.lang.String.equals.320.4| state |brokenObj<21>| anObject) T_boolean)))) (FORALL (|brokenObj<22>|) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) T_int)))) (FORALL (|brokenObj<22>|) (PATS (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|)) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) T_int)))) (FORALL (|brokenObj<23>|) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<23>|) T_bigint))) (FORALL (|brokenObj<23>|) (PATS (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<23>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<23>|) T_bigint))) (FORALL (|brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:181.122.46| |alloc:38.65.34|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.65.34| |alloc:38.67.33|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.67.33| |alloc:38.69.33| |e1<2>|)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.69.33| |alloc:38.73.16| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.first.1044.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.last.1083.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|) (+ |n<1>| 1)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|) |n<1>|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (FORALL (|i:38.117.34|) (IMPLIES (AND (<= 0 |i:38.117.34|) (< |i:38.117.34| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) null))))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<4>|))) (OR (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s2<4>|) ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.73.16| |alloc:38.137.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.137.14| |alloc:38.138.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.138.25| |alloc:38.141.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.141.14| |alloc:38.142.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.142.25| |alloc:38.145.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.145.14| |alloc:38.146.25|) (- 0 1) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.146.25| |alloc:38.149.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.149.14| |alloc:38.150.25|) 0 |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s<1>| |s2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |s<1>| |s2<4>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<4>| |s<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<4>| |s<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) T_boolean)))) (FORALL (|brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) (PATS (|org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:181.122.46| |alloc:38.65.34|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.65.34| |alloc:38.67.33|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.67.33| |alloc:38.69.33| |e1<2>|)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.69.33| |alloc:38.73.16| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.first.1044.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.last.1083.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|) (+ |n<1>| 1)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|) |n<1>|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (FORALL (|i:38.117.34|) (IMPLIES (AND (<= 0 |i:38.117.34|) (< |i:38.117.34| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) null))))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<4>|))) (OR (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s2<4>|) ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.73.16| |alloc:38.137.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.137.14| |alloc:38.138.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.138.25| |alloc:38.141.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.141.14| |alloc:38.142.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.142.25| |alloc:38.145.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.145.14| |alloc:38.146.25|) (- 0 1) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.146.25| |alloc:38.149.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.149.14| |alloc:38.150.25|) 0 |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s<1>| |s2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |s<1>| |s2<4>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<4>| |s<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<4>| |s<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) T_boolean)))) (FORALL (|brokenObj<25>|) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<25>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) T_int)) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<25>|) (PATS (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|)) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<25>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) T_int)) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<26>|) (AND (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) ))) (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<26>|) (PATS (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|)) (AND (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) ))) (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<27>| |s2<5>|) (AND (IMPLIES (AND (NEQ |s2<5>| null) (NEQ |s2<5>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<27>| |s2<5>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<27>| |s2<5>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>|) T_boolean)))) (FORALL (|brokenObj<27>| |s2<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>|)) (AND (IMPLIES (AND (NEQ |s2<5>| null) (NEQ |s2<5>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<27>| |s2<5>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<27>| |s2<5>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>|) T_boolean)))) (FORALL (|brokenObj<28>| item) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) item) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<28>| item) (PATS (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item)) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) item) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<29>| |s2<6>|) (AND (IMPLIES (AND (NEQ |s2<6>| null) (NEQ |s2<6>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<29>| |s2<6>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<29>| |s2<6>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>|) T_boolean)))) (FORALL (|brokenObj<29>| |s2<6>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>|)) (AND (IMPLIES (AND (NEQ |s2<6>| null) (NEQ |s2<6>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<29>| |s2<6>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<29>| |s2<6>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>|) T_boolean)))) (FORALL (|brokenObj<30>|) (AND (EQ (|java.util.Map.size.102.4| state |brokenObj<30>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|java.util.Map#theMap| state this))) (EQ |@true| (is (|java.util.Map.size.102.4| state |brokenObj<30>|) T_int)))) (FORALL (|brokenObj<30>|) (PATS (|java.util.Map.size.102.4| state |brokenObj<30>|)) (AND (EQ (|java.util.Map.size.102.4| state |brokenObj<30>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|java.util.Map#theMap| state this))) (EQ |@true| (is (|java.util.Map.size.102.4| state |brokenObj<30>|) T_int)))) (FORALL (|brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc:38.150.25| |alloc:185.60.15| |e1<3>| null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc:185.60.15| |alloc:185.64.22| |e1<3>| |ls<1>|)) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (IFF (EQ (select |next:185.101.35| |ls<1>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |next:185.101.35| |ls<1>|) null)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (select |next:185.101.35| |ls<1>|)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| state (select |val:185.97.24| |ls<1>|) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |e1<3>| null) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state |e1<3>| |ls<1>|)) |e1<3>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls<1>| 0) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (< 0 |n<2>|) (< |n<2>| (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |ls<1>| |n<2>|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| (select |next:185.101.35| |ls<1>|) (- |n<2>| 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) T_boolean)))) (FORALL (|brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc:38.150.25| |alloc:185.60.15| |e1<3>| null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc:185.60.15| |alloc:185.64.22| |e1<3>| |ls<1>|)) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (IFF (EQ (select |next:185.101.35| |ls<1>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |next:185.101.35| |ls<1>|) null)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (select |next:185.101.35| |ls<1>|)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| state (select |val:185.97.24| |ls<1>|) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |e1<3>| null) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state |e1<3>| |ls<1>|)) |e1<3>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls<1>| 0) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (< 0 |n<2>|) (< |n<2>| (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |ls<1>| |n<2>|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| (select |next:185.101.35| |ls<1>|) (- |n<2>| 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) T_boolean)))) (FORALL (|brokenObj<32>| |elem<1>|) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) null) (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) null) (FORALL (|e:181.651.29|) (IMPLIES (AND (EQ |@true| (is |e:181.651.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.651.29| alloc)) (NEQ |e:181.651.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |e:181.651.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<32>| |e:181.651.29| )) (NOT (OR (AND (EQ |e:181.651.29| null) (EQ |elem<1>| null)) (AND (NEQ |e:181.651.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| state |e:181.651.29| |elem<1>| ))))))))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |brokenObj<32>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |elem<1>| ))) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|)) (- (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<32>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<32>| |elem<1>|) 1 0))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<32>| |elem<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) null) (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) null) (FORALL (|e:181.651.29|) (IMPLIES (AND (EQ |@true| (is |e:181.651.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.651.29| alloc)) (NEQ |e:181.651.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |e:181.651.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<32>| |e:181.651.29| )) (NOT (OR (AND (EQ |e:181.651.29| null) (EQ |elem<1>| null)) (AND (NEQ |e:181.651.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| state |e:181.651.29| |elem<1>| ))))))))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |brokenObj<32>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |elem<1>| ))) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|)) (- (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<32>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<32>| |elem<1>|) 1 0))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| state |brokenObj<32>| |elem<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<33>|) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<33>|) T_bigint))) (FORALL (|brokenObj<33>|) (PATS (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<33>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<33>|) T_bigint))) (FORALL (|brokenObj<34>|) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<34>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) (select |val:185.97.24| |brokenObj<34>|) )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<34>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<34>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|)) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<34>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) (select |val:185.97.24| |brokenObj<34>|) )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<34>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<35>| index) (AND (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (IMPLIES (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<35>| (cast (+ index 1) T_int))) ))) (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<35>| index) (PATS (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index)) (AND (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (IMPLIES (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<35>| (cast (+ index 1) T_int))) ))) (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<36>| |s2<7>|) (AND (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (NEQ (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) null)) (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (FORALL (|i:38.1574.32|) (IMPLIES (AND (<= 0 |i:38.1574.32|) (< |i:38.1574.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) null))))) (FORALL (|i:38.1579.32|) (IMPLIES (AND (<= 0 |i:38.1579.32|) (< |i:38.1579.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) null))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<36>| |s2<7>|) (PATS (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|)) (AND (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (NEQ (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) null)) (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (FORALL (|i:38.1574.32|) (IMPLIES (AND (<= 0 |i:38.1574.32|) (< |i:38.1574.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) null))))) (FORALL (|i:38.1579.32|) (IMPLIES (AND (<= 0 |i:38.1579.32|) (< |i:38.1579.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) null))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<37>| |n<3>|) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (IMPLIES (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|)) |n<3>|) (FORALL (|i:38.1392.35|) (IMPLIES (AND (<= 0 |i:38.1392.35|) (< |i:38.1392.35| |n<3>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<37>| |n<3>|) (PATS (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|)) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (IMPLIES (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|)) |n<3>|) (FORALL (|i:38.1392.35|) (IMPLIES (AND (<= 0 |i:38.1392.35|) (< |i:38.1392.35| |n<3>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<37>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (oBi) (AND (IMPLIES (EQ |@true| ( |java.math.BigInteger.equals.250.4| state oBi |ZERO:153..| )) (EQ (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) (cast 0 T_bigint))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) T_bigint)))) (FORALL (oBi) (PATS (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi)) (AND (IMPLIES (EQ |@true| ( |java.math.BigInteger.equals.250.4| state oBi |ZERO:153..| )) (EQ (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) (cast 0 T_bigint))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) T_bigint)))) (FORALL (|brokenObj<38>| x) (EQ |@true| (is (|java.math.BigInteger.equals.250.4| state |brokenObj<38>| x) T_boolean))) (FORALL (|brokenObj<38>| x) (PATS (|java.math.BigInteger.equals.250.4| state |brokenObj<38>| x)) (EQ |@true| (is (|java.math.BigInteger.equals.250.4| state |brokenObj<38>| x) T_boolean))) (FORALL (|alloc_<2>| |allocNew_<2>| |e<1>|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) 1) (IMPLIES (EQ |e<1>| null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) null)) (IMPLIES (NEQ |e<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) |e<1>| ))) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |alloc_<2>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |allocNew_<2>|)))) (FORALL (|alloc_<2>| |allocNew_<2>| |e<1>|) (PATS (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) 1) (IMPLIES (EQ |e<1>| null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) null)) (IMPLIES (NEQ |e<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) |e<1>| ))) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |alloc_<2>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |allocNew_<2>|)))) (FORALL (|brokenObj<39>| |s2<8>|) (AND (IMPLIES (AND (NEQ |s2<8>| null) (NEQ |s2<8>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>| )) (FORALL (|e:181.479.29|) (IMPLIES (AND (EQ |@true| (is |e:181.479.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.479.29| alloc)) (NEQ |e:181.479.29| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<39>| |e:181.479.29| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<8>| |e:181.479.29| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>|) T_boolean)))) (FORALL (|brokenObj<39>| |s2<8>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>|)) (AND (IMPLIES (AND (NEQ |s2<8>| null) (NEQ |s2<8>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>| )) (FORALL (|e:181.479.29|) (IMPLIES (AND (EQ |@true| (is |e:181.479.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.479.29| alloc)) (NEQ |e:181.479.29| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<39>| |e:181.479.29| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<8>| |e:181.479.29| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>|) T_boolean)))) (FORALL (|brokenObj<40>| |a_candidate_code<2>|) (AND (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<40>| |a_candidate_code<2>| ))) (NEQ (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|) null)) (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<40>| |a_candidate_code<2>| ))) (EQ (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|) (|java.util.Map.get.134.4| state (select |my_candidate_codes:33.59.43| |brokenObj<40>|) (|java.lang.Integer.Integer.300.4| |alloc:185.64.22| |alloc:33.350.49| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|))))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|) |T_sos.koa.Candidate|)))) (FORALL (|brokenObj<40>| |a_candidate_code<2>|) (PATS (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|)) (AND (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<40>| |a_candidate_code<2>| ))) (NEQ (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|) null)) (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<40>| |a_candidate_code<2>| ))) (EQ (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|) (|java.util.Map.get.134.4| state (select |my_candidate_codes:33.59.43| |brokenObj<40>|) (|java.lang.Integer.Integer.300.4| |alloc:185.64.22| |alloc:33.350.49| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|))))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<40>| |a_candidate_code<2>|) |T_sos.koa.Candidate|)))) (FORALL (|s<2>|) (AND (IMPLIES (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ (|java.lang.Integer.parseInt.266.4| |s<2>|) (|java.lang.Integer.parseInt.254.4| |s<2>| 10))) (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ |@true| (is (|java.lang.Integer.parseInt.266.4| |s<2>|) T_int)))) (FORALL (|s<2>|) (PATS (|java.lang.Integer.parseInt.266.4| |s<2>|)) (AND (IMPLIES (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ (|java.lang.Integer.parseInt.266.4| |s<2>|) (|java.lang.Integer.parseInt.254.4| |s<2>| 10))) (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ |@true| (is (|java.lang.Integer.parseInt.266.4| |s<2>|) T_int)))) (FORALL (|s<3>|) (AND (IFF (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<3>| )) (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<3>| 10 ))) (EQ |@true| (is (|java.lang.Integer.parseable.38.33| |s<3>|) T_boolean)))) (FORALL (|s<3>|) (PATS (|java.lang.Integer.parseable.38.33| |s<3>|)) (AND (IFF (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<3>| )) (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<3>| 10 ))) (EQ |@true| (is (|java.lang.Integer.parseable.38.33| |s<3>|) T_boolean)))) (FORALL (|s<4>| r) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| state |s<4>| |S_117.43.41| ))) (FORALL (|i:117.44.31|) (IMPLIES (AND (<= 0 |i:117.44.31|) (< |i:117.44.31| (|java.lang.String.length.225.4| |s<4>|))) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.44.31|) r) (- 0 1))))))) (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| state |s<4>| |S_117.50.41| ))) (FORALL (|i:117.51.31|) (IMPLIES (AND (<= 1 |i:117.51.31|) (< |i:117.51.31| (|java.lang.String.length.225.4| |s<4>|)) (EQ (|java.lang.String.charAt.233.4| |s<4>| 0) 45)) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.51.31|) r) (- 0 1))))))) (EQ |@true| (is (|java.lang.Integer.parseable.54.33| |s<4>| r) T_boolean)))) (FORALL (|s<4>| r) (PATS (|java.lang.Integer.parseable.54.33| |s<4>| r)) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| state |s<4>| |S_117.43.41| ))) (FORALL (|i:117.44.31|) (IMPLIES (AND (<= 0 |i:117.44.31|) (< |i:117.44.31| (|java.lang.String.length.225.4| |s<4>|))) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.44.31|) r) (- 0 1))))))) (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| state |s<4>| |S_117.50.41| ))) (FORALL (|i:117.51.31|) (IMPLIES (AND (<= 1 |i:117.51.31|) (< |i:117.51.31| (|java.lang.String.length.225.4| |s<4>|)) (EQ (|java.lang.String.charAt.233.4| |s<4>| 0) 45)) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.51.31|) r) (- 0 1))))))) (EQ |@true| (is (|java.lang.Integer.parseable.54.33| |s<4>| r) T_boolean)))) (FORALL (|brokenObj<41>| |index<1>|) (AND (IMPLIES (AND (<= 0 |index<1>|) (< |index<1>| (|java.lang.String.length.225.4| |brokenObj<41>|))) (EQ (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) (|org.jmlspecs.models.JMLChar.charValue.115.4| (cast (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|java.lang.String#stringSeq| state this) |index<1>|) |T_org.jmlspecs.models.JMLChar|)))) (NOT (OR (< |index<1>| 0) (>= |index<1>| (|java.lang.String.length.225.4| this)))) (EQ |@true| (is (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) T_char)))) (FORALL (|brokenObj<41>| |index<1>|) (PATS (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|)) (AND (IMPLIES (AND (<= 0 |index<1>|) (< |index<1>| (|java.lang.String.length.225.4| |brokenObj<41>|))) (EQ (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) (|org.jmlspecs.models.JMLChar.charValue.115.4| (cast (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|java.lang.String#stringSeq| state this) |index<1>|) |T_org.jmlspecs.models.JMLChar|)))) (NOT (OR (< |index<1>| 0) (>= |index<1>| (|java.lang.String.length.225.4| this)))) (EQ |@true| (is (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) T_char)))) (FORALL (|brokenObj<42>|) (AND (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) ))) (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<42>|) (PATS (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|)) (AND (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) ))) (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<43>| |elem<2>|) (AND (IMPLIES (NEQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.755.37|) (AND (<= 0 |i:38.755.37|) (< |i:38.755.37| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.755.37|) |elem<2>| )))))) (IMPLIES (EQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.760.38|) (AND (<= 0 |i:38.760.38|) (< |i:38.760.38| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.760.38|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>|) T_boolean)))) (FORALL (|brokenObj<43>| |elem<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>|)) (AND (IMPLIES (NEQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.755.37|) (AND (<= 0 |i:38.755.37|) (< |i:38.755.37| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.755.37|) |elem<2>| )))))) (IMPLIES (EQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.760.38|) (AND (<= 0 |i:38.760.38|) (< |i:38.760.38| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.760.38|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>|) T_boolean)))) (FORALL (|alloc_<3>| |allocNew_<3>| |item<1>| nxt) (AND (IMPLIES (NEQ |item<1>| null) (AND (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |item<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (<: (typeof |item<1>|) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (IMPLIES (NEQ nxt null) (<: (select |elementType:131.109.27| nxt) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)))) (IMPLIES (EQ nxt null) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) (typeof |item<1>|))) (IFF (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (EQ |@true| (termConditional (refEQ nxt null) |bool$false| (select |containsNull:131.124.29| nxt)))))) (IMPLIES (EQ |item<1>| null) (AND (EQ (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) null) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLType|) (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))))) (NEQ (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) null) (EQ (typeof (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLListValueNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |alloc_<3>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |allocNew_<3>|)))) (FORALL (|alloc_<3>| |allocNew_<3>| |item<1>| nxt) (PATS (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) (AND (IMPLIES (NEQ |item<1>| null) (AND (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |item<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (<: (typeof |item<1>|) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (IMPLIES (NEQ nxt null) (<: (select |elementType:131.109.27| nxt) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)))) (IMPLIES (EQ nxt null) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) (typeof |item<1>|))) (IFF (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (EQ |@true| (termConditional (refEQ nxt null) |bool$false| (select |containsNull:131.124.29| nxt)))))) (IMPLIES (EQ |item<1>| null) (AND (EQ (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) null) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLType|) (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))))) (NEQ (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) null) (EQ (typeof (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLListValueNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |alloc_<3>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |allocNew_<3>|)))) (FORALL (|brokenObj<44>| |s2<9>|) (AND (IMPLIES (AND (NEQ |s2<9>| null) (NEQ |s2<9>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<44>| |s2<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<44>| |s2<9>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>|) T_boolean)))) (FORALL (|brokenObj<44>| |s2<9>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>|)) (AND (IMPLIES (AND (NEQ |s2<9>| null) (NEQ |s2<9>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<44>| |s2<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| state |brokenObj<44>| |s2<9>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>|) T_boolean)))) (FORALL (|brokenObj<45>| |a_candidate_code<3>|) (AND (IMPLIES (AND (NEQ |a_candidate_code<3>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|))) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<45>| |a_candidate_code<3>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| state (select |my_candidate_codes:33.59.43| |brokenObj<45>|) (|java.lang.Integer.Integer.300.4| |alloc:33.350.49| |alloc:33.367.57| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|)) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<45>| |a_candidate_code<3>|) T_boolean)))) (FORALL (|brokenObj<45>| |a_candidate_code<3>|) (PATS (|sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<45>| |a_candidate_code<3>|)) (AND (IMPLIES (AND (NEQ |a_candidate_code<3>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|))) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<45>| |a_candidate_code<3>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| state (select |my_candidate_codes:33.59.43| |brokenObj<45>|) (|java.lang.Integer.Integer.300.4| |alloc:33.350.49| |alloc:33.367.57| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|)) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.357.2| state |brokenObj<45>| |a_candidate_code<3>|) T_boolean)))) (FORALL (hd tl) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) null) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) hd )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl)) tl) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc:33.367.57| |alloc:185.200.34| hd tl) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) |T_org.jmlspecs.models.JMLListEqualsNode|)))) (FORALL (hd tl) (PATS (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl)) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) null) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) hd )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl)) tl) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc:33.367.57| |alloc:185.200.34| hd tl) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| state hd tl) |T_org.jmlspecs.models.JMLListEqualsNode|)))) (FORALL (|brokenObj<46>| |s2<10>|) (AND (IMPLIES (AND (NEQ |s2<10>| null) (NEQ |s2<10>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |s2<10>| |brokenObj<46>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>|) T_boolean)))) (FORALL (|brokenObj<46>| |s2<10>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>|)) (AND (IMPLIES (AND (NEQ |s2<10>| null) (NEQ |s2<10>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |s2<10>| |brokenObj<46>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>|) T_boolean)))) (FORALL (|brokenObj<47>| |i<2>|) (AND (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|)) (select |elementType:39.44.30| |brokenObj<47>|))) (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<47>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<47>| |i<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|)) (AND (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|)) (select |elementType:39.44.30| |brokenObj<47>|))) (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<47>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|alloc_<4>| |allocNew_<4>|) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |alloc_<4>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |allocNew_<4>|)))) (FORALL (|alloc_<4>| |allocNew_<4>|) (PATS (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |alloc_<4>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |allocNew_<4>|)))) (EQ (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) |decryptNrOfVotes:36.195.40|) (EQ |@true| (is (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) T_int)) (EQ (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) |decryptNrOfVotes:36.195.40|) (EQ |@true| (is (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) T_int)) (FORALL (|brokenObj<48>| |obj<1>|) (AND (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<48>| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) |brokenObj<48>| ))))) (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>| ))) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<48>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|))))) (IMPLIES (OR (EQ |obj<1>| null) (NOT (AND (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)))) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>|) T_boolean)))) (FORALL (|brokenObj<48>| |obj<1>|) (PATS (|org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>|)) (AND (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<48>| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) |brokenObj<48>| ))))) (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>| ))) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<48>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|))))) (IMPLIES (OR (EQ |obj<1>| null) (NOT (AND (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)))) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equals.910.4| state |brokenObj<48>| |obj<1>|) T_boolean)))) (FORALL (|brokenObj<49>| afterThisOne |item<2>|) (AND (IMPLIES (AND (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<49>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<49>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<49>| (cast (+ afterThisOne 1) T_int) |item<2>|) ))) (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<49>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<49>| afterThisOne |item<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|)) (AND (IMPLIES (AND (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<49>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<49>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<49>| (cast (+ afterThisOne 1) T_int) |item<2>|) ))) (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<49>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<50>| |s2<11>|) (AND (IMPLIES (AND (NEQ |s2<11>| null) (NEQ |s2<11>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|)) (EXISTS (|i:38.1125.37|) (AND (<= 0 |i:38.1125.37|) (< |i:38.1125.37| (+ (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|)) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<50>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |s2<11>| |i:38.1125.37|) ))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>|) T_boolean)))) (FORALL (|brokenObj<50>| |s2<11>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>|)) (AND (IMPLIES (AND (NEQ |s2<11>| null) (NEQ |s2<11>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|)) (EXISTS (|i:38.1125.37|) (AND (<= 0 |i:38.1125.37|) (< |i:38.1125.37| (+ (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|)) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<50>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |s2<11>| |i:38.1125.37|) ))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>|) T_boolean)))) (FORALL (|brokenObj<51>| beforeThisOne |item<3>|) (AND (IMPLIES (AND (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<51>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<51>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<51>| beforeThisOne) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:185.200.34| |alloc:38.2030.32| |item<3>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<51>| beforeThisOne)) ))) (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<51>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<51>| beforeThisOne |item<3>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|)) (AND (IMPLIES (AND (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<51>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<51>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<51>| beforeThisOne) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:185.200.34| |alloc:38.2030.32| |item<3>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<51>| beforeThisOne)) ))) (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<51>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<52>| |n<4>|) (AND (IMPLIES (AND (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|) |n<4>|)) (FORALL (|i:38.1455.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1455.35| T_bigint)) (<= |n<4>| |i:38.1455.35|) (< |i:38.1455.35| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) null))))))) (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<52>| |n<4>|) (PATS (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|)) (AND (IMPLIES (AND (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|) |n<4>|)) (FORALL (|i:38.1455.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1455.35| T_bigint)) (<= |n<4>| |i:38.1455.35|) (< |i:38.1455.35| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) null))))))) (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<52>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<53>| |i<3>|) (AND (<= 0 |i<3>|) (< |i<3>| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<53>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<53>| |i<3>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<53>| |i<3>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<53>| |i<3>|)) (AND (<= 0 |i<3>|) (< |i<3>| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<53>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<53>| |i<3>|) |T_java.lang.Object|)))) (FORALL (|alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) (AND (IMPLIES (NEQ |item<4>| null) (AND (EQ |@true| ( |java.lang.Object.equals.89.4| state (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |item<4>| )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (<: (typeof |item<4>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (IMPLIES (NEQ |nxt<1>| null) (<: (select |elementType:185.109.27| |nxt<1>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)))) (IMPLIES (EQ |nxt<1>| null) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) (typeof |item<4>|))) (IFF (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (EQ |@true| (termConditional (refEQ |nxt<1>| null) |bool$false| (select |containsNull:185.124.29| |nxt<1>|)))))) (IMPLIES (EQ |item<4>| null) (AND (EQ (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) null) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_java.lang.Object|) (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))))) (NEQ (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_org.jmlspecs.models.JMLListEqualsNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |alloc_<5>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |allocNew_<5>|)))) (FORALL (|alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) (AND (IMPLIES (NEQ |item<4>| null) (AND (EQ |@true| ( |java.lang.Object.equals.89.4| state (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |item<4>| )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (<: (typeof |item<4>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (IMPLIES (NEQ |nxt<1>| null) (<: (select |elementType:185.109.27| |nxt<1>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)))) (IMPLIES (EQ |nxt<1>| null) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) (typeof |item<4>|))) (IFF (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (EQ |@true| (termConditional (refEQ |nxt<1>| null) |bool$false| (select |containsNull:185.124.29| |nxt<1>|)))))) (IMPLIES (EQ |item<4>| null) (AND (EQ (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) null) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_java.lang.Object|) (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))))) (NEQ (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_org.jmlspecs.models.JMLListEqualsNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |alloc_<5>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| state |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |allocNew_<5>|)))) (FORALL (|s<5>| radix) (AND (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<5>| radix )) (EQ |@true| (is (|java.lang.Integer.parseInt.254.4| |s<5>| radix) T_int)))) (FORALL (|s<5>| radix) (PATS (|java.lang.Integer.parseInt.254.4| |s<5>| radix)) (AND (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<5>| radix )) (EQ |@true| (is (|java.lang.Integer.parseInt.254.4| |s<5>| radix) T_int)))) (FORALL (|brokenObj<54>|) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<54>| 1) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<54>|) (PATS (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|)) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<54>| 1) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<55>|) (AND (EQ (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) (|org.jmlspecs.models.JMLChar#theChar| state |brokenObj<55>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) T_char)))) (FORALL (|brokenObj<55>|) (PATS (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|)) (AND (EQ (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) (|org.jmlspecs.models.JMLChar#theChar| state |brokenObj<55>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) T_char)))) (FORALL (|brokenObj<56>|) (EQ (|org.jmlspecs.models.JMLChar#theChar| state |brokenObj<56>|) (select |value:47.45.25| |brokenObj<56>|))) (FORALL (|brokenObj<57>| |i<4>|) (AND (<= 0 |i<4>|) (< |i<4>| (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<57>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |brokenObj<57>| |i<4>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<57>| |i<4>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |brokenObj<57>| |i<4>|)) (AND (<= 0 |i<4>|) (< |i<4>| (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<57>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |brokenObj<57>| |i<4>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<58>|) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<58>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) T_bigint)))) (FORALL (|brokenObj<58>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|)) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<58>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) T_bigint)))) (FORALL (|brokenObj<59>| |beforeThisOne<1>| |item<5>|) (AND (IMPLIES (AND (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<59>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<59>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<59>| |beforeThisOne<1>|) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.2030.32| |alloc:38.2079.32| |item<5>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<59>| |beforeThisOne<1>|)) ))) (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<59>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<59>| |beforeThisOne<1>| |item<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|)) (AND (IMPLIES (AND (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<59>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<59>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<59>| |beforeThisOne<1>|) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.2030.32| |alloc:38.2079.32| |item<5>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<59>| |beforeThisOne<1>|)) ))) (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<59>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<60>| |i<5>|) (AND (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<60>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|)) (select |elementType:39.44.30| |brokenObj<60>|))) (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<60>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<60>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<60>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<60>| |i<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|)) (AND (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<60>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|)) (select |elementType:39.44.30| |brokenObj<60>|))) (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<60>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<60>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<60>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<61>| |afterThisOne<1>| |item<6>|) (AND (IMPLIES (AND (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<61>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<61>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<61>| (cast (+ |afterThisOne<1>| 1) T_int) |item<6>|) ))) (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<61>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<61>| |afterThisOne<1>| |item<6>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|)) (AND (IMPLIES (AND (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<61>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<61>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<61>| (cast (+ |afterThisOne<1>| 1) T_int) |item<6>|) ))) (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<61>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<62>| |n<5>|) (AND (IMPLIES (AND (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<62>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|)) |n<5>|) (FORALL (|i:38.1328.39|) (IMPLIES (AND (EQ |@true| (is |i:38.1328.39| T_bigint)) (<= 0 |i:38.1328.39|) (< |i:38.1328.39| |n<5>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) null))))))) (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<62>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<62>| |n<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|)) (AND (IMPLIES (AND (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<62>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|)) |n<5>|) (FORALL (|i:38.1328.39|) (IMPLIES (AND (EQ |@true| (is |i:38.1328.39| T_bigint)) (<= 0 |i:38.1328.39|) (< |i:38.1328.39| |n<5>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) null))))))) (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<62>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<63>| |item<7>|) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| state (select |val:185.97.24| |brokenObj<63>|) |item<7>| )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>| )) (EQ |item<7>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>|) T_boolean)))) (FORALL (|brokenObj<63>| |item<7>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>|)) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| state (select |val:185.97.24| |brokenObj<63>|) |item<7>| )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>| )) (EQ |item<7>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| state |brokenObj<63>| |item<7>|) T_boolean)))) (FORALL (|alloc_<6>| |allocNew_<6>| value) (AND (EQ (|java.lang.Integer#theInteger| state (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) value) (NEQ (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) null) (EQ (typeof (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) |T_java.lang.Integer|) (NOT (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |alloc_<6>|))) (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |allocNew_<6>|)))) (FORALL (|alloc_<6>| |allocNew_<6>| value) (PATS (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) (AND (EQ (|java.lang.Integer#theInteger| state (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) value) (NEQ (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) null) (EQ (typeof (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) |T_java.lang.Integer|) (NOT (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |alloc_<6>|))) (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |allocNew_<6>|)))) (FORALL (|i<6>| |radix<1>|) (AND (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48))) (EQ |@true| (is (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |T_java.lang.String|)))) (FORALL (|i<6>| |radix<1>|) (PATS (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) (AND (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48))) (EQ |@true| (is (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |T_java.lang.String|)))) (FORALL (|brokenObj<64>|) (AND (<= 0 (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|)) (<= (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|) (EQ (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|) (select |my_candidate_count:34.97.35| |brokenObj<64>|)) (EQ |@true| (is (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|) T_byte)))) (FORALL (|brokenObj<64>|) (PATS (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|)) (AND (<= 0 (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|)) (<= (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|) (EQ (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|) (select |my_candidate_count:34.97.35| |brokenObj<64>|)) (EQ |@true| (is (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<64>|) T_byte)))) (FORALL (ch |radix<2>|) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (< (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (|java.lang.Character.digitVal.390.33| ch))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 65) (<= ch 90) (< (+ (- ch 65) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 65) 10))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 97) (<= ch 122) (< (+ (- ch 97) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 97) 10))) (IMPLIES (OR (< |radix<2>| |MIN_RADIX:128..|) (> |radix<2>| |MAX_RADIX:128..|) (AND (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (>= (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (AND (>= ch 65) (<= ch 90) (>= (+ (- ch 65) 10) |radix<2>|)) (AND (>= ch 97) (<= ch 122) (>= (+ (- ch 97) 10) |radix<2>|)) (AND (NOT (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch ))) (NOT (AND (>= ch 65) (<= ch 90))) (NOT (AND (>= ch 97) (<= ch 122))))) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (- 0 1))) (EQ |@true| (is (|java.lang.Character.digit.410.4| ch |radix<2>|) T_int)))) (FORALL (ch |radix<2>|) (PATS (|java.lang.Character.digit.410.4| ch |radix<2>|)) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (< (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (|java.lang.Character.digitVal.390.33| ch))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 65) (<= ch 90) (< (+ (- ch 65) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 65) 10))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 97) (<= ch 122) (< (+ (- ch 97) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 97) 10))) (IMPLIES (OR (< |radix<2>| |MIN_RADIX:128..|) (> |radix<2>| |MAX_RADIX:128..|) (AND (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (>= (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (AND (>= ch 65) (<= ch 90) (>= (+ (- ch 65) 10) |radix<2>|)) (AND (>= ch 97) (<= ch 122) (>= (+ (- ch 97) 10) |radix<2>|)) (AND (NOT (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch ))) (NOT (AND (>= ch 65) (<= ch 90))) (NOT (AND (>= ch 97) (<= ch 122))))) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (- 0 1))) (EQ |@true| (is (|java.lang.Character.digit.410.4| ch |radix<2>|) T_int)))) (FORALL (|ch<1>|) (AND (IFF (EQ |@true| ( |java.lang.Character.isDigit.256.4| |ch<1>| )) (EQ (|java.lang.Character.getType.510.4| |ch<1>|) |DECIMAL_DIGIT_NUMBER:128..|)) (EQ |@true| (is (|java.lang.Character.isDigit.256.4| |ch<1>|) T_boolean)))) (FORALL (|ch<1>|) (PATS (|java.lang.Character.isDigit.256.4| |ch<1>|)) (AND (IFF (EQ |@true| ( |java.lang.Character.isDigit.256.4| |ch<1>| )) (EQ (|java.lang.Character.getType.510.4| |ch<1>|) |DECIMAL_DIGIT_NUMBER:128..|)) (EQ |@true| (is (|java.lang.Character.isDigit.256.4| |ch<1>|) T_boolean)))) (FORALL (|ch<2>|) (AND (<= |UNASSIGNED:128..| (|java.lang.Character.getType.510.4| |ch<2>|)) (<= (|java.lang.Character.getType.510.4| |ch<2>|) |OTHER_SYMBOL:128..|) (EQ |@true| |@true|) (EQ |@true| (is (|java.lang.Character.getType.510.4| |ch<2>|) T_int)))) (FORALL (|ch<2>|) (PATS (|java.lang.Character.getType.510.4| |ch<2>|)) (AND (<= |UNASSIGNED:128..| (|java.lang.Character.getType.510.4| |ch<2>|)) (<= (|java.lang.Character.getType.510.4| |ch<2>|) |OTHER_SYMBOL:128..|) (EQ |@true| |@true|) (EQ |@true| (is (|java.lang.Character.getType.510.4| |ch<2>|) T_int)))) (FORALL (|ch<3>|) (EQ |@true| (is (|java.lang.Character.digitVal.390.33| |ch<3>|) T_int))) (FORALL (|ch<3>|) (PATS (|java.lang.Character.digitVal.390.33| |ch<3>|)) (EQ |@true| (is (|java.lang.Character.digitVal.390.33| |ch<3>|) T_int))) (FORALL (|hd<1>| |tl<1>|) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |hd<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|)) |tl<1>|) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| state (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:38.2079.32| |alloc:131.200.34| |hd<1>| |tl<1>|) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |T_org.jmlspecs.models.JMLListValueNode|)))) (FORALL (|hd<1>| |tl<1>|) (PATS (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|)) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |hd<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|)) |tl<1>|) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| state (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:38.2079.32| |alloc:131.200.34| |hd<1>| |tl<1>|) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |T_org.jmlspecs.models.JMLListValueNode|)))) (FORALL (|brokenObj<65>| |item<8>|) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (select |val:131.97.25| |brokenObj<65>|) |item<8>| )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |item<8>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>|) T_boolean)))) (FORALL (|brokenObj<65>| |item<8>|) (PATS (|org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>|)) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (select |val:131.97.25| |brokenObj<65>|) |item<8>| )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |item<8>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>|) T_boolean)))) (FORALL (|brokenObj<66>| |ls2<2>|) (AND (IMPLIES (AND (NEQ |ls2<2>| null) (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<66>| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) |brokenObj<66>| ))))) (IMPLIES (OR (EQ |ls2<2>| null) (NOT (AND (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>|) T_boolean)))) (FORALL (|brokenObj<66>| |ls2<2>|) (PATS (|org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>|)) (AND (IMPLIES (AND (NEQ |ls2<2>| null) (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<66>| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) |brokenObj<66>| ))))) (IMPLIES (OR (EQ |ls2<2>| null) (NOT (AND (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equals.501.4| state |brokenObj<66>| |ls2<2>|) T_boolean)))) (FORALL (|brokenObj<67>| |ls2<3>|) (AND (IMPLIES (NEQ |ls2<3>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )) (AND (<= (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|) (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |ls2<3>|)) (FORALL (|i:131.471.30|) (IMPLIES (AND (<= 0 |i:131.471.30|) (< |i:131.471.30| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) ))))))))) (IMPLIES (EQ |ls2<3>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>|) T_boolean)))) (FORALL (|brokenObj<67>| |ls2<3>|) (PATS (|org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>|)) (AND (IMPLIES (NEQ |ls2<3>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )) (AND (<= (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|) (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |ls2<3>|)) (FORALL (|i:131.471.30|) (IMPLIES (AND (<= 0 |i:131.471.30|) (< |i:131.471.30| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) ))))))))) (IMPLIES (EQ |ls2<3>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>|) T_boolean)))) (FORALL (|brokenObj<68>|) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<68>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) T_int)))) (FORALL (|brokenObj<68>|) (PATS (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|)) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<68>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) T_int)))) (FORALL (|brokenObj<69>| |item<9>|) (AND (IMPLIES (NEQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.440.35|) (AND (<= 0 |i:185.440.35|) (< |i:185.440.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ |@true| (termConditional (refEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) null) (refEQ |item<9>| null) (|java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) |item<9>|))))))) (IMPLIES (EQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.448.35|) (AND (<= 0 |i:185.448.35|) (< |i:185.448.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.448.35|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>|) T_boolean)))) (FORALL (|brokenObj<69>| |item<9>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>|)) (AND (IMPLIES (NEQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.440.35|) (AND (<= 0 |i:185.440.35|) (< |i:185.440.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ |@true| (termConditional (refEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) null) (refEQ |item<9>| null) (|java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) |item<9>|))))))) (IMPLIES (EQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.448.35|) (AND (<= 0 |i:185.448.35|) (< |i:185.448.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.448.35|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<69>| |item<9>|) T_boolean)))) (FORALL (|brokenObj<70>| |s2<12>|) (AND (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null)) (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null) (FORALL (|e:181.709.34|) (IMPLIES (AND (EQ |@true| (is |e:181.709.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.709.34| alloc)) (NEQ |e:181.709.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |e:181.709.34| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<70>| |e:181.709.34| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<12>| |e:181.709.34| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<70>| |s2<12>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|)) (AND (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null)) (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null) (FORALL (|e:181.709.34|) (IMPLIES (AND (EQ |@true| (is |e:181.709.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.709.34| alloc)) (NEQ |e:181.709.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |e:181.709.34| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<70>| |e:181.709.34| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<12>| |e:181.709.34| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<71>| |s2<13>|) (AND (IMPLIES (AND (NEQ |s2<13>| null) (NEQ |s2<13>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<13>| |brokenObj<71>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>|) T_boolean)))) (FORALL (|brokenObj<71>| |s2<13>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>|)) (AND (IMPLIES (AND (NEQ |s2<13>| null) (NEQ |s2<13>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<13>| |brokenObj<71>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>|) T_boolean)))) (FORALL (|brokenObj<72>| |i<7>|) (AND (<= 0 |i<7>|) (< |i<7>| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<72>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<72>| |i<7>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<72>| |i<7>|) (PATS (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<72>| |i<7>|)) (AND (<= 0 |i<7>|) (< |i<7>| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<72>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<72>| |i<7>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<73>|) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<73>|) T_bigint))) (FORALL (|brokenObj<73>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<73>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<73>|) T_bigint))) (FORALL (|brokenObj<74>| |s2<14>|) (AND (IMPLIES (AND (NEQ |s2<14>| null) (NEQ |s2<14>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<14>|)) (FORALL (|i:38.805.29|) (IMPLIES (AND (<= 0 |i:38.805.29|) (< |i:38.805.29| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) null)))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>|) T_boolean)))) (FORALL (|brokenObj<74>| |s2<14>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>|)) (AND (IMPLIES (AND (NEQ |s2<14>| null) (NEQ |s2<14>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<14>|)) (FORALL (|i:38.805.29|) (IMPLIES (AND (<= 0 |i:38.805.29|) (< |i:38.805.29| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) null)))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>|) T_boolean)))) (FORALL (|brokenObj<75>|) (EQ (|java.lang.Integer#theInteger| state |brokenObj<75>|) (|java.lang.Integer.intValue.329.4| |brokenObj<75>|))) (FORALL (|brokenObj<76>|) (AND (EQ (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) (|java.lang.Integer#theInteger| state |brokenObj<76>|)) (EQ |@true| (is (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) T_int)))) (FORALL (|brokenObj<76>|) (PATS (|java.lang.Integer.intValue.329.4| |brokenObj<76>|)) (AND (EQ (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) (|java.lang.Integer#theInteger| state |brokenObj<76>|)) (EQ |@true| (is (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) T_int)))) (FORALL (|brokenObj<77>| |item<10>|) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<77>| 0 |item<10>|) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) |brokenObj<77>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<77>| |item<10>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<77>| 0 |item<10>|) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| state (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) |brokenObj<77>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<78>| |ls2<4>|) (AND (IMPLIES (AND (NEQ |ls2<4>| null) (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<78>| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) |brokenObj<78>| ))))) (IMPLIES (OR (EQ |ls2<4>| null) (NOT (AND (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>|) T_boolean)))) (FORALL (|brokenObj<78>| |ls2<4>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>|)) (AND (IMPLIES (AND (NEQ |ls2<4>| null) (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<78>| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) |brokenObj<78>| ))))) (IMPLIES (OR (EQ |ls2<4>| null) (NOT (AND (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equals.501.4| state |brokenObj<78>| |ls2<4>|) T_boolean)))) (FORALL (|brokenObj<79>| |ls2<5>|) (AND (IMPLIES (NEQ |ls2<5>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )) (AND (<= (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|) (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |ls2<5>|)) (FORALL (|i:185.471.30|) (IMPLIES (AND (<= 0 |i:185.471.30|) (< |i:185.471.30| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) ))))))))) (IMPLIES (EQ |ls2<5>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>|) T_boolean)))) (FORALL (|brokenObj<79>| |ls2<5>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>|)) (AND (IMPLIES (NEQ |ls2<5>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )) (AND (<= (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|) (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |ls2<5>|)) (FORALL (|i:185.471.30|) (IMPLIES (AND (<= 0 |i:185.471.30|) (< |i:185.471.30| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| state (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) ))))))))) (IMPLIES (EQ |ls2<5>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>|) T_boolean)))) (FORALL (|brokenObj<80>| |s2<15>|) (AND (IMPLIES (AND (NEQ |s2<15>| null) (NEQ |s2<15>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<15>| |brokenObj<80>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>|) T_boolean)))) (FORALL (|brokenObj<80>| |s2<15>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>|)) (AND (IMPLIES (AND (NEQ |s2<15>| null) (NEQ |s2<15>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<15>| |brokenObj<80>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>|) T_boolean)))) (FORALL (|brokenObj<81>|) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) T_int)))) (FORALL (|brokenObj<81>|) (PATS (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|)) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) T_int)))) (FORALL (|brokenObj<82>| |s2<16>|) (AND (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null)) (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null) (FORALL (|e:181.737.34|) (IMPLIES (AND (EQ |@true| (is |e:181.737.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.737.34| alloc)) (NEQ |e:181.737.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |e:181.737.34| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<82>| |e:181.737.34| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<16>| |e:181.737.34| ))))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<82>| |s2<16>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|)) (AND (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null)) (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null) (FORALL (|e:181.737.34|) (IMPLIES (AND (EQ |@true| (is |e:181.737.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.737.34| alloc)) (NEQ |e:181.737.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |e:181.737.34| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<82>| |e:181.737.34| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |s2<16>| |e:181.737.34| ))))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<83>|) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<83>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) T_int)))) (FORALL (|brokenObj<83>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|)) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<83>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) T_int)))) (FORALL (|brokenObj<84>| |n<6>|) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (IMPLIES (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|) |n<6>|)) (FORALL (|i:38.1515.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1515.35| T_bigint)) (<= |n<6>| |i:38.1515.35|) (< |i:38.1515.35| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<84>| |n<6>|) (PATS (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|)) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (IMPLIES (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| state (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|) |n<6>|)) (FORALL (|i:38.1515.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1515.35| T_bigint)) (<= |n<6>| |i:38.1515.35|) (< |i:38.1515.35| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| state (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<84>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<85>| |elem<3>|) (AND (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) null)) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) null) (FORALL (|e:181.600.29|) (IMPLIES (AND (EQ |@true| (is |e:181.600.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.600.29| alloc)) (NEQ |e:181.600.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) |e:181.600.29| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |e:181.600.29| )) (AND (EQ |e:181.600.29| null) (EQ |elem<3>| null)) (AND (NEQ |e:181.600.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| state |e:181.600.29| |elem<3>| ))))))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<85>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) |elem<3>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|)) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>|) 0 1))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) null)) (IMPLIES (EQ |elem<3>| null) (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|)))) (IMPLIES (NEQ |elem<3>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|))) (EQ |@true| (select |containsNull:39.52.32| |brokenObj<85>|)))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<85>| |elem<3>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|)) (AND (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) null)) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) null) (FORALL (|e:181.600.29|) (IMPLIES (AND (EQ |@true| (is |e:181.600.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.600.29| alloc)) (NEQ |e:181.600.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) |e:181.600.29| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |e:181.600.29| )) (AND (EQ |e:181.600.29| null) (EQ |elem<3>| null)) (AND (NEQ |e:181.600.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| state |e:181.600.29| |elem<3>| ))))))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<85>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) |elem<3>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|)) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>|) 0 1))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) null)) (IMPLIES (EQ |elem<3>| null) (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|)))) (IMPLIES (NEQ |elem<3>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|))) (EQ |@true| (select |containsNull:39.52.32| |brokenObj<85>|)))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| state |brokenObj<85>| |elem<3>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (EQ |@true| (is this |T_sos.koa.District|)) (EQ |@true| (isAllocated this alloc)) (NEQ this null) (FORALL (|brokenObj<86>|) (NOPATS (is |brokenObj<86>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<86>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<86>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<86>| null)) (EQ (select |owner:8.45.28| (select |my_kiesLijsten:15.80.49| |brokenObj<86>|)) |brokenObj<86>|))) (FORALL (|brokenObj<87>|) (NOPATS (is |brokenObj<87>| |T_sos.koa.Candidate|) (NEQ |brokenObj<87>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<87>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<87>| null)) (<= 0 (select |my_position_number:35.114.35| |brokenObj<87>|)))) (FORALL (|brokenObj<88>|) (NOPATS (is |brokenObj<88>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<88>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<88>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<88>| null)) (<= (select |my_kiesKringCount:191.34.35| |brokenObj<88>|) |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20|))) (FORALL (|brokenObj<89>|) (NOPATS (is |brokenObj<89>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<89>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<89>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<89>| null) (EQ |@true| (select |containsNull:185.124.29| |brokenObj<89>|))) (EQ |T_java.lang.Object| (select |elementType:185.109.27| |brokenObj<89>|)))) (FORALL (|brokenObj<90>|) (NOPATS (is |brokenObj<90>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<90>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<90>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<90>| null)) (>= (select |my_vote_count:34.104.34| |brokenObj<90>|) 0))) (FORALL (|brokenObj<91>|) (NOPATS (is |brokenObj<91>| |T_sos.koa.District|) (NEQ |brokenObj<91>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<91>| |T_sos.koa.District|)) (NEQ |brokenObj<91>| null)) (<= (|java.lang.String.length.225.4| (select |my_name:44.46| |brokenObj<91>|)) |DISTRICT_NAME_MAX_LENGTH:32.20|))) (FORALL (|brokenObj<92>|) (NOPATS (is |brokenObj<92>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<92>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<92>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<92>| null)) (<: (select |elementType:185.109.27| |brokenObj<92>|) |T_java.lang.Object|))) (FORALL (|brokenObj<93>|) (NOPATS (is |brokenObj<93>| |T_sos.koa.Candidate|) (NEQ |brokenObj<93>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<93>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<93>| null)) (NEQ (select |my_firstname:35.94.46| |brokenObj<93>|) (select |my_name:15.98.46| (select |my_kiesKring:35.130.49| |brokenObj<93>|))))) (FORALL (|brokenObj<94>|) (NOPATS (is |brokenObj<94>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<94>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<94>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<94>| null) (NEQ (select |theSeq:38.188.37| |brokenObj<94>|) null)) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<94>|) (|org.jmlspecs.models.JMLListValueNode.length.398.26| (select |theSeq:38.188.37| |brokenObj<94>|))))) (FORALL (|brokenObj<95>|) (NOPATS (is |brokenObj<95>| |T_java.util.Map|) (NEQ |brokenObj<95>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<95>| |T_java.util.Map|)) (NEQ |brokenObj<95>| null)) (FORALL (|o1:167.93.29| |o2:167.93.33|) (IMPLIES (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state |brokenObj<95>|) |o1:167.93.29| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state |brokenObj<95>|) |o2:167.93.33| )) (NEQ |o2:167.93.33| |o1:167.93.29|)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| state |o2:167.93.33| |o1:167.93.29| ))))))) (FORALL (|brokenObj<96>|) (NOPATS (is |brokenObj<96>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<96>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<96>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<96>| null)) (IFF (EQ (select |the_list:181.166.38| |brokenObj<96>|) null) (EQ (select |size:181.171.44| |brokenObj<96>|) 0)))) (FORALL (|brokenObj<97>|) (NOPATS (is |brokenObj<97>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<97>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<97>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<97>| null) (NEQ (select |val:185.97.24| |brokenObj<97>|) null)) (<: (typeof (select |val:185.97.24| |brokenObj<97>|)) (select |elementType:185.109.27| |brokenObj<97>|)))) (FORALL (|brokenObj<98>|) (NOPATS (is |brokenObj<98>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<98>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<98>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<98>| null)) (>= (select |size:181.171.44| |brokenObj<98>|) 0))) (FORALL (|brokenObj<99>|) (NOPATS (is |brokenObj<99>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<99>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<99>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<99>| null)) (IFF (EQ |@true| (select |containsNull:185.124.29| |brokenObj<99>|)) (OR (EQ (select |val:185.97.24| |brokenObj<99>|) null) (AND (NEQ (select |next:185.101.35| |brokenObj<99>|) null) (EQ |@true| (select |containsNull:185.124.29| (select |next:185.101.35| |brokenObj<99>|)))))))) (FORALL (|brokenObj<100>|) (NOPATS (is |brokenObj<100>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<100>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<100>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<100>| null)) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<100>|) (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<100>|)))) (FORALL (|brokenObj<101>|) (NOPATS (is |brokenObj<101>| |T_sos.koa.Candidate|) (NEQ |brokenObj<101>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<101>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<101>| null)) (<= (|java.lang.String.length.225.4| (select |my_initials:35.101.46| |brokenObj<101>|)) |INITIALS_MAX_LENGTH:35.50.20|))) (FORALL (|brokenObj<102>|) (NOPATS (is |brokenObj<102>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<102>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<102>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<102>| null) (EQ (select |val:185.97.24| |brokenObj<102>|) null)) (EQ |T_java.lang.Object| (select |elementType:185.109.27| |brokenObj<102>|)))) (FORALL (|brokenObj<103>|) (NOPATS (is |brokenObj<103>| |T_org.jmlspecs.models.JMLListValueNode|) (NEQ |brokenObj<103>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<103>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |brokenObj<103>| null)) (EQ (select |owner:8.45.28| |brokenObj<103>|) null))) (FORALL (|brokenObj<104>|) (NOPATS (is |brokenObj<104>| |T_sos.koa.District|) (NEQ |brokenObj<104>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<104>| |T_sos.koa.District|)) (NEQ |brokenObj<104>| null) (NEQ (select |my_kiesKring:50.40| |brokenObj<104>|) null)) (EQ (select |owner:8.45.28| |brokenObj<104>|) (select |my_kiesKring:50.40| |brokenObj<104>|)))) (FORALL (|brokenObj<105>|) (NOPATS (is |brokenObj<105>| |T_sos.koa.District|) (NEQ |brokenObj<105>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<105>| |T_sos.koa.District|)) (NEQ |brokenObj<105>| null)) (AND (<= 0 (select |my_number:37.34| |brokenObj<105>|)) (<= (select |my_number:37.34| |brokenObj<105>|) |MAX_DISTRICTS_PER_KIESKRING:15.48.19|)))) (FORALL (|brokenObj<106>|) (NOPATS (is |brokenObj<106>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<106>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<106>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<106>| null)) (<= (select |my_kiesLijstCount:191.48.35| |brokenObj<106>|) |MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20|))) (FORALL (|brokenObj<107>|) (NOPATS (is |brokenObj<107>| |T_sos.koa.Candidate|) (NEQ |brokenObj<107>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<107>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<107>| null)) (NEQ (select |my_initials:35.101.46| |brokenObj<107>|) (select |my_name:34.83.46| (select |my_kiesLijst:35.140.49| |brokenObj<107>|))))) (FORALL (|brokenObj<108>|) (NOPATS (is |brokenObj<108>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<108>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<108>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<108>| null)) (<= (select |my_candidate_count:34.97.35| |brokenObj<108>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|))) (FORALL (|brokenObj<109>|) (NOPATS (is |brokenObj<109>| |T_java.util.Map|) (NEQ |brokenObj<109>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<109>| |T_java.util.Map|)) (NEQ |brokenObj<109>| null)) (FORALL (|o:167.89.29|) (IMPLIES (AND (EQ |@true| (is |o:167.89.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |o:167.89.29| alloc)) (NEQ |o:167.89.29| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state (|java.util.Map#theMap| state |brokenObj<109>|) |o:167.89.29| ))) (AND (EQ |@true| (is |o:167.89.29| |T_java.util.Map$Entry|)) (NEQ |o:167.89.29| null)))))) (FORALL (|brokenObj<110>|) (NOPATS (is |brokenObj<110>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<110>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<110>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<110>| null)) (FORALL (|i:15.85.29|) (IMPLIES (AND (<= 0 |i:15.85.29|) (< |i:15.85.29| (arrayLength (select |my_kiesLijsten:15.80.49| |brokenObj<110>|)))) (EQ (select |owner:8.45.28| (select (select elems (select |my_kiesLijsten:15.80.49| |brokenObj<110>|)) |i:15.85.29|)) |brokenObj<110>|))))) (FORALL (|brokenObj<111>|) (NOPATS (is |brokenObj<111>| |T_sos.koa.Candidate|) (NEQ |brokenObj<111>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<111>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<111>| null)) (EQ (select |owner:8.45.28| (select |my_firstname:35.94.46| |brokenObj<111>|)) |brokenObj<111>|))) (FORALL (|brokenObj<112>|) (NOPATS (is |brokenObj<112>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<112>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<112>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<112>| null)) (<= 0 (select |my_candidate_count:34.97.35| |brokenObj<112>|)))) (FORALL (|brokenObj<113>|) (NOPATS (is |brokenObj<113>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<113>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<113>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<113>| null)) (EQ (select |my_kieslijst_count:15.125.35| |brokenObj<113>|) |quantvalue#138|))) (FORALL (|i:34.57.29|) (IMPLIES (AND (<= 0 |i:34.57.29|) (< |i:34.57.29| (arrayLength |MY_CACHED_KIESLIJSTEN:34.54.64|))) (EQ (select |owner:8.45.28| (select (select elems |MY_CACHED_KIESLIJSTEN:34.54.64|) |i:34.57.29|)) |MY_CACHED_KIESLIJSTEN:34.54.64|))) (FORALL (|brokenObj<114>|) (NOPATS (is |brokenObj<114>| |T_sos.koa.Candidate|) (NEQ |brokenObj<114>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<114>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<114>| null)) (>= (select |my_vote_count:35.150.34| |brokenObj<114>|) 0))) (FORALL (|brokenObj<115>|) (NOPATS (is |brokenObj<115>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<115>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<115>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<115>| null)) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<115>|)) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| state |brokenObj<115>| null ))))) (FORALL (|brokenObj<116>|) (NOPATS (is |brokenObj<116>| |T_sos.koa.CandidateList|) (NEQ |brokenObj<116>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<116>| |T_sos.koa.CandidateList|)) (NEQ |brokenObj<116>| null)) (EQ (select |owner:8.45.28| (select |my_metadata:33.47.67| |brokenObj<116>|)) |brokenObj<116>|))) (FORALL (|brokenObj<117>|) (NOPATS (is |brokenObj<117>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<117>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<117>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<117>| null)) (<= (|java.lang.String.length.225.4| (select |my_name:34.83.46| |brokenObj<117>|)) |GROEPERING_NAME_MAX_LENGTH:34.39.20|))) (FORALL (|brokenObj<118>|) (NOPATS (is |brokenObj<118>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<118>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<118>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<118>| null)) (IFF (EQ (select |theSeq:38.188.37| |brokenObj<118>|) null) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<118>|) 0)))) (FORALL (|brokenObj<119>|) (NOPATS (is |brokenObj<119>| |T_sos.koa.Candidate|) (NEQ |brokenObj<119>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<119>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<119>| null)) (NEQ (select |my_city_of_residence:35.123.46| |brokenObj<119>|) (select |my_name:15.98.46| (select |my_kiesKring:35.130.49| |brokenObj<119>|))))) (FORALL (|brokenObj<120>|) (NOPATS (is |brokenObj<120>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<120>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<120>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<120>| null)) (<= 0 (select |my_codeCount:191.70.34| |brokenObj<120>|)))) (FORALL (|brokenObj<121>|) (NOPATS (is |brokenObj<121>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<121>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<121>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<121>| null)) (EQ (select |owner:8.45.28| (select |my_name:34.83.46| |brokenObj<121>|)) |brokenObj<121>|))) (FORALL (|brokenObj<122>|) (NOPATS (is |brokenObj<122>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<122>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<122>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<122>| null) (NEQ (select |theSeq:38.188.37| |brokenObj<122>|) null)) (EQ (select |owner:8.45.28| (select |theSeq:38.188.37| |brokenObj<122>|)) |brokenObj<122>|))) (FORALL (|brokenObj<123>|) (NOPATS (is |brokenObj<123>| |T_sos.koa.CandidateList|) (NEQ |brokenObj<123>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<123>| |T_sos.koa.CandidateList|)) (NEQ |brokenObj<123>| null)) (EQ (select |owner:8.45.28| (select |my_candidate_codes:33.59.43| |brokenObj<123>|)) |brokenObj<123>|))) (FORALL (|brokenObj<124>|) (NOPATS (is |brokenObj<124>| |T_sos.koa.CandidateList|) (NEQ |brokenObj<124>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<124>| |T_sos.koa.CandidateList|)) (NEQ |brokenObj<124>| null)) (<= 0 (select |my_blanco_count:33.66.35| |brokenObj<124>|)))) (FORALL (|brokenObj<125>|) (NOPATS (is |brokenObj<125>| |T_sos.koa.Candidate|) (NEQ |brokenObj<125>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<125>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<125>| null)) (<= (select |my_position_number:35.114.35| |brokenObj<125>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|))) (FORALL (|brokenObj<126>|) (NOPATS (is |brokenObj<126>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<126>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<126>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<126>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<126>| ))) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<126>|))))) (FORALL (|i:15.70.29|) (IMPLIES (AND (<= 0 |i:15.70.29|) (< |i:15.70.29| (arrayLength |MY_CACHED_KIESKRINGEN:15.68.64|))) (EQ (select |owner:8.45.28| (select (select elems |MY_CACHED_KIESKRINGEN:15.68.64|) |i:15.70.29|)) |MY_CACHED_KIESKRINGEN:15.68.64|))) (FORALL (|brokenObj<127>|) (NOPATS (is |brokenObj<127>| |T_sos.koa.Candidate|) (NEQ |brokenObj<127>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<127>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<127>| null)) (OR (EQ (select |my_gender:35.108.35| |brokenObj<127>|) |MALE:35.58.20|) (EQ (select |my_gender:35.108.35| |brokenObj<127>|) |FEMALE:35.58.32|) (EQ (select |my_gender:35.108.35| |brokenObj<127>|) |UNKNOWN:35.58.46|)))) (FORALL (|brokenObj<128>|) (NOPATS (is |brokenObj<128>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<128>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<128>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<128>| null)) (FORALL (|l2:185.45.52| |e1:185.46.43| |e2:185.46.47| |n:185.47.45|) (IMPLIES (AND (EQ |@true| (is |l2:185.45.52| |T_org.jmlspecs.models.JMLListEqualsNode|)) (EQ |@true| (isAllocated |l2:185.45.52| alloc)) (NEQ |l2:185.45.52| null) (EQ |@true| (is |e1:185.46.43| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e1:185.46.43| alloc)) (NEQ |e1:185.46.43| null) (EQ |@true| (is |e2:185.46.47| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e2:185.46.47| alloc)) (NEQ |e2:185.46.47| null) (EQ |@true| (is |n:185.47.45| T_bigint))) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| state |brokenObj<128>| |brokenObj<128>| |l2:185.45.52| |e1:185.46.43| |e2:185.46.47| |n:185.47.45| )))))) (FORALL (|brokenObj<129>|) (NOPATS (is |brokenObj<129>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<129>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<129>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<129>| null)) (>= (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<129>|) 0))) (FORALL (|brokenObj<130>|) (NOPATS (is |brokenObj<130>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<130>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<130>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<130>| null)) (AND (<= 0 (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<130>|)) (<= (|sos.koa.KiesLijst.candidateCount.256.2| state |brokenObj<130>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|)))) (FORALL (|brokenObj<131>|) (NOPATS (is |brokenObj<131>| |T_org.jmlspecs.models.JMLListValueNode|) (NEQ |brokenObj<131>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<131>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |brokenObj<131>| null)) (FORALL (|l2:131.45.51| |e1:131.46.44| |e2:131.46.48| |n:131.47.45|) (IMPLIES (AND (EQ |@true| (is |l2:131.45.51| |T_org.jmlspecs.models.JMLListValueNode|)) (EQ |@true| (isAllocated |l2:131.45.51| alloc)) (NEQ |l2:131.45.51| null) (EQ |@true| (is |e1:131.46.44| |T_org.jmlspecs.models.JMLType|)) (EQ |@true| (isAllocated |e1:131.46.44| alloc)) (NEQ |e1:131.46.44| null) (EQ |@true| (is |e2:131.46.48| |T_org.jmlspecs.models.JMLType|)) (EQ |@true| (isAllocated |e2:131.46.48| alloc)) (NEQ |e2:131.46.48| null) (EQ |@true| (is |n:131.47.45| T_bigint))) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| |brokenObj<131>| |brokenObj<131>| |l2:131.45.51| |e1:131.46.44| |e2:131.46.48| |n:131.47.45| )))))) (FORALL (|brokenObj<132>|) (NOPATS (is |brokenObj<132>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<132>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<132>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<132>| null)) (<= (select |my_kieskring_number:34.90.35| |brokenObj<132>|) |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20|))) (FORALL (|brokenObj<133>|) (NOPATS (is |brokenObj<133>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<133>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<133>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<133>| null)) (<= 0 (select |my_kieskring_number:34.90.35| |brokenObj<133>|)))) (FORALL (|brokenObj<134>|) (NOPATS (is |brokenObj<134>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<134>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<134>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<134>| null)) (EQ (select |owner:8.45.28| (select |my_districts:15.105.56| |brokenObj<134>|)) |brokenObj<134>|))) (FORALL (|brokenObj<135>|) (NOPATS (is |brokenObj<135>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<135>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<135>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<135>| null) (NEQ (select |next:185.101.35| |brokenObj<135>|) null)) (<: (select |elementType:185.109.27| (select |next:185.101.35| |brokenObj<135>|)) (select |elementType:185.109.27| |brokenObj<135>|)))) (FORALL (|brokenObj<136>|) (NOPATS (is |brokenObj<136>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<136>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<136>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<136>| null)) (EQ (arrayLength (select |my_districts:15.105.56| |brokenObj<136>|)) (+ |MAX_DISTRICTS_PER_KIESKRING:15.48.19| 1)))) (FORALL (|brokenObj<137>|) (NOPATS (is |brokenObj<137>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<137>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<137>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<137>| null)) (AND (<= 0 (select |my_number:34.76.35| |brokenObj<137>|)) (<= (select |my_number:34.76.35| |brokenObj<137>|) |MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20|)))) (FORALL (|brokenObj<138>|) (NOPATS (is |brokenObj<138>| |T_sos.koa.Candidate|) (NEQ |brokenObj<138>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<138>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<138>| null)) (<= (|java.lang.String.length.225.4| (select |my_city_of_residence:35.123.46| |brokenObj<138>|)) |CITY_OF_RESIDENCE_MAX_LENGTH:35.81.20|))) (FORALL (|brokenObj<139>|) (NOPATS (is |brokenObj<139>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<139>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<139>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<139>| null) (NEQ (select |the_list:181.166.38| |brokenObj<139>|) null) (NEQ (select |next:185.101.35| (select |the_list:181.166.38| |brokenObj<139>|)) null)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| state (select |next:185.101.35| (select |the_list:181.166.38| |brokenObj<139>|)) (select |val:185.97.24| (select |the_list:181.166.38| |brokenObj<139>|)) ))))) (FORALL (|brokenObj<140>|) (NOPATS (is |brokenObj<140>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<140>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<140>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<140>| null)) (EQ (arrayLength (select |my_kiesLijsten:15.80.49| |brokenObj<140>|)) (+ |MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20| 1)))) (FORALL (|brokenObj<141>|) (NOPATS (is |brokenObj<141>| |T_sos.koa.Candidate|) (NEQ |brokenObj<141>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<141>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<141>| null)) (EQ (select |owner:8.45.28| (select |my_lastname:35.86.46| |brokenObj<141>|)) |brokenObj<141>|))) (FORALL (|brokenObj<142>|) (NOPATS (is |brokenObj<142>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<142>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<142>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<142>| null)) (<= 0 (select |my_kiesKringCount:191.34.35| |brokenObj<142>|)))) (FORALL (|brokenObj<143>|) (NOPATS (is |brokenObj<143>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<143>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<143>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<143>| null)) (EQ (select |my_district_count:15.116.35| |brokenObj<143>|) |quantvalue#148|))) (FORALL (|brokenObj<144>|) (NOPATS (is |brokenObj<144>| |T_org.jmlspecs.models.JMLChar|) (NEQ |brokenObj<144>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<144>| |T_org.jmlspecs.models.JMLChar|)) (NEQ |brokenObj<144>| null)) (EQ (select |owner:8.45.28| |brokenObj<144>|) null))) (FORALL (|brokenObj<145>|) (NOPATS (is |brokenObj<145>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<145>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<145>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<145>| null)) (<= (|java.lang.String.length.225.4| (select |my_name:15.98.46| |brokenObj<145>|)) |KIESKRING_NAME_MAX_LENGTH:15.35.20|))) (FORALL (|brokenObj<146>|) (NOPATS (is |brokenObj<146>| |T_sos.koa.Candidate|) (NEQ |brokenObj<146>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<146>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<146>| null)) (NEQ (select |my_lastname:35.86.46| |brokenObj<146>|) (select |my_name:34.83.46| (select |my_kiesLijst:35.140.49| |brokenObj<146>|))))) (FORALL (|brokenObj<147>|) (NOPATS (is |brokenObj<147>| |T_sos.koa.Candidate|) (NEQ |brokenObj<147>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<147>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<147>| null)) (NEQ (select |my_initials:35.101.46| |brokenObj<147>|) (select |my_name:15.98.46| (select |my_kiesKring:35.130.49| |brokenObj<147>|))))) (FORALL (|brokenObj<148>|) (NOPATS (is |brokenObj<148>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<148>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<148>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<148>| null)) (EQ (select |owner:8.45.28| |brokenObj<148>|) null))) (FORALL (|brokenObj<149>|) (NOPATS (is |brokenObj<149>| |T_sos.koa.Candidate|) (NEQ |brokenObj<149>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<149>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<149>| null)) (<= (select |my_vote_count:35.150.34| |brokenObj<149>|) (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|)))) (FORALL (|brokenObj<150>|) (NOPATS (is |brokenObj<150>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<150>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<150>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<150>| null)) (<= (select |my_districtCount:191.41.34| |brokenObj<150>|) |MAX_DISTRICTS_PER_KIESKRING:15.48.19|))) (FORALL (|brokenObj<151>|) (NOPATS (is |brokenObj<151>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<151>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<151>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<151>| null)) (FORALL (|s2:38.53.51| |e1:38.54.44| |e2:38.54.48| |n:38.55.45|) (IMPLIES (AND (EQ |@true| (is |s2:38.53.51| |T_org.jmlspecs.models.JMLValueSequence|)) (EQ |@true| (isAllocated |s2:38.53.51| alloc)) (NEQ |s2:38.53.51| null) (EQ |@true| (is |e1:38.54.44| |T_org.jmlspecs.models.JMLType|)) (EQ |@true| (isAllocated |e1:38.54.44| alloc)) (NEQ |e1:38.54.44| null) (EQ |@true| (is |e2:38.54.48| |T_org.jmlspecs.models.JMLType|)) (EQ |@true| (isAllocated |e2:38.54.48| alloc)) (NEQ |e2:38.54.48| null) (EQ |@true| (is |n:38.55.45| T_bigint))) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<151>| |brokenObj<151>| |s2:38.53.51| |e1:38.54.44| |e2:38.54.48| |n:38.55.45| )))))) (FORALL (|brokenObj<152>|) (NOPATS (is |brokenObj<152>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<152>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<152>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<152>| null)) (<= 0 (select |my_number:15.90.35| |brokenObj<152>|)))) (FORALL (|brokenObj<153>|) (NOPATS (is |brokenObj<153>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<153>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<153>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<153>| null)) (AND (<= 0 (select |my_district_count:15.116.35| |brokenObj<153>|)) (<= (select |my_district_count:15.116.35| |brokenObj<153>|) |MAX_DISTRICTS_PER_KIESKRING:15.48.19|)))) (FORALL (|brokenObj<154>|) (NOPATS (is |brokenObj<154>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<154>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<154>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<154>| null)) (FORALL (|i:34.70.29|) (IMPLIES (AND (<= 0 |i:34.70.29|) (< |i:34.70.29| (arrayLength (select |my_candidates:34.67.63| |brokenObj<154>|)))) (EQ (select |owner:8.45.28| (select (select elems (select |my_candidates:34.67.63| |brokenObj<154>|)) |i:34.70.29|)) |brokenObj<154>|))))) (FORALL (|brokenObj<155>|) (NOPATS (is |brokenObj<155>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<155>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<155>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<155>| null)) (IFF (EQ |@true| (select |containsNull:185.124.29| |brokenObj<155>|)) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| state |brokenObj<155>| null ))))) (FORALL (|brokenObj<156>|) (NOPATS (is |brokenObj<156>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<156>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<156>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<156>| null)) (<= (select |my_vote_count:34.104.34| |brokenObj<156>|) (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|)))) (FORALL (|brokenObj<157>|) (NOPATS (is |brokenObj<157>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<157>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<157>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<157>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<157>| ))) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<157>|))))) (FORALL (|brokenObj<158>|) (NOPATS (is |brokenObj<158>| |T_sos.koa.Candidate|) (NEQ |brokenObj<158>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<158>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<158>| null)) (EQ (select |owner:8.45.28| (select |my_initials:35.101.46| |brokenObj<158>|)) |brokenObj<158>|))) (FORALL (|brokenObj<159>|) (NOPATS (is |brokenObj<159>| |T_org.jmlspecs.models.JMLListEqualsNode|) (NEQ |brokenObj<159>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<159>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |brokenObj<159>| null)) (EQ (select |owner:8.45.28| |brokenObj<159>|) null))) (FORALL (|brokenObj<160>|) (NOPATS (is |brokenObj<160>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<160>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<160>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<160>| null)) (AND (<= 0 (select |my_kieslijst_count:15.125.35| |brokenObj<160>|)) (<= (select |my_kieslijst_count:15.125.35| |brokenObj<160>|) |MAX_KIESLIJSTEN_PER_KIESKRING:15.61.20|)))) (FORALL (|brokenObj<161>|) (NOPATS (is |brokenObj<161>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<161>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<161>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<161>| null) (EQ (select |size:181.171.44| |brokenObj<161>|) 0)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<161>|))))) (FORALL (|brokenObj<162>|) (NOPATS (is |brokenObj<162>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<162>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<162>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<162>| null)) (<= (select |my_number:15.90.35| |brokenObj<162>|) |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20|))) (FORALL (|brokenObj<163>|) (NOPATS (is |brokenObj<163>| |T_sos.koa.Candidate|) (NEQ |brokenObj<163>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<163>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<163>| null)) (NEQ (select |my_firstname:35.94.46| |brokenObj<163>|) (select |my_name:34.83.46| (select |my_kiesLijst:35.140.49| |brokenObj<163>|))))) (FORALL (|brokenObj<164>|) (NOPATS (is |brokenObj<164>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<164>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<164>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<164>| null)) (<= 0 (select |my_districtCount:191.41.34| |brokenObj<164>|)))) (FORALL (|brokenObj<165>|) (NOPATS (is |brokenObj<165>| |T_sos.koa.Candidate|) (NEQ |brokenObj<165>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<165>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<165>| null)) (<= (|java.lang.String.length.225.4| (select |my_lastname:35.86.46| |brokenObj<165>|)) |LASTNAME_MAX_LENGTH:35.28.20|))) (FORALL (|brokenObj<166>|) (NOPATS (is |brokenObj<166>| |T_sos.koa.Candidate|) (NEQ |brokenObj<166>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<166>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<166>| null)) (EQ (select |owner:8.45.28| (select |my_city_of_residence:35.123.46| |brokenObj<166>|)) |brokenObj<166>|))) (FORALL (|brokenObj<167>|) (NOPATS (is |brokenObj<167>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<167>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<167>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<167>| null)) (FORALL (|i:15.111.29|) (IMPLIES (AND (<= 0 |i:15.111.29|) (< |i:15.111.29| (arrayLength (select |my_districts:15.105.56| |brokenObj<167>|)))) (EQ (select |owner:8.45.28| (select (select elems (select |my_districts:15.105.56| |brokenObj<167>|)) |i:15.111.29|)) |brokenObj<167>|))))) (FORALL (|brokenObj<168>|) (NOPATS (is |brokenObj<168>| |T_sos.koa.KiesLijst|) (NEQ |brokenObj<168>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<168>| |T_sos.koa.KiesLijst|)) (NEQ |brokenObj<168>| null)) (EQ (arrayLength (select |my_candidates:34.67.63| |brokenObj<168>|)) (+ |MAX_CANDIDATES_PER_KIESLIJST:34.45.20| 1)))) (FORALL (|brokenObj<169>|) (NOPATS (is |brokenObj<169>| |T_sos.koa.CandidateList|) (NEQ |brokenObj<169>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<169>| |T_sos.koa.CandidateList|)) (NEQ |brokenObj<169>| null)) (EQ (select |owner:8.45.28| (select |my_kieskringen:33.37.55| |brokenObj<169>|)) |brokenObj<169>|))) (FORALL (|brokenObj<170>|) (NOPATS (is |brokenObj<170>| |T_sos.koa.CandidateList|) (NEQ |brokenObj<170>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<170>| |T_sos.koa.CandidateList|)) (NEQ |brokenObj<170>| null)) (FORALL (|i:33.338.29|) (EQ (|sos.koa.CandidateList.getCandidate.374.2| state |brokenObj<170>| |i:33.338.29|) (|sos.koa.CandidateList.getCandidate.341.2| state |brokenObj<170>| (|java.lang.Integer.toString.249.4| |i:33.338.29|)))))) (FORALL (|brokenObj<171>|) (NOPATS (is |brokenObj<171>| |T_sos.koa.Candidate|) (NEQ |brokenObj<171>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<171>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<171>| null)) (NEQ (select |my_city_of_residence:35.123.46| |brokenObj<171>|) (select |my_name:34.83.46| (select |my_kiesLijst:35.140.49| |brokenObj<171>|))))) (FORALL (|brokenObj<172>|) (NOPATS (is |brokenObj<172>| |T_sos.koa.AuditLog|) (NEQ |brokenObj<172>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<172>| |T_sos.koa.AuditLog|)) (NEQ |brokenObj<172>| null)) (EQ (select |owner:8.45.28| |kiesKringen:36.72.53|) |brokenObj<172>|))) (FORALL (|brokenObj<173>|) (NOPATS (is |brokenObj<173>| |T_sos.koa.Candidate|) (NEQ |brokenObj<173>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<173>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<173>| null)) (NEQ (select |my_lastname:35.86.46| |brokenObj<173>|) (select |my_name:15.98.46| (select |my_kiesKring:35.130.49| |brokenObj<173>|))))) (FORALL (|brokenObj<174>|) (NOPATS (is |brokenObj<174>| |T_sos.koa.KiesKring|) (NEQ |brokenObj<174>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<174>| |T_sos.koa.KiesKring|)) (NEQ |brokenObj<174>| null)) (EQ (select |owner:8.45.28| (select |my_name:15.98.46| |brokenObj<174>|)) |brokenObj<174>|))) (FORALL (|brokenObj<175>|) (NOPATS (is |brokenObj<175>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<175>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<175>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<175>| null) (NEQ (select |the_list:181.166.38| |brokenObj<175>|) null)) (EQ (select |size:181.171.44| |brokenObj<175>|) (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| (select |the_list:181.166.38| |brokenObj<175>|))))) (FORALL (|brokenObj<176>|) (NOPATS (is |brokenObj<176>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<176>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<176>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<176>| null)) (FORALL (|s2:181.55.47|) (IMPLIES (AND (EQ |@true| (is |s2:181.55.47| |T_org.jmlspecs.models.JMLEqualsSet|)) (EQ |@true| (isAllocated |s2:181.55.47| alloc)) (NEQ |s2:181.55.47| null) (NEQ |s2:181.55.47| null)) (FORALL (|e1:181.56.43| |e2:181.56.47|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| state |brokenObj<176>| |s2:181.55.47| |e1:181.56.43| |e2:181.56.47| ))))))) (FORALL (|brokenObj<177>|) (NOPATS (is |brokenObj<177>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<177>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<177>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<177>| null)) (<= 0 (select |my_kiesLijstCount:191.48.35| |brokenObj<177>|)))) (FORALL (|brokenObj<178>|) (NOPATS (is |brokenObj<178>| |T_org.jmlspecs.models.JMLEqualsSet|) (NEQ |brokenObj<178>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<178>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |brokenObj<178>| null) (EQ (select |the_list:181.166.38| |brokenObj<178>|) null)) (EQ (select |size:181.171.44| |brokenObj<178>|) 0))) (FORALL (|brokenObj<179>|) (NOPATS (is |brokenObj<179>| |T_sos.koa.Candidate|) (NEQ |brokenObj<179>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<179>| |T_sos.koa.Candidate|)) (NEQ |brokenObj<179>| null)) (<= (|java.lang.String.length.225.4| (select |my_firstname:35.94.46| |brokenObj<179>|)) |FIRSTNAME_MAX_LENGTH:35.38.20|))) (FORALL (|brokenObj<180>|) (NOPATS (is |brokenObj<180>| |T_sos.koa.CandidateListMetadata|) (NEQ |brokenObj<180>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<180>| |T_sos.koa.CandidateListMetadata|)) (NEQ |brokenObj<180>| null)) (<= 0 (select |my_positieCount:191.55.34| |brokenObj<180>|)))) (FORALL (|brokenObj<181>|) (NOPATS (is |brokenObj<181>| |T_org.jmlspecs.models.JMLValueSequence|) (NEQ |brokenObj<181>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<181>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |brokenObj<181>| null)) (EQ (select |owner:8.45.28| |brokenObj<181>|) null))) (FORALL (|brokenObj<182>|) (NOPATS (is |brokenObj<182>| |T_sos.koa.CandidateList|) (NEQ |brokenObj<182>| null)) (IMPLIES (AND (EQ |@true| (is |brokenObj<182>| |T_sos.koa.CandidateList|)) (NEQ |brokenObj<182>| null)) (<= (|java.util.Map.size.102.4| state (select |my_kieskringen:33.37.55| |brokenObj<182>|)) |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20|))) (FORALL (|brokenObj<183>|) (EQ (|java.lang.Object#objectState| state |brokenObj<183>|) |IT:32.46.54|)) (FORALL (|brokenObj<184>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<184>|) (typeof |brokenObj<184>|))) (FORALL (|brokenObj<185>|) (EQ (|java.lang.Object#objectState| state |brokenObj<185>|) |IT:32.46.54|)) (FORALL (|brokenObj<186>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<186>|) (typeof |brokenObj<186>|))) (FORALL (|brokenObj<187>|) (EQ (|java.lang.Object#objectState| state |brokenObj<187>|) |IT:32.46.54|)) (FORALL (|brokenObj<188>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<188>|) (typeof |brokenObj<188>|))) (FORALL (|brokenObj<189>|) (EQ (|java.lang.Object#objectState| state |brokenObj<189>|) |IT:32.46.54|)) (FORALL (|brokenObj<190>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<190>|) (typeof |brokenObj<190>|))) (FORALL (|brokenObj<191>|) (EQ (|java.lang.Object#objectState| state |brokenObj<191>|) |IT:32.46.54|)) (FORALL (|brokenObj<192>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<192>|) (typeof |brokenObj<192>|))) (FORALL (|brokenObj<193>|) (EQ (|org.jmlspecs.models.JMLValueSequence#length| state |brokenObj<193>|) (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| (select |_length:38.194.31| |brokenObj<193>|)))) (FORALL (|brokenObj<194>|) (EQ (|java.lang.Object#objectState| state |brokenObj<194>|) |IT:32.46.54|)) (FORALL (|brokenObj<195>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<195>|) (typeof |brokenObj<195>|))) (FORALL (|brokenObj<196>|) (EQ (|java.lang.Throwable#_message| state |brokenObj<196>|) (|java.lang.Throwable.getMessage.73.4| state |brokenObj<196>|))) (FORALL (|brokenObj<197>|) (EQ (|java.lang.Throwable#_cause| state |brokenObj<197>|) (|java.lang.Throwable.getCause.83.4| state |brokenObj<197>|))) (FORALL (|brokenObj<198>|) (IFF (EQ |@true| ( |java.lang.Throwable#causeKnown| state |brokenObj<198>| )) (NEQ (|java.lang.Throwable.getCause.83.4| state |brokenObj<198>|) null))) (FORALL (|brokenObj<199>|) (EQ (|java.lang.Throwable#_stackTrace| state |brokenObj<199>|) (|java.lang.Throwable.getStackTrace.129.4| state |brokenObj<199>|))) (FORALL (|brokenObj<200>|) (EQ (|java.lang.Object#objectState| state |brokenObj<200>|) |IT:32.46.54|)) (FORALL (|brokenObj<201>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<201>|) (typeof |brokenObj<201>|))) (FORALL (|brokenObj<202>|) (EQ (|java.lang.Object#objectState| state |brokenObj<202>|) |IT:32.46.54|)) (FORALL (|brokenObj<203>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<203>|) (typeof |brokenObj<203>|))) (FORALL (|brokenObj<204>|) (EQ (|java.lang.Object#objectState| state |brokenObj<204>|) |IT:32.46.54|)) (FORALL (|brokenObj<205>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<205>|) (typeof |brokenObj<205>|))) (FORALL (|brokenObj<206>|) (EQ (|java.lang.Integer#theInteger| state |brokenObj<206>|) (|java.lang.Integer.intValue.329.4| |brokenObj<206>|))) (FORALL (|brokenObj<207>|) (EQ (|java.lang.Object#objectState| state |brokenObj<207>|) |IT:32.46.54|)) (FORALL (|brokenObj<208>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<208>|) (typeof |brokenObj<208>|))) (FORALL (|brokenObj<209>|) (EQ (|java.lang.Object#objectState| state |brokenObj<209>|) |IT:32.46.54|)) (FORALL (|brokenObj<210>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<210>|) (typeof |brokenObj<210>|))) (FORALL (|brokenObj<211>|) (EQ (|java.lang.Object#objectState| state |brokenObj<211>|) |IT:32.46.54|)) (FORALL (|brokenObj<212>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<212>|) (typeof |brokenObj<212>|))) (FORALL (|brokenObj<213>|) (EQ (|java.lang.Object#objectState| state |brokenObj<213>|) |IT:32.46.54|)) (FORALL (|brokenObj<214>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<214>|) (typeof |brokenObj<214>|))) (FORALL (|brokenObj<215>|) (EQ (|java.lang.Character#ch_| state |brokenObj<215>|) (|java.lang.Character.charValue.210.4| |brokenObj<215>|))) (FORALL (|brokenObj<216>|) (EQ (|java.lang.Object#objectState| state |brokenObj<216>|) |IT:32.46.54|)) (FORALL (|brokenObj<217>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<217>|) (typeof |brokenObj<217>|))) (FORALL (|brokenObj<218>|) (EQ (|java.lang.Object#objectState| state |brokenObj<218>|) |IT:32.46.54|)) (FORALL (|brokenObj<219>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<219>|) (typeof |brokenObj<219>|))) (FORALL (|brokenObj<220>|) (EQ (|java.lang.Object#objectState| state |brokenObj<220>|) |IT:32.46.54|)) (FORALL (|brokenObj<221>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<221>|) (typeof |brokenObj<221>|))) (FORALL (|brokenObj<222>|) (EQ (|java.lang.Object#objectState| state |brokenObj<222>|) |IT:32.46.54|)) (FORALL (|brokenObj<223>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<223>|) (typeof |brokenObj<223>|))) (FORALL (|brokenObj<224>|) (EQ (|java.lang.Object#objectState| state |brokenObj<224>|) |IT:32.46.54|)) (FORALL (|brokenObj<225>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<225>|) (typeof |brokenObj<225>|))) (FORALL (|brokenObj<226>|) (EQ (|java.lang.Object#objectState| state |brokenObj<226>|) |IT:32.46.54|)) (FORALL (|brokenObj<227>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<227>|) (typeof |brokenObj<227>|))) (FORALL (|brokenObj<228>|) (EQ (|java.lang.Throwable#_message| state |brokenObj<228>|) (|java.lang.Throwable.getMessage.73.4| state |brokenObj<228>|))) (FORALL (|brokenObj<229>|) (EQ (|java.lang.Throwable#_cause| state |brokenObj<229>|) (|java.lang.Throwable.getCause.83.4| state |brokenObj<229>|))) (FORALL (|brokenObj<230>|) (IFF (EQ |@true| ( |java.lang.Throwable#causeKnown| state |brokenObj<230>| )) (NEQ (|java.lang.Throwable.getCause.83.4| state |brokenObj<230>|) null))) (FORALL (|brokenObj<231>|) (EQ (|java.lang.Throwable#_stackTrace| state |brokenObj<231>|) (|java.lang.Throwable.getStackTrace.129.4| state |brokenObj<231>|))) (FORALL (|brokenObj<232>|) (EQ (|java.lang.Object#objectState| state |brokenObj<232>|) |IT:32.46.54|)) (FORALL (|brokenObj<233>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<233>|) (typeof |brokenObj<233>|))) (FORALL (|brokenObj<234>|) (EQ (|java.lang.Object#objectState| state |brokenObj<234>|) |IT:32.46.54|)) (FORALL (|brokenObj<235>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<235>|) (typeof |brokenObj<235>|))) (FORALL (|brokenObj<236>|) (EQ (|org.jmlspecs.models.JMLChar#theChar| state |brokenObj<236>|) (select |value:47.45.25| |brokenObj<236>|))) (FORALL (|brokenObj<237>|) (EQ (|java.lang.Object#objectState| state |brokenObj<237>|) |IT:32.46.54|)) (FORALL (|brokenObj<238>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<238>|) (typeof |brokenObj<238>|))) (FORALL (|brokenObj<239>|) (EQ (|java.lang.Object#objectState| state |brokenObj<239>|) |IT:32.46.54|)) (FORALL (|brokenObj<240>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<240>|) (typeof |brokenObj<240>|))) (FORALL (|brokenObj<241>|) (EQ (|java.lang.Object#objectState| state |brokenObj<241>|) |IT:32.46.54|)) (FORALL (|brokenObj<242>|) (EQ (|java.lang.Object#_getClass| state |brokenObj<242>|) (typeof |brokenObj<242>|))) (OR (AND (EQ |my_number:96.4| (store |my_number:37.34| this 0)) (NOT (LBLNEG |NonNull:44.14@97.12| (NEQ (|interned| |1|) null)))) (AND (EQ |my_number:96.4| (store |my_number:37.34| this 0)) (LBLNEG |NonNull:44.14@97.12| (NEQ (|interned| |1|) null)) (EQ |my_name:97.4| (store |my_name:44.46| this (|interned| |1|))) (EQ |my_kiesKring:98.4| (store |my_kiesKring:50.40| this null)) (FORALL (|brokenObj<243>|) (AND (NEQ (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|) null) (<= (|java.lang.String.length.225.4| (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|)) |DISTRICT_NAME_MAX_LENGTH:32.20|) (EQ (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|) (select |my_name:97.4| |brokenObj<243>|)) (EQ |@true| (is (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|) |T_java.lang.String|)))) (FORALL (|brokenObj<243>|) (PATS (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|)) (AND (NEQ (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|) null) (<= (|java.lang.String.length.225.4| (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|)) |DISTRICT_NAME_MAX_LENGTH:32.20|) (EQ (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|) (select |my_name:97.4| |brokenObj<243>|)) (EQ |@true| (is (|sos.koa.District.name.121.2| |state:98.17<1>| |brokenObj<243>|) |T_java.lang.String|)))) (FORALL (|brokenObj<244>|) (AND (EQ (|sos.koa.District.kiesKring.134.2| |state:98.17<1>| |brokenObj<244>|) (select |my_kiesKring:98.4| |brokenObj<244>|)) (EQ |@true| (is (|sos.koa.District.kiesKring.134.2| |state:98.17<1>| |brokenObj<244>|) |T_sos.koa.KiesKring|)))) (FORALL (|brokenObj<244>|) (PATS (|sos.koa.District.kiesKring.134.2| |state:98.17<1>| |brokenObj<244>|)) (AND (EQ (|sos.koa.District.kiesKring.134.2| |state:98.17<1>| |brokenObj<244>|) (select |my_kiesKring:98.4| |brokenObj<244>|)) (EQ |@true| (is (|sos.koa.District.kiesKring.134.2| |state:98.17<1>| |brokenObj<244>|) |T_sos.koa.KiesKring|)))) (FORALL (|brokenObj<245>|) (AND (<= 0 (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|)) (<= (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|) |MAX_DISTRICTS_PER_KIESKRING:15.48.19|) (EQ (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|) (select |my_number:96.4| |brokenObj<245>|)) (EQ |@true| (is (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|) T_int)))) (FORALL (|brokenObj<245>|) (PATS (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|)) (AND (<= 0 (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|)) (<= (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|) |MAX_DISTRICTS_PER_KIESKRING:15.48.19|) (EQ (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|) (select |my_number:96.4| |brokenObj<245>|)) (EQ |@true| (is (|sos.koa.District.number.108.2| |state:98.17<1>| |brokenObj<245>|) T_int)))) (FORALL (|brokenObj<246>|) (AND (EQ (|java.lang.String.length.225.4| |brokenObj<246>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|java.lang.String#stringSeq| |state:98.17<1>| this))) (EQ |@true| (is (|java.lang.String.length.225.4| |brokenObj<246>|) T_int)))) (FORALL (|brokenObj<246>|) (PATS (|java.lang.String.length.225.4| |brokenObj<246>|)) (AND (EQ (|java.lang.String.length.225.4| |brokenObj<246>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|java.lang.String#stringSeq| |state:98.17<1>| this))) (EQ |@true| (is (|java.lang.String.length.225.4| |brokenObj<246>|) T_int)))) (FORALL (|brokenObj<247>|) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<247>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<247>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<247>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<247>|) T_int)))) (FORALL (|brokenObj<247>|) (PATS (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<247>|)) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<247>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<247>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<247>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<247>|) T_int)))) (FORALL (|brokenObj<248>|) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<248>|) T_bigint))) (FORALL (|brokenObj<248>|) (PATS (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<248>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<248>|) T_bigint))) (FORALL (|brokenObj<249>| |anObject<1>|) (AND (IMPLIES (AND (NEQ |anObject<1>| null) (EQ |@true| (is |anObject<1>| |T_java.lang.String|)) (NEQ |anObject<1>| null)) (IFF (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|java.lang.String#stringSeq| |state:98.17<1>| this) (|java.lang.String#stringSeq| |state:98.17<1>| (cast |anObject<1>| |T_java.lang.String|)) )))) (IMPLIES (EQ this |anObject<1>|) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>| ))) (IMPLIES (OR (EQ |anObject<1>| null) (NOT (AND (EQ |@true| (is |anObject<1>| |T_java.lang.String|)) (NEQ |anObject<1>| null)))) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>| )))) (EQ |@true| (is (|java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>|) T_boolean)))) (FORALL (|brokenObj<249>| |anObject<1>|) (PATS (|java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>|)) (AND (IMPLIES (AND (NEQ |anObject<1>| null) (EQ |@true| (is |anObject<1>| |T_java.lang.String|)) (NEQ |anObject<1>| null)) (IFF (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|java.lang.String#stringSeq| |state:98.17<1>| this) (|java.lang.String#stringSeq| |state:98.17<1>| (cast |anObject<1>| |T_java.lang.String|)) )))) (IMPLIES (EQ this |anObject<1>|) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>| ))) (IMPLIES (OR (EQ |anObject<1>| null) (NOT (AND (EQ |@true| (is |anObject<1>| |T_java.lang.String|)) (NEQ |anObject<1>| null)))) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>| )))) (EQ |@true| (is (|java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<249>| |anObject<1>|) T_boolean)))) (FORALL (|brokenObj<250>| |obj<2>|) (AND (IMPLIES (AND (NEQ |obj<2>| null) (EQ |@true| (is |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<2>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<250>| (cast |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|) )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| (cast |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|) |brokenObj<250>| ))))) (IMPLIES (AND (NEQ |obj<2>| null) (EQ |@true| (is |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>| ))) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<250>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|))))) (IMPLIES (OR (EQ |obj<2>| null) (NOT (AND (EQ |@true| (is |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<2>| null)))) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>|) T_boolean)))) (FORALL (|brokenObj<250>| |obj<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>|)) (AND (IMPLIES (AND (NEQ |obj<2>| null) (EQ |@true| (is |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<2>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<250>| (cast |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|) )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| (cast |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|) |brokenObj<250>| ))))) (IMPLIES (AND (NEQ |obj<2>| null) (EQ |@true| (is |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>| ))) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<250>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|))))) (IMPLIES (OR (EQ |obj<2>| null) (NOT (AND (EQ |@true| (is |obj<2>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<2>| null)))) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<250>| |obj<2>|) T_boolean)))) (FORALL (|brokenObj<251>| |s2<17>|) (AND (IMPLIES (AND (NEQ |s2<17>| null) (NEQ |s2<17>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<251>| |s2<17>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<251>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<17>|)) (FORALL (|i:38.805.29|) (IMPLIES (AND (<= 0 |i:38.805.29|) (< |i:38.805.29| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<251>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<17>| |i:38.805.29|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<17>| |i:38.805.29|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<251>| |i:38.805.29|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<17>| |i:38.805.29|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<251>| |i:38.805.29|) null)))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<251>| |s2<17>|) T_boolean)))) (FORALL (|brokenObj<251>| |s2<17>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<251>| |s2<17>|)) (AND (IMPLIES (AND (NEQ |s2<17>| null) (NEQ |s2<17>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<251>| |s2<17>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<251>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<17>|)) (FORALL (|i:38.805.29|) (IMPLIES (AND (<= 0 |i:38.805.29|) (< |i:38.805.29| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<251>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<17>| |i:38.805.29|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<17>| |i:38.805.29|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<251>| |i:38.805.29|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<17>| |i:38.805.29|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<251>| |i:38.805.29|) null)))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<251>| |s2<17>|) T_boolean)))) (FORALL (|brokenObj<252>| |ob2<1>|) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<252>| |ob2<1>| )) (AND (NEQ |ob2<1>| null) (EQ |@true| |@true|))) (EQ |@true| (is (|org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<252>| |ob2<1>|) T_boolean)))) (FORALL (|brokenObj<252>| |ob2<1>|) (PATS (|org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<252>| |ob2<1>|)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<252>| |ob2<1>| )) (AND (NEQ |ob2<1>| null) (EQ |@true| |@true|))) (EQ |@true| (is (|org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<252>| |ob2<1>|) T_boolean)))) (FORALL (|brokenObj<253>| |i<8>|) (AND (IMPLIES (AND (<= 0 |i<8>|) (< |i<8>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<253>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|)) (select |elementType:39.44.30| |brokenObj<253>|))) (IMPLIES (AND (<= 0 |i<8>|) (< |i<8>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<253>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<253>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|) null)) (<= 0 |i<8>|) (< |i<8>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<253>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<253>| |i<8>|) (PATS (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|)) (AND (IMPLIES (AND (<= 0 |i<8>|) (< |i<8>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<253>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|)) (select |elementType:39.44.30| |brokenObj<253>|))) (IMPLIES (AND (<= 0 |i<8>|) (< |i<8>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<253>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<253>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|) null)) (<= 0 |i<8>|) (< |i<8>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<253>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<253>| |i<8>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<254>|) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<254>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<254>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<254>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<254>|) T_int)))) (FORALL (|brokenObj<254>|) (PATS (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<254>|)) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<254>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<254>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<254>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<254>|) T_int)))) (FORALL (brokenObj ls ls2 e1 e2 n) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| alloc |alloc:131.60.15| e1 null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:131.60.15| |alloc:131.64.22| e1 ls)) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (IFF (EQ (select |next:131.101.34| ls) null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |next:131.101.34| ls) null)) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| (select |next:131.101.34| ls)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (select |val:131.97.25| ls) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ e1 null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.head.227.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| e1 ls)) e1 )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| ls 0) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (< 0 n) (< n (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| ls n) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| (select |next:131.101.34| ls) (- n 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n) T_boolean)))) (FORALL (brokenObj ls ls2 e1 e2 n) (PATS (|org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| alloc |alloc:131.60.15| e1 null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:131.60.15| |alloc:131.64.22| e1 ls)) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ ls null) (IFF (EQ (select |next:131.101.34| ls) null) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |next:131.101.34| ls) null)) (EQ (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls) (+ 1 (|org.jmlspecs.models.JMLListValueNode.size.377.26| (select |next:131.101.34| ls)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (select |val:131.97.25| ls) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (NEQ e1 null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.head.227.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| e1 ls)) e1 )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (NEQ (select |val:131.97.25| ls) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| ls 0) (|org.jmlspecs.models.JMLListValueNode.head.227.4| ls) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n )) (IMPLIES (AND (NEQ ls null) (< 0 n) (< n (|org.jmlspecs.models.JMLListValueNode.size.377.26| ls))) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| ls n) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| (select |next:131.101.34| ls) (- n 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equational_theory.90.24| brokenObj ls ls2 e1 e2 n) T_boolean)))) (FORALL (|brokenObj<1>| i) (AND (<= 0 i) (< i (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<1>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| |brokenObj<1>| i) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<1>| i) (PATS (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| |brokenObj<1>| i)) (AND (<= 0 i) (< i (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<1>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.289.19| |brokenObj<1>| i) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<2>| a_candidate_code) (AND (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code ))) (NEQ (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code) null)) (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code ))) (EQ (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code) (|java.util.Map.get.134.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<2>|) (|java.lang.Integer.Integer.300.4| |alloc:131.64.22| |alloc:33.383.49| a_candidate_code)))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code) |T_sos.koa.Candidate|)))) (FORALL (|brokenObj<2>| a_candidate_code) (PATS (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code)) (AND (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code ))) (NEQ (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code) null)) (IMPLIES (AND (<= 0 a_candidate_code) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code ))) (EQ (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code) (|java.util.Map.get.134.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<2>|) (|java.lang.Integer.Integer.300.4| |alloc:131.64.22| |alloc:33.383.49| a_candidate_code)))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<2>| a_candidate_code) |T_sos.koa.Candidate|)))) (FORALL (|brokenObj<3>| |a_candidate_code<1>|) (AND (IMPLIES (<= 0 |a_candidate_code<1>|) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<3>| |a_candidate_code<1>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<3>|) (|java.lang.Integer.Integer.300.4| |alloc:33.383.49| |alloc:33.400.57| |a_candidate_code<1>|) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<3>| |a_candidate_code<1>|) T_boolean)))) (FORALL (|brokenObj<3>| |a_candidate_code<1>|) (PATS (|sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<3>| |a_candidate_code<1>|)) (AND (IMPLIES (<= 0 |a_candidate_code<1>|) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<3>| |a_candidate_code<1>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<3>|) (|java.lang.Integer.Integer.300.4| |alloc:33.383.49| |alloc:33.400.57| |a_candidate_code<1>|) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.390.2| |state:98.17<1>| |brokenObj<3>| |a_candidate_code<1>|) T_boolean)))) (FORALL (|brokenObj<4>| key) (AND (IMPLIES (NEQ key null) (IFF (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<4>| key )) (EXISTS (|e:167.118.32|) (AND (EQ |@true| (is |e:167.118.32| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.118.32| alloc)) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| this) |e:167.118.32| )) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| (|java.util.Map$Entry#abstractKey| |state:98.17<1>| |e:167.118.32|) key )))))) (EQ |@true| (is (|java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<4>| key) T_boolean)))) (FORALL (|brokenObj<4>| key) (PATS (|java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<4>| key)) (AND (IMPLIES (NEQ key null) (IFF (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<4>| key )) (EXISTS (|e:167.118.32|) (AND (EQ |@true| (is |e:167.118.32| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.118.32| alloc)) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| this) |e:167.118.32| )) (NEQ |e:167.118.32| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| (|java.util.Map$Entry#abstractKey| |state:98.17<1>| |e:167.118.32|) key )))))) (EQ |@true| (is (|java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<4>| key) T_boolean)))) (FORALL (|brokenObj<5>|) (AND (EQ (|java.lang.String.length.225.4| |brokenObj<5>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|java.lang.String#stringSeq| |state:98.17<1>| this))) (EQ |@true| (is (|java.lang.String.length.225.4| |brokenObj<5>|) T_int)))) (FORALL (|brokenObj<5>|) (PATS (|java.lang.String.length.225.4| |brokenObj<5>|)) (AND (EQ (|java.lang.String.length.225.4| |brokenObj<5>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|java.lang.String#stringSeq| |state:98.17<1>| this))) (EQ |@true| (is (|java.lang.String.length.225.4| |brokenObj<5>|) T_int)))) (FORALL (|brokenObj<6>|) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<6>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) (select |val:131.97.25| |brokenObj<6>|) )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<6>|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<6>|) (PATS (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|)) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<6>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) (select |val:131.97.25| |brokenObj<6>|) )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<6>|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.head.227.4| |brokenObj<6>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<7>|) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<7>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) T_bigint)))) (FORALL (|brokenObj<7>|) (PATS (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|)) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<7>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<7>|) T_bigint)))) (FORALL (|brokenObj<8>| ob2) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<8>| ob2 )) (AND (NEQ ob2 null) (EQ |@true| |@true|))) (EQ |@true| (is (|org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<8>| ob2) T_boolean)))) (FORALL (|brokenObj<8>| ob2) (PATS (|org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<8>| ob2)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<8>| ob2 )) (AND (NEQ ob2 null) (EQ |@true| |@true|))) (EQ |@true| (is (|org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| |brokenObj<8>| ob2) T_boolean)))) (FORALL (|brokenObj<9>| elem) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<9>| elem )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<9>| elem) T_boolean)))) (FORALL (|brokenObj<9>| elem) (PATS (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<9>| elem)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<9>| elem )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<9>| elem) T_boolean)))) (FORALL (|brokenObj<10>|) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<10>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) T_int)))) (FORALL (|brokenObj<10>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|)) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<10>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_size.405.4| |brokenObj<10>|) T_int)))) (FORALL (o1 o2) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| o1 o2 )) (EQ |@true| (termConditional (refEQ o1 null) (refEQ o2 null) (|java.lang.Object.equals.89.4| |state:98.17<1>| o1 o2)))) (EQ |@true| (is (|org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| o1 o2) T_boolean)))) (FORALL (o1 o2) (PATS (|org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| o1 o2)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| o1 o2 )) (EQ |@true| (termConditional (refEQ o1 null) (refEQ o2 null) (|java.lang.Object.equals.89.4| |state:98.17<1>| o1 o2)))) (EQ |@true| (is (|org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| o1 o2) T_boolean)))) (FORALL (|brokenObj<11>| obj) (AND (IMPLIES (EQ |brokenObj<11>| obj) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj ))) (IMPLIES (AND (NEQ obj null) (EQ (typeof |brokenObj<11>|) |T_java.lang.Object|)) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj )) (EQ |brokenObj<11>| obj))) (IMPLIES (EQ obj null) (NOT (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj )))) (IMPLIES (NEQ obj null) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj )) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| obj |brokenObj<11>| )))) (EQ |@true| (is (|java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj) T_boolean)))) (FORALL (|brokenObj<11>| obj) (PATS (|java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj)) (AND (IMPLIES (EQ |brokenObj<11>| obj) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj ))) (IMPLIES (AND (NEQ obj null) (EQ (typeof |brokenObj<11>|) |T_java.lang.Object|)) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj )) (EQ |brokenObj<11>| obj))) (IMPLIES (EQ obj null) (NOT (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj )))) (IMPLIES (NEQ obj null) (IFF (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj )) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| obj |brokenObj<11>| )))) (EQ |@true| (is (|java.lang.Object.equals.89.4| |state:98.17<1>| |brokenObj<11>| obj) T_boolean)))) (FORALL (|brokenObj<12>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| )) (FORALL (|e:181.447.47|) (IMPLIES (AND (EQ |@true| (is |e:181.447.47| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.447.47| alloc)) (NEQ |e:181.447.47| null)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<12>| |e:181.447.47| )))))) (IFF (EQ (select |the_list:181.166.38| |brokenObj<12>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| ))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>|) T_boolean)))) (FORALL (|brokenObj<12>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| )) (FORALL (|e:181.447.47|) (IMPLIES (AND (EQ |@true| (is |e:181.447.47| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.447.47| alloc)) (NEQ |e:181.447.47| null)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<12>| |e:181.447.47| )))))) (IFF (EQ (select |the_list:181.166.38| |brokenObj<12>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>| ))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<12>|) T_boolean)))) (FORALL (|brokenObj<13>| |key<1>|) (AND (IMPLIES (NOT (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<13>| |key<1>| ))) (EQ (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|) null)) (IMPLIES (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<13>| |key<1>| )) (EXISTS (|e:167.140.34|) (AND (EQ |@true| (is |e:167.140.34| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.140.34| alloc)) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| this) |e:167.140.34| )) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| (|java.util.Map$Entry#abstractKey| |state:98.17<1>| |e:167.140.34|) |key<1>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|) (|java.util.Map$Entry#abstractValue| |state:98.17<1>| |e:167.140.34|) ))))) (EQ |@true| (is (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<13>| |key<1>|) (PATS (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|)) (AND (IMPLIES (NOT (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<13>| |key<1>| ))) (EQ (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|) null)) (IMPLIES (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| |brokenObj<13>| |key<1>| )) (EXISTS (|e:167.140.34|) (AND (EQ |@true| (is |e:167.140.34| |T_java.util.Map$Entry|)) (EQ |@true| (isAllocated |e:167.140.34| alloc)) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| this) |e:167.140.34| )) (NEQ |e:167.140.34| null) (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| (|java.util.Map$Entry#abstractKey| |state:98.17<1>| |e:167.140.34|) |key<1>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|) (|java.util.Map$Entry#abstractValue| |state:98.17<1>| |e:167.140.34|) ))))) (EQ |@true| (is (|java.util.Map.get.134.4| |state:98.17<1>| |brokenObj<13>| |key<1>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<14>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<14>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>|) T_boolean)))) (FORALL (|brokenObj<14>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<14>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |brokenObj<14>|) T_boolean)))) (FORALL (|brokenObj<15>|) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<15>|) (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| (select |_length:38.194.31| |brokenObj<15>|)))) (FORALL (|brokenObj<16>|) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<16>|) T_bigint))) (FORALL (|brokenObj<16>|) (PATS (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<16>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.size.377.26| |brokenObj<16>|) T_bigint))) (FORALL (s s2 |e1<1>| |e2<1>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:33.400.57| |alloc:181.66.37|) |e1<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s null) |e2<1>| )) (OR (EQ |e2<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e2<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s |e1<1>|) |e2<1>| )) (OR (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e2<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.66.37| |alloc:181.77.19|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s |e1<1>|)) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (FORALL (|o:181.85.40|) (IMPLIES (AND (EQ |@true| (is |o:181.85.40| |T_java.lang.Object|)) (EQ |@true| (isAllocated |o:181.85.40| alloc)) (NEQ |o:181.85.40| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |o:181.85.40| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |o:181.85.40| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.77.19| |alloc:181.91.19|) |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.91.19| |alloc:181.91.57|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s null) |e2<1>|) (termConditional (refEQ |e2<1>| null) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| s |e2<1>|) null)) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s |e1<1>|) |e2<1>|) (termConditional (|java.lang.Object.equals.89.4| |state:98.17<1>| |e1<1>| |e2<1>|) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| s |e2<1>|) |e1<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.union.705.4| s s2) |e1<1>| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |e1<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| s )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| |alloc:181.91.57| |alloc:181.122.17| |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.122.17| |alloc:181.122.46|) |e1<1>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| s s2 )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s2 s )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>|) T_boolean)))) (FORALL (s s2 |e1<1>| |e2<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:33.400.57| |alloc:181.66.37|) |e1<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s null) |e2<1>| )) (OR (EQ |e2<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e2<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s |e1<1>|) |e2<1>| )) (OR (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e2<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.66.37| |alloc:181.77.19|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s |e1<1>|)) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (FORALL (|o:181.85.40|) (IMPLIES (AND (EQ |@true| (is |o:181.85.40| |T_java.lang.Object|)) (EQ |@true| (isAllocated |o:181.85.40| alloc)) (NEQ |o:181.85.40| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |o:181.85.40| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |o:181.85.40| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.77.19| |alloc:181.91.19|) |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.91.19| |alloc:181.91.57|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s null) |e2<1>|) (termConditional (refEQ |e2<1>| null) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| s |e2<1>|) null)) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IMPLIES (NEQ |e1<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| s |e1<1>|) |e2<1>|) (termConditional (|java.lang.Object.equals.89.4| |state:98.17<1>| |e1<1>| |e2<1>|) s (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| s |e2<1>|) |e1<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.union.705.4| s s2) |e1<1>| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |e1<1>| ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| s s2) |e1<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s |e1<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| s2 |e1<1>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| s )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| s) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| |alloc:181.91.57| |alloc:181.122.17| |e1<1>|) (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc:181.122.17| |alloc:181.122.46|) |e1<1>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s s2 )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s s2 )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| s s2 )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| s2 s )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| s s2 )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| s2 s )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| s s2 |e1<1>| |e2<1>|) T_boolean)))) (FORALL (|brokenObj<17>| |s2<1>|) (AND (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null)) (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null) (FORALL (|e:181.680.29|) (IMPLIES (AND (EQ |@true| (is |e:181.680.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.680.29| alloc)) (NEQ |e:181.680.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |e:181.680.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<17>| |e:181.680.29| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<1>| |e:181.680.29| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<17>| |s2<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|)) (AND (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null)) (IMPLIES (AND (NEQ |s2<1>| null) (NEQ |s2<1>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) null) (FORALL (|e:181.680.29|) (IMPLIES (AND (EQ |@true| (is |e:181.680.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.680.29| alloc)) (NEQ |e:181.680.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |e:181.680.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<17>| |e:181.680.29| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<1>| |e:181.680.29| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.intersection.677.4| |brokenObj<17>| |s2<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (alloc_ allocNew_ e) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) e )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e)) 1) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) alloc_))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) allocNew_)))) (FORALL (alloc_ allocNew_ e) (PATS (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e)) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) e )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e)) 1) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) alloc_))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.210.4| |state:98.17<1>| alloc_ allocNew_ e) allocNew_)))) (FORALL (|alloc_<1>| |allocNew_<1>|) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) )) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |alloc_<1>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |allocNew_<1>|)))) (FORALL (|alloc_<1>| |allocNew_<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|)) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) )) (NEQ (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|)) |T_org.jmlspecs.models.JMLEqualsSet|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |alloc_<1>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLEqualsSet.JMLEqualsSet.192.4| |alloc_<1>| |allocNew_<1>|) |allocNew_<1>|)))) (FORALL (|brokenObj<18>| |s2<2>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (FORALL (|e:181.411.36|) (IMPLIES (AND (EQ |@true| (is |e:181.411.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.411.36| alloc)) (NEQ |e:181.411.36| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<18>| |e:181.411.36| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|) |e:181.411.36| ))))))) (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<18>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>|) T_boolean)))) (FORALL (|brokenObj<18>| |s2<2>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (FORALL (|e:181.411.36|) (IMPLIES (AND (EQ |@true| (is |e:181.411.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.411.36| alloc)) (NEQ |e:181.411.36| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<18>| |e:181.411.36| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|) |e:181.411.36| ))))))) (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>| )) (AND (NEQ |s2<2>| null) (EQ |@true| (is |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)) (NEQ |s2<2>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<18>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |s2<2>| |T_org.jmlspecs.models.JMLEqualsSet|)))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<18>| |s2<2>|) T_boolean)))) (FORALL (|brokenObj<19>|) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) 0)) (IMPLIES (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| ))) (EXISTS (|e:181.463.36|) (AND (EQ |@true| (is |e:181.463.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.463.36| alloc)) (NEQ |e:181.463.36| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<19>| |e:181.463.36| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) (+ 1 (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<19>| |e:181.463.36|))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) T_int)))) (FORALL (|brokenObj<19>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|)) (AND (IMPLIES (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) 0)) (IMPLIES (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isEmpty.446.4| |brokenObj<19>| ))) (EXISTS (|e:181.463.36|) (AND (EQ |@true| (is |e:181.463.36| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.463.36| alloc)) (NEQ |e:181.463.36| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<19>| |e:181.463.36| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) (+ 1 (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<19>| |e:181.463.36|))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<19>|) T_int)))) (FORALL (|brokenObj<20>| |s2<3>|) (AND (IMPLIES (AND (NEQ |s2<3>| null) (NEQ |s2<3>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |s2<3>| |brokenObj<20>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>|) T_boolean)))) (FORALL (|brokenObj<20>| |s2<3>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>|)) (AND (IMPLIES (AND (NEQ |s2<3>| null) (NEQ |s2<3>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |s2<3>| |brokenObj<20>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSuperset.516.4| |brokenObj<20>| |s2<3>|) T_boolean)))) (FORALL (|i<1>|) (AND (NEQ (|java.lang.Integer.toString.249.4| |i<1>|) null) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| (|java.lang.Integer.toString.249.4| |i<1>|) (|java.lang.Integer.toString.115.4| |i<1>| 10) )) (EQ |@true| (is (|java.lang.Integer.toString.249.4| |i<1>|) |T_java.lang.String|)))) (FORALL (|i<1>|) (PATS (|java.lang.Integer.toString.249.4| |i<1>|)) (AND (NEQ (|java.lang.Integer.toString.249.4| |i<1>|) null) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| (|java.lang.Integer.toString.249.4| |i<1>|) (|java.lang.Integer.toString.115.4| |i<1>| 10) )) (EQ |@true| (is (|java.lang.Integer.toString.249.4| |i<1>|) |T_java.lang.String|)))) (FORALL (|brokenObj<21>| anObject) (AND (IMPLIES (AND (NEQ anObject null) (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)) (IFF (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|java.lang.String#stringSeq| |state:98.17<1>| this) (|java.lang.String#stringSeq| |state:98.17<1>| (cast anObject |T_java.lang.String|)) )))) (IMPLIES (EQ this anObject) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject ))) (IMPLIES (OR (EQ anObject null) (NOT (AND (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)))) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject )))) (EQ |@true| (is (|java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject) T_boolean)))) (FORALL (|brokenObj<21>| anObject) (PATS (|java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject)) (AND (IMPLIES (AND (NEQ anObject null) (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)) (IFF (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|java.lang.String#stringSeq| |state:98.17<1>| this) (|java.lang.String#stringSeq| |state:98.17<1>| (cast anObject |T_java.lang.String|)) )))) (IMPLIES (EQ this anObject) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject ))) (IMPLIES (OR (EQ anObject null) (NOT (AND (EQ |@true| (is anObject |T_java.lang.String|)) (NEQ anObject null)))) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject )))) (EQ |@true| (is (|java.lang.String.equals.320.4| |state:98.17<1>| |brokenObj<21>| anObject) T_boolean)))) (FORALL (|brokenObj<22>|) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) T_int)))) (FORALL (|brokenObj<22>|) (PATS (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|)) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<22>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<22>|) T_int)))) (FORALL (|brokenObj<23>|) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<23>|) T_bigint))) (FORALL (|brokenObj<23>|) (PATS (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<23>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<23>|) T_bigint))) (FORALL (|brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:181.122.46| |alloc:38.65.34|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.65.34| |alloc:38.67.33|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.67.33| |alloc:38.69.33| |e1<2>|)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.69.33| |alloc:38.73.16| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.first.1044.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.last.1083.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|) (+ |n<1>| 1)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|) |n<1>|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (FORALL (|i:38.117.34|) (IMPLIES (AND (<= 0 |i:38.117.34|) (< |i:38.117.34| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) null))))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<4>|))) (OR (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s2<4>|) ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.73.16| |alloc:38.137.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.137.14| |alloc:38.138.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.138.25| |alloc:38.141.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.141.14| |alloc:38.142.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.142.25| |alloc:38.145.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.145.14| |alloc:38.146.25|) (- 0 1) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.146.25| |alloc:38.149.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.149.14| |alloc:38.150.25|) 0 |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s<1>| |s2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |s<1>| |s2<4>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<4>| |s<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<4>| |s<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) T_boolean)))) (FORALL (|brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) (PATS (|org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:181.122.46| |alloc:38.65.34|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.65.34| |alloc:38.67.33|)) 0)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.67.33| |alloc:38.69.33| |e1<2>|)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.69.33| |alloc:38.73.16| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.first.1044.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.last.1083.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|) 0) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (NEQ |e1<2>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |s<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|) (+ |n<1>| 1)) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= (- 0 1) |n<1>|) (< |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|)) (NEQ |e1<2>| null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|) |n<1>|) |e1<2>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (AND (<= 0 |n<1>|) (<= |n<1>| (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|))) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |s<1>| |n<1>| |e1<2>|)) (+ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (FORALL (|i:38.117.34|) (IMPLIES (AND (<= 0 |i:38.117.34|) (< |i:38.117.34| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<4>| |i:38.117.34|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s<1>| |i:38.117.34|) null))))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<4>|))) (OR (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s2<4>|) ))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| |s<1>| )) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |s<1>|) 0))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.73.16| |alloc:38.137.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.137.14| |alloc:38.138.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.138.25| |alloc:38.141.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.141.14| |alloc:38.142.25|) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.142.25| |alloc:38.145.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.145.14| |alloc:38.146.25|) (- 0 1) |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.146.25| |alloc:38.149.14| |e1<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc:38.149.14| |alloc:38.150.25|) 0 |e1<2>|) ))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |s<1>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |s<1>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |s<1>|) (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |s<1>|)) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s<1>| |s2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s<1>| |s2<4>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |s<1>| |s2<4>| )))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<4>| |s<1>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>| )) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |s<1>| |s2<4>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<4>| |s<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equational_theory.172.24| |brokenObj<24>| |s<1>| |s2<4>| |e1<2>| |e2<2>| |n<1>|) T_boolean)))) (FORALL (|brokenObj<25>|) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<25>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) T_int)) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<25>|) (PATS (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|)) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<25>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) T_int)) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<25>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.header.1840.4| |brokenObj<25>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<26>|) (AND (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) ))) (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<26>|) (PATS (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|)) (AND (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) ))) (IMPLIES (AND (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<26>| (cast (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 1) T_int)) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<26>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.last.1083.4| |brokenObj<26>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<27>| |s2<5>|) (AND (IMPLIES (AND (NEQ |s2<5>| null) (NEQ |s2<5>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<27>| |s2<5>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<27>| |s2<5>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>|) T_boolean)))) (FORALL (|brokenObj<27>| |s2<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>|)) (AND (IMPLIES (AND (NEQ |s2<5>| null) (NEQ |s2<5>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<27>| |s2<5>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<27>| |s2<5>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |brokenObj<27>| |s2<5>|) T_boolean)))) (FORALL (|brokenObj<28>| item) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) item) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<28>| item) (PATS (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item)) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) item) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<28>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<28>| (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBack.2122.4| |brokenObj<28>| item) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<29>| |s2<6>|) (AND (IMPLIES (AND (NEQ |s2<6>| null) (NEQ |s2<6>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<29>| |s2<6>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<29>| |s2<6>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>|) T_boolean)))) (FORALL (|brokenObj<29>| |s2<6>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>|)) (AND (IMPLIES (AND (NEQ |s2<6>| null) (NEQ |s2<6>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<29>| |s2<6>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<29>| |s2<6>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperPrefix.838.4| |brokenObj<29>| |s2<6>|) T_boolean)))) (FORALL (|brokenObj<30>|) (AND (EQ (|java.util.Map.size.102.4| |state:98.17<1>| |brokenObj<30>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|java.util.Map#theMap| |state:98.17<1>| this))) (EQ |@true| (is (|java.util.Map.size.102.4| |state:98.17<1>| |brokenObj<30>|) T_int)))) (FORALL (|brokenObj<30>|) (PATS (|java.util.Map.size.102.4| |state:98.17<1>| |brokenObj<30>|)) (AND (EQ (|java.util.Map.size.102.4| |state:98.17<1>| |brokenObj<30>|) (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|java.util.Map#theMap| |state:98.17<1>| this))) (EQ |@true| (is (|java.util.Map.size.102.4| |state:98.17<1>| |brokenObj<30>|) T_int)))) (FORALL (|brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc:38.150.25| |alloc:185.60.15| |e1<3>| null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc:185.60.15| |alloc:185.64.22| |e1<3>| |ls<1>|)) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (IFF (EQ (select |next:185.101.35| |ls<1>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |next:185.101.35| |ls<1>|) null)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (select |next:185.101.35| |ls<1>|)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (select |val:185.97.24| |ls<1>|) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |e1<3>| null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| |e1<3>| |ls<1>|)) |e1<3>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls<1>| 0) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (< 0 |n<2>|) (< |n<2>| (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |ls<1>| |n<2>|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| (select |next:185.101.35| |ls<1>|) (- |n<2>| 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) T_boolean)))) (FORALL (|brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|)) (AND (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc:38.150.25| |alloc:185.60.15| |e1<3>| null)) 1)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc:185.60.15| |alloc:185.64.22| |e1<3>| |ls<1>|)) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |ls<1>| null) (IFF (EQ (select |next:185.101.35| |ls<1>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) 1)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |next:185.101.35| |ls<1>|) null)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|) (+ 1 (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| (select |next:185.101.35| |ls<1>|)))))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (select |val:185.97.24| |ls<1>|) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (NEQ |e1<3>| null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| |e1<3>| |ls<1>|)) |e1<3>| )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (NEQ (select |val:185.97.24| |ls<1>|) null)) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls<1>| 0) (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |ls<1>|) )))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>| )) (IMPLIES (AND (NEQ |ls<1>| null) (< 0 |n<2>|) (< |n<2>| (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |ls<1>|))) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |ls<1>| |n<2>|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| (select |next:185.101.35| |ls<1>|) (- |n<2>| 1)) )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<31>| |ls<1>| |ls2<1>| |e1<3>| |e2<3>| |n<2>|) T_boolean)))) (FORALL (|brokenObj<32>| |elem<1>|) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) null) (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) null) (FORALL (|e:181.651.29|) (IMPLIES (AND (EQ |@true| (is |e:181.651.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.651.29| alloc)) (NEQ |e:181.651.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |e:181.651.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<32>| |e:181.651.29| )) (NOT (OR (AND (EQ |e:181.651.29| null) (EQ |elem<1>| null)) (AND (NEQ |e:181.651.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |e:181.651.29| |elem<1>| ))))))))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |brokenObj<32>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |elem<1>| ))) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|)) (- (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<32>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) 1 0))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<32>| |elem<1>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) null) (NEQ (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) null) (FORALL (|e:181.651.29|) (IMPLIES (AND (EQ |@true| (is |e:181.651.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.651.29| alloc)) (NEQ |e:181.651.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |e:181.651.29| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<32>| |e:181.651.29| )) (NOT (OR (AND (EQ |e:181.651.29| null) (EQ |elem<1>| null)) (AND (NEQ |e:181.651.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |e:181.651.29| |elem<1>| ))))))))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |brokenObj<32>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |elem<1>| ))) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|)) (- (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<32>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) 1 0))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.remove.649.4| |state:98.17<1>| |brokenObj<32>| |elem<1>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<33>|) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<33>|) T_bigint))) (FORALL (|brokenObj<33>|) (PATS (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<33>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<33>|) T_bigint))) (FORALL (|brokenObj<34>|) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<34>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) (select |val:185.97.24| |brokenObj<34>|) )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<34>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<34>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|)) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<34>|) null) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) (select |val:185.97.24| |brokenObj<34>|) )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<34>|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) null)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.head.227.4| |brokenObj<34>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<35>| index) (AND (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (IMPLIES (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<35>| (cast (+ index 1) T_int))) ))) (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<35>| index) (PATS (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index)) (AND (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (IMPLIES (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<35>| index) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<35>| (cast (+ index 1) T_int))) ))) (IMPLIES (AND (NOT (AND (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)))) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) null)) (<= 0 index) (< index (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<35>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removeItemAt.1701.4| |brokenObj<35>| index) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<36>| |s2<7>|) (AND (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (NEQ (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) null)) (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (FORALL (|i:38.1574.32|) (IMPLIES (AND (<= 0 |i:38.1574.32|) (< |i:38.1574.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) null))))) (FORALL (|i:38.1579.32|) (IMPLIES (AND (<= 0 |i:38.1579.32|) (< |i:38.1579.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) null))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<36>| |s2<7>|) (PATS (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|)) (AND (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (NEQ (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) null)) (IMPLIES (AND (NEQ |s2<7>| null) (NEQ |s2<7>| null)) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (FORALL (|i:38.1574.32|) (IMPLIES (AND (<= 0 |i:38.1574.32|) (< |i:38.1574.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |i:38.1574.32|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<36>| |i:38.1574.32|) null))))) (FORALL (|i:38.1579.32|) (IMPLIES (AND (<= 0 |i:38.1579.32|) (< |i:38.1579.32| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<7>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) (cast (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<36>|) |i:38.1579.32|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<7>| |i:38.1579.32|) null))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| |brokenObj<36>| |s2<7>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<37>| |n<3>|) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (IMPLIES (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|)) |n<3>|) (FORALL (|i:38.1392.35|) (IMPLIES (AND (<= 0 |i:38.1392.35|) (< |i:38.1392.35| |n<3>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<37>| |n<3>|) (PATS (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|)) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (IMPLIES (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|)) |n<3>|) (FORALL (|i:38.1392.35|) (IMPLIES (AND (<= 0 |i:38.1392.35|) (< |i:38.1392.35| |n<3>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |i:38.1392.35|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<37>| |i:38.1392.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|)))) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) null)) (<= 0 |n<3>|) (<= |n<3>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<37>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<37>| |n<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (oBi) (AND (IMPLIES (EQ |@true| ( |java.math.BigInteger.equals.250.4| |state:98.17<1>| oBi |ZERO:153..| )) (EQ (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) (cast 0 T_bigint))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) T_bigint)))) (FORALL (oBi) (PATS (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi)) (AND (IMPLIES (EQ |@true| ( |java.math.BigInteger.equals.250.4| |state:98.17<1>| oBi |ZERO:153..| )) (EQ (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) (cast 0 T_bigint))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| oBi) T_bigint)))) (FORALL (|brokenObj<38>| x) (EQ |@true| (is (|java.math.BigInteger.equals.250.4| |state:98.17<1>| |brokenObj<38>| x) T_boolean))) (FORALL (|brokenObj<38>| x) (PATS (|java.math.BigInteger.equals.250.4| |state:98.17<1>| |brokenObj<38>| x)) (EQ |@true| (is (|java.math.BigInteger.equals.250.4| |state:98.17<1>| |brokenObj<38>| x) T_boolean))) (FORALL (|alloc_<2>| |allocNew_<2>| |e<1>|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) 1) (IMPLIES (EQ |e<1>| null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) null)) (IMPLIES (NEQ |e<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) |e<1>| ))) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |alloc_<2>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |allocNew_<2>|)))) (FORALL (|alloc_<2>| |allocNew_<2>| |e<1>|) (PATS (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) 1) (IMPLIES (EQ |e<1>| null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) null)) (IMPLIES (NEQ |e<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) 0) |e<1>| ))) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |alloc_<2>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc_<2>| |allocNew_<2>| |e<1>|) |allocNew_<2>|)))) (FORALL (|brokenObj<39>| |s2<8>|) (AND (IMPLIES (AND (NEQ |s2<8>| null) (NEQ |s2<8>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>| )) (FORALL (|e:181.479.29|) (IMPLIES (AND (EQ |@true| (is |e:181.479.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.479.29| alloc)) (NEQ |e:181.479.29| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<39>| |e:181.479.29| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<8>| |e:181.479.29| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>|) T_boolean)))) (FORALL (|brokenObj<39>| |s2<8>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>|)) (AND (IMPLIES (AND (NEQ |s2<8>| null) (NEQ |s2<8>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>| )) (FORALL (|e:181.479.29|) (IMPLIES (AND (EQ |@true| (is |e:181.479.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.479.29| alloc)) (NEQ |e:181.479.29| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<39>| |e:181.479.29| ))) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<8>| |e:181.479.29| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<39>| |s2<8>|) T_boolean)))) (FORALL (|brokenObj<40>| |a_candidate_code<2>|) (AND (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>| ))) (NEQ (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|) null)) (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>| ))) (EQ (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|) (|java.util.Map.get.134.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<40>|) (|java.lang.Integer.Integer.300.4| |alloc:185.64.22| |alloc:33.350.49| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|))))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|) |T_sos.koa.Candidate|)))) (FORALL (|brokenObj<40>| |a_candidate_code<2>|) (PATS (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|)) (AND (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>| ))) (NEQ (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|) null)) (IMPLIES (AND (NEQ |a_candidate_code<2>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|)) (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>| ))) (EQ (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|) (|java.util.Map.get.134.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<40>|) (|java.lang.Integer.Integer.300.4| |alloc:185.64.22| |alloc:33.350.49| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<2>|))))) (EQ |@true| (is (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<40>| |a_candidate_code<2>|) |T_sos.koa.Candidate|)))) (FORALL (|s<2>|) (AND (IMPLIES (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ (|java.lang.Integer.parseInt.266.4| |s<2>|) (|java.lang.Integer.parseInt.254.4| |s<2>| 10))) (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ |@true| (is (|java.lang.Integer.parseInt.266.4| |s<2>|) T_int)))) (FORALL (|s<2>|) (PATS (|java.lang.Integer.parseInt.266.4| |s<2>|)) (AND (IMPLIES (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ (|java.lang.Integer.parseInt.266.4| |s<2>|) (|java.lang.Integer.parseInt.254.4| |s<2>| 10))) (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<2>| )) (EQ |@true| (is (|java.lang.Integer.parseInt.266.4| |s<2>|) T_int)))) (FORALL (|s<3>|) (AND (IFF (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<3>| )) (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<3>| 10 ))) (EQ |@true| (is (|java.lang.Integer.parseable.38.33| |s<3>|) T_boolean)))) (FORALL (|s<3>|) (PATS (|java.lang.Integer.parseable.38.33| |s<3>|)) (AND (IFF (EQ |@true| ( |java.lang.Integer.parseable.38.33| |s<3>| )) (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<3>| 10 ))) (EQ |@true| (is (|java.lang.Integer.parseable.38.33| |s<3>|) T_boolean)))) (FORALL (|s<4>| r) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |s<4>| |S_117.43.41| ))) (FORALL (|i:117.44.31|) (IMPLIES (AND (<= 0 |i:117.44.31|) (< |i:117.44.31| (|java.lang.String.length.225.4| |s<4>|))) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.44.31|) r) (- 0 1))))))) (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |s<4>| |S_117.50.41| ))) (FORALL (|i:117.51.31|) (IMPLIES (AND (<= 1 |i:117.51.31|) (< |i:117.51.31| (|java.lang.String.length.225.4| |s<4>|)) (EQ (|java.lang.String.charAt.233.4| |s<4>| 0) 45)) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.51.31|) r) (- 0 1))))))) (EQ |@true| (is (|java.lang.Integer.parseable.54.33| |s<4>| r) T_boolean)))) (FORALL (|s<4>| r) (PATS (|java.lang.Integer.parseable.54.33| |s<4>| r)) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |s<4>| |S_117.43.41| ))) (FORALL (|i:117.44.31|) (IMPLIES (AND (<= 0 |i:117.44.31|) (< |i:117.44.31| (|java.lang.String.length.225.4| |s<4>|))) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.44.31|) r) (- 0 1))))))) (IMPLIES (AND (<= |MIN_RADIX:128..| r) (<= r |MAX_RADIX:128..|)) (IFF (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<4>| r )) (AND (NEQ |s<4>| null) (NOT (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| |s<4>| |S_117.50.41| ))) (FORALL (|i:117.51.31|) (IMPLIES (AND (<= 1 |i:117.51.31|) (< |i:117.51.31| (|java.lang.String.length.225.4| |s<4>|)) (EQ (|java.lang.String.charAt.233.4| |s<4>| 0) 45)) (NEQ (|java.lang.Character.digit.410.4| (|java.lang.String.charAt.233.4| |s<4>| |i:117.51.31|) r) (- 0 1))))))) (EQ |@true| (is (|java.lang.Integer.parseable.54.33| |s<4>| r) T_boolean)))) (FORALL (|brokenObj<41>| |index<1>|) (AND (IMPLIES (AND (<= 0 |index<1>|) (< |index<1>| (|java.lang.String.length.225.4| |brokenObj<41>|))) (EQ (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) (|org.jmlspecs.models.JMLChar.charValue.115.4| (cast (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|java.lang.String#stringSeq| |state:98.17<1>| this) |index<1>|) |T_org.jmlspecs.models.JMLChar|)))) (NOT (OR (< |index<1>| 0) (>= |index<1>| (|java.lang.String.length.225.4| this)))) (EQ |@true| (is (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) T_char)))) (FORALL (|brokenObj<41>| |index<1>|) (PATS (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|)) (AND (IMPLIES (AND (<= 0 |index<1>|) (< |index<1>| (|java.lang.String.length.225.4| |brokenObj<41>|))) (EQ (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) (|org.jmlspecs.models.JMLChar.charValue.115.4| (cast (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|java.lang.String#stringSeq| |state:98.17<1>| this) |index<1>|) |T_org.jmlspecs.models.JMLChar|)))) (NOT (OR (< |index<1>| 0) (>= |index<1>| (|java.lang.String.length.225.4| this)))) (EQ |@true| (is (|java.lang.String.charAt.233.4| |brokenObj<41>| |index<1>|) T_char)))) (FORALL (|brokenObj<42>|) (AND (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) ))) (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<42>|) (PATS (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|)) (AND (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) ))) (IMPLIES (AND (> (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<42>| 0) null)) (EQ (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<42>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.first.1044.4| |brokenObj<42>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<43>| |elem<2>|) (AND (IMPLIES (NEQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.755.37|) (AND (<= 0 |i:38.755.37|) (< |i:38.755.37| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.755.37|) |elem<2>| )))))) (IMPLIES (EQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.760.38|) (AND (<= 0 |i:38.760.38|) (< |i:38.760.38| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.760.38|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>|) T_boolean)))) (FORALL (|brokenObj<43>| |elem<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>|)) (AND (IMPLIES (NEQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.755.37|) (AND (<= 0 |i:38.755.37|) (< |i:38.755.37| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.755.37|) |elem<2>| )))))) (IMPLIES (EQ |elem<2>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>| )) (EXISTS (|i:38.760.38|) (AND (<= 0 |i:38.760.38|) (< |i:38.760.38| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<43>|)) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<43>| |i:38.760.38|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.has.750.4| |brokenObj<43>| |elem<2>|) T_boolean)))) (FORALL (|alloc_<3>| |allocNew_<3>| |item<1>| nxt) (AND (IMPLIES (NEQ |item<1>| null) (AND (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |item<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (<: (typeof |item<1>|) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (IMPLIES (NEQ nxt null) (<: (select |elementType:131.109.27| nxt) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)))) (IMPLIES (EQ nxt null) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) (typeof |item<1>|))) (IFF (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (EQ |@true| (termConditional (refEQ nxt null) |bool$false| (select |containsNull:131.124.29| nxt)))))) (IMPLIES (EQ |item<1>| null) (AND (EQ (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) null) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLType|) (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))))) (NEQ (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) null) (EQ (typeof (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLListValueNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |alloc_<3>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |allocNew_<3>|)))) (FORALL (|alloc_<3>| |allocNew_<3>| |item<1>| nxt) (PATS (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) (AND (IMPLIES (NEQ |item<1>| null) (AND (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |item<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (<: (typeof |item<1>|) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (IMPLIES (NEQ nxt null) (<: (select |elementType:131.109.27| nxt) (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)))) (IMPLIES (EQ nxt null) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) (typeof |item<1>|))) (IFF (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))) (EQ |@true| (termConditional (refEQ nxt null) |bool$false| (select |containsNull:131.124.29| nxt)))))) (IMPLIES (EQ |item<1>| null) (AND (EQ (select |val:131.97.25| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) null) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) nxt) (EQ (select |elementType:131.109.27| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLType|) (EQ |@true| (select |containsNull:131.124.29| (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt))))) (NEQ (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) null) (EQ (typeof (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt)) |T_org.jmlspecs.models.JMLListValueNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |alloc_<3>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc_<3>| |allocNew_<3>| |item<1>| nxt) |allocNew_<3>|)))) (FORALL (|brokenObj<44>| |s2<9>|) (AND (IMPLIES (AND (NEQ |s2<9>| null) (NEQ |s2<9>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<44>| |s2<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<44>| |s2<9>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>|) T_boolean)))) (FORALL (|brokenObj<44>| |s2<9>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>|)) (AND (IMPLIES (AND (NEQ |s2<9>| null) (NEQ |s2<9>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<44>| |s2<9>| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equals.407.4| |state:98.17<1>| |brokenObj<44>| |s2<9>| )))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |brokenObj<44>| |s2<9>|) T_boolean)))) (FORALL (|brokenObj<45>| |a_candidate_code<3>|) (AND (IMPLIES (AND (NEQ |a_candidate_code<3>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|))) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<45>| |a_candidate_code<3>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<45>|) (|java.lang.Integer.Integer.300.4| |alloc:33.350.49| |alloc:33.367.57| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|)) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<45>| |a_candidate_code<3>|) T_boolean)))) (FORALL (|brokenObj<45>| |a_candidate_code<3>|) (PATS (|sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<45>| |a_candidate_code<3>|)) (AND (IMPLIES (AND (NEQ |a_candidate_code<3>| null) (<= 0 (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|))) (IFF (EQ |@true| ( |sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<45>| |a_candidate_code<3>| )) (EQ |@true| ( |java.util.Map.containsKey.115.4| |state:98.17<1>| (select |my_candidate_codes:33.59.43| |brokenObj<45>|) (|java.lang.Integer.Integer.300.4| |alloc:33.350.49| |alloc:33.367.57| (|java.lang.Integer.parseInt.266.4| |a_candidate_code<3>|)) )))) (EQ |@true| (is (|sos.koa.CandidateList.validCandidate.357.2| |state:98.17<1>| |brokenObj<45>| |a_candidate_code<3>|) T_boolean)))) (FORALL (hd tl) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) null) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) hd )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl)) tl) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc:33.367.57| |alloc:185.200.34| hd tl) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) |T_org.jmlspecs.models.JMLListEqualsNode|)))) (FORALL (hd tl) (PATS (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl)) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) null) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) hd )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl)) tl) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc:33.367.57| |alloc:185.200.34| hd tl) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.cons.198.4| |state:98.17<1>| hd tl) |T_org.jmlspecs.models.JMLListEqualsNode|)))) (FORALL (|brokenObj<46>| |s2<10>|) (AND (IMPLIES (AND (NEQ |s2<10>| null) (NEQ |s2<10>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |s2<10>| |brokenObj<46>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>|) T_boolean)))) (FORALL (|brokenObj<46>| |s2<10>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>|)) (AND (IMPLIES (AND (NEQ |s2<10>| null) (NEQ |s2<10>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isProperSubset.502.4| |s2<10>| |brokenObj<46>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.isProperSuperset.529.4| |brokenObj<46>| |s2<10>|) T_boolean)))) (FORALL (|brokenObj<47>| |i<2>|) (AND (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|)) (select |elementType:39.44.30| |brokenObj<47>|))) (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<47>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<47>| |i<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|)) (AND (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|)) (select |elementType:39.44.30| |brokenObj<47>|))) (IMPLIES (AND (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<47>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) null)) (<= 0 |i<2>|) (< |i<2>| (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<47>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<47>| |i<2>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|alloc_<4>| |allocNew_<4>|) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |alloc_<4>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |allocNew_<4>|)))) (FORALL (|alloc_<4>| |allocNew_<4>|) (PATS (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isEmpty.939.4| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) )) (EQ (|org.jmlspecs.models.JMLValueSequence.size.612.26| (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) 0) (NEQ (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) null) (EQ (typeof (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|)) |T_org.jmlspecs.models.JMLValueSequence|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |alloc_<4>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.213.4| |alloc_<4>| |allocNew_<4>|) |allocNew_<4>|)))) (EQ (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) |decryptNrOfVotes:36.195.40|) (EQ |@true| (is (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) T_int)) (EQ (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) |decryptNrOfVotes:36.195.40|) (EQ |@true| (is (|sos.koa.AuditLog.getDecryptNrOfVotes.1055.1|) T_int)) (FORALL (|brokenObj<48>| |obj<1>|) (AND (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<48>| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) |brokenObj<48>| ))))) (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>| ))) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<48>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|))))) (IMPLIES (OR (EQ |obj<1>| null) (NOT (AND (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)))) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>|) T_boolean)))) (FORALL (|brokenObj<48>| |obj<1>|) (PATS (|org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>|)) (AND (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<48>| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|) |brokenObj<48>| ))))) (IMPLIES (AND (NEQ |obj<1>| null) (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>| ))) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<48>|)) (EQ |@true| (select |containsNull:39.52.32| (cast |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|))))) (IMPLIES (OR (EQ |obj<1>| null) (NOT (AND (EQ |@true| (is |obj<1>| |T_org.jmlspecs.models.JMLValueSequence|)) (NEQ |obj<1>| null)))) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| |brokenObj<48>| |obj<1>|) T_boolean)))) (FORALL (|brokenObj<49>| afterThisOne |item<2>|) (AND (IMPLIES (AND (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<49>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<49>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<49>| (cast (+ afterThisOne 1) T_int) |item<2>|) ))) (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<49>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<49>| afterThisOne |item<2>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|)) (AND (IMPLIES (AND (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<49>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<49>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<49>| (cast (+ afterThisOne 1) T_int) |item<2>|) ))) (<= (- 0 1) afterThisOne) (< afterThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<49>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1969.4| |brokenObj<49>| afterThisOne |item<2>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<50>| |s2<11>|) (AND (IMPLIES (AND (NEQ |s2<11>| null) (NEQ |s2<11>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|)) (EXISTS (|i:38.1125.37|) (AND (<= 0 |i:38.1125.37|) (< |i:38.1125.37| (+ (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|)) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<50>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |s2<11>| |i:38.1125.37|) ))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>|) T_boolean)))) (FORALL (|brokenObj<50>| |s2<11>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>|)) (AND (IMPLIES (AND (NEQ |s2<11>| null) (NEQ |s2<11>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|)) (EXISTS (|i:38.1125.37|) (AND (<= 0 |i:38.1125.37|) (< |i:38.1125.37| (+ (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<11>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<50>|)) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<50>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |s2<11>| |i:38.1125.37|) ))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |brokenObj<50>| |s2<11>|) T_boolean)))) (FORALL (|brokenObj<51>| beforeThisOne |item<3>|) (AND (IMPLIES (AND (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<51>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<51>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<51>| beforeThisOne) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:185.200.34| |alloc:38.2030.32| |item<3>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<51>| beforeThisOne)) ))) (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<51>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<51>| beforeThisOne |item<3>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|)) (AND (IMPLIES (AND (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<51>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<51>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<51>| beforeThisOne) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:185.200.34| |alloc:38.2030.32| |item<3>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<51>| beforeThisOne)) ))) (<= 0 beforeThisOne) (<= beforeThisOne (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<51>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2040.8| |brokenObj<51>| beforeThisOne |item<3>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<52>| |n<4>|) (AND (IMPLIES (AND (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|) |n<4>|)) (FORALL (|i:38.1455.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1455.35| T_bigint)) (<= |n<4>| |i:38.1455.35|) (< |i:38.1455.35| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) null))))))) (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<52>| |n<4>|) (PATS (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|)) (AND (IMPLIES (AND (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|) |n<4>|)) (FORALL (|i:38.1455.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1455.35| T_bigint)) (<= |n<4>| |i:38.1455.35|) (< |i:38.1455.35| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) (- |i:38.1455.35| |n<4>|)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<52>| |i:38.1455.35|) null))))))) (<= 0 |n<4>|) (<= |n<4>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<52>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1485.19| |brokenObj<52>| |n<4>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<53>| |i<3>|) (AND (<= 0 |i<3>|) (< |i<3>| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<53>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<53>| |i<3>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<53>| |i<3>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<53>| |i<3>|)) (AND (<= 0 |i<3>|) (< |i<3>| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<53>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<53>| |i<3>|) |T_java.lang.Object|)))) (FORALL (|alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) (AND (IMPLIES (NEQ |item<4>| null) (AND (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |item<4>| )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (<: (typeof |item<4>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (IMPLIES (NEQ |nxt<1>| null) (<: (select |elementType:185.109.27| |nxt<1>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)))) (IMPLIES (EQ |nxt<1>| null) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) (typeof |item<4>|))) (IFF (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (EQ |@true| (termConditional (refEQ |nxt<1>| null) |bool$false| (select |containsNull:185.124.29| |nxt<1>|)))))) (IMPLIES (EQ |item<4>| null) (AND (EQ (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) null) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_java.lang.Object|) (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))))) (NEQ (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_org.jmlspecs.models.JMLListEqualsNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |alloc_<5>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |allocNew_<5>|)))) (FORALL (|alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) (AND (IMPLIES (NEQ |item<4>| null) (AND (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |item<4>| )) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (<: (typeof |item<4>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (IMPLIES (NEQ |nxt<1>| null) (<: (select |elementType:185.109.27| |nxt<1>|) (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)))) (IMPLIES (EQ |nxt<1>| null) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) (typeof |item<4>|))) (IFF (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))) (EQ |@true| (termConditional (refEQ |nxt<1>| null) |bool$false| (select |containsNull:185.124.29| |nxt<1>|)))))) (IMPLIES (EQ |item<4>| null) (AND (EQ (select |val:185.97.24| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) null) (EQ (select |next:185.101.35| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |nxt<1>|) (EQ (select |elementType:185.109.27| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_java.lang.Object|) (EQ |@true| (select |containsNull:185.124.29| (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|))))) (NEQ (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) null) (EQ (typeof (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|)) |T_org.jmlspecs.models.JMLListEqualsNode|) (NOT (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |alloc_<5>|))) (EQ |@true| (isAllocated (|org.jmlspecs.models.JMLListEqualsNode.JMLListEqualsNode.146.4| |state:98.17<1>| |alloc_<5>| |allocNew_<5>| |item<4>| |nxt<1>|) |allocNew_<5>|)))) (FORALL (|s<5>| radix) (AND (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<5>| radix )) (EQ |@true| (is (|java.lang.Integer.parseInt.254.4| |s<5>| radix) T_int)))) (FORALL (|s<5>| radix) (PATS (|java.lang.Integer.parseInt.254.4| |s<5>| radix)) (AND (EQ |@true| ( |java.lang.Integer.parseable.54.33| |s<5>| radix )) (EQ |@true| (is (|java.lang.Integer.parseInt.254.4| |s<5>| radix) T_int)))) (FORALL (|brokenObj<54>|) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<54>| 1) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<54>|) (PATS (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|)) (AND (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<54>| 1) ))) (IMPLIES (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|)) (- (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (EQ |@true| |@true|))) (IMPLIES (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0) (>= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 1)) (NEQ (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) null)) (NOT (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<54>|) 0)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| |brokenObj<54>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<55>|) (AND (EQ (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) (|org.jmlspecs.models.JMLChar#theChar| |state:98.17<1>| |brokenObj<55>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) T_char)))) (FORALL (|brokenObj<55>|) (PATS (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|)) (AND (EQ (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) (|org.jmlspecs.models.JMLChar#theChar| |state:98.17<1>| |brokenObj<55>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLChar.charValue.115.4| |brokenObj<55>|) T_char)))) (FORALL (|brokenObj<56>|) (EQ (|org.jmlspecs.models.JMLChar#theChar| |state:98.17<1>| |brokenObj<56>|) (select |value:47.45.25| |brokenObj<56>|))) (FORALL (|brokenObj<57>| |i<4>|) (AND (<= 0 |i<4>|) (< |i<4>| (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<57>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |brokenObj<57>| |i<4>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<57>| |i<4>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |brokenObj<57>| |i<4>|)) (AND (<= 0 |i<4>|) (< |i<4>| (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<57>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.itemAt.289.19| |brokenObj<57>| |i<4>|) |T_java.lang.Object|)))) (FORALL (|brokenObj<58>|) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<58>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) T_bigint)))) (FORALL (|brokenObj<58>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|)) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<58>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<58>|) T_bigint)))) (FORALL (|brokenObj<59>| |beforeThisOne<1>| |item<5>|) (AND (IMPLIES (AND (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<59>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<59>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<59>| |beforeThisOne<1>|) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.2030.32| |alloc:38.2079.32| |item<5>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<59>| |beforeThisOne<1>|)) ))) (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<59>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<59>| |beforeThisOne<1>| |item<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|)) (AND (IMPLIES (AND (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<59>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<59>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.concat.1571.4| (|org.jmlspecs.models.JMLValueSequence.prefix.1389.4| |brokenObj<59>| |beforeThisOne<1>|) (|org.jmlspecs.models.JMLValueSequence.JMLValueSequence.233.4| |alloc:38.2030.32| |alloc:38.2079.32| |item<5>|)) (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<59>| |beforeThisOne<1>|)) ))) (<= 0 |beforeThisOne<1>|) (<= |beforeThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<59>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<59>| |beforeThisOne<1>| |item<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<60>| |i<5>|) (AND (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<60>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|)) (select |elementType:39.44.30| |brokenObj<60>|))) (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<60>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<60>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<60>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<60>| |i<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|)) (AND (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<60>|)) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<: (typeof (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|)) (select |elementType:39.44.30| |brokenObj<60>|))) (IMPLIES (AND (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<60>|)) (NOT (EQ |@true| (select |containsNull:39.52.32| |brokenObj<60>|)))) (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) null)) (<= 0 |i<5>|) (< |i<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<60>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<60>| |i<5>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<61>| |afterThisOne<1>| |item<6>|) (AND (IMPLIES (AND (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<61>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<61>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<61>| (cast (+ |afterThisOne<1>| 1) T_int) |item<6>|) ))) (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<61>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<61>| |afterThisOne<1>| |item<6>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|)) (AND (IMPLIES (AND (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<61>|)) (< (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<61>|) |MAX_VALUE:118..|)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<61>| (cast (+ |afterThisOne<1>| 1) T_int) |item<6>|) ))) (<= (- 0 1) |afterThisOne<1>|) (< |afterThisOne<1>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<61>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertAfterIndex.1941.17| |brokenObj<61>| |afterThisOne<1>| |item<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<62>| |n<5>|) (AND (IMPLIES (AND (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<62>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|)) |n<5>|) (FORALL (|i:38.1328.39|) (IMPLIES (AND (EQ |@true| (is |i:38.1328.39| T_bigint)) (<= 0 |i:38.1328.39|) (< |i:38.1328.39| |n<5>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) null))))))) (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<62>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<62>| |n<5>|) (PATS (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|)) (AND (IMPLIES (AND (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<62>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|)) |n<5>|) (FORALL (|i:38.1328.39|) (IMPLIES (AND (EQ |@true| (is |i:38.1328.39| T_bigint)) (<= 0 |i:38.1328.39|) (< |i:38.1328.39| |n<5>|)) (OR (IMPLIES (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) ))) (IMPLIES (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |i:38.1328.39|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<62>| |i:38.1328.39|) null))))))) (<= 0 |n<5>|) (<= |n<5>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<62>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.prefix.1361.21| |brokenObj<62>| |n<5>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<63>| |item<7>|) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (select |val:185.97.24| |brokenObj<63>|) |item<7>| )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>| )) (EQ |item<7>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>|) T_boolean)))) (FORALL (|brokenObj<63>| |item<7>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>|)) (AND (IMPLIES (NEQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>| )) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (select |val:185.97.24| |brokenObj<63>|) |item<7>| )))) (IMPLIES (EQ (select |val:185.97.24| |brokenObj<63>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>| )) (EQ |item<7>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.headEquals.252.4| |state:98.17<1>| |brokenObj<63>| |item<7>|) T_boolean)))) (FORALL (|alloc_<6>| |allocNew_<6>| value) (AND (EQ (|java.lang.Integer#theInteger| |state:98.17<1>| (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) value) (NEQ (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) null) (EQ (typeof (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) |T_java.lang.Integer|) (NOT (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |alloc_<6>|))) (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |allocNew_<6>|)))) (FORALL (|alloc_<6>| |allocNew_<6>| value) (PATS (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) (AND (EQ (|java.lang.Integer#theInteger| |state:98.17<1>| (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) value) (NEQ (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) null) (EQ (typeof (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value)) |T_java.lang.Integer|) (NOT (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |alloc_<6>|))) (EQ |@true| (isAllocated (|java.lang.Integer.Integer.300.4| |alloc_<6>| |allocNew_<6>| value) |allocNew_<6>|)))) (FORALL (|i<6>| |radix<1>|) (AND (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48))) (EQ |@true| (is (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |T_java.lang.String|)))) (FORALL (|i<6>| |radix<1>|) (PATS (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) (AND (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |radix<1>|)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 2) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 45) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 1) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (>= (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (NEQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48) (EQ |i<6>| (|java.lang.Integer.parseInt.254.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 10)))) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (> |i<6>| 0) (<= |MIN_RADIX:128..| |radix<1>|) (<= |radix<1>| |MAX_RADIX:128..|) (< |i<6>| 0)) (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null)) (IMPLIES (AND (> |MIN_RADIX:128..| |radix<1>|) (> |radix<1>| |MAX_RADIX:128..|) (EQ |i<6>| 0)) (AND (NEQ (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) null) (EQ (|java.lang.String.length.225.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|)) 1) (EQ (|java.lang.String.charAt.233.4| (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) 0) 48))) (EQ |@true| (is (|java.lang.Integer.toString.115.4| |i<6>| |radix<1>|) |T_java.lang.String|)))) (FORALL (|brokenObj<64>|) (AND (<= 0 (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|)) (<= (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|) (EQ (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|) (select |my_candidate_count:34.97.35| |brokenObj<64>|)) (EQ |@true| (is (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|) T_byte)))) (FORALL (|brokenObj<64>|) (PATS (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|)) (AND (<= 0 (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|)) (<= (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|) (EQ (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|) (select |my_candidate_count:34.97.35| |brokenObj<64>|)) (EQ |@true| (is (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<64>|) T_byte)))) (FORALL (ch |radix<2>|) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (< (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (|java.lang.Character.digitVal.390.33| ch))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 65) (<= ch 90) (< (+ (- ch 65) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 65) 10))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 97) (<= ch 122) (< (+ (- ch 97) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 97) 10))) (IMPLIES (OR (< |radix<2>| |MIN_RADIX:128..|) (> |radix<2>| |MAX_RADIX:128..|) (AND (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (>= (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (AND (>= ch 65) (<= ch 90) (>= (+ (- ch 65) 10) |radix<2>|)) (AND (>= ch 97) (<= ch 122) (>= (+ (- ch 97) 10) |radix<2>|)) (AND (NOT (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch ))) (NOT (AND (>= ch 65) (<= ch 90))) (NOT (AND (>= ch 97) (<= ch 122))))) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (- 0 1))) (EQ |@true| (is (|java.lang.Character.digit.410.4| ch |radix<2>|) T_int)))) (FORALL (ch |radix<2>|) (PATS (|java.lang.Character.digit.410.4| ch |radix<2>|)) (AND (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (< (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (|java.lang.Character.digitVal.390.33| ch))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 65) (<= ch 90) (< (+ (- ch 65) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 65) 10))) (IMPLIES (AND (<= |MIN_RADIX:128..| |radix<2>|) (<= |radix<2>| |MAX_RADIX:128..|) (>= ch 97) (<= ch 122) (< (+ (- ch 97) 10) |radix<2>|)) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (+ (- ch 97) 10))) (IMPLIES (OR (< |radix<2>| |MIN_RADIX:128..|) (> |radix<2>| |MAX_RADIX:128..|) (AND (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch )) (>= (|java.lang.Character.digitVal.390.33| ch) |radix<2>|)) (AND (>= ch 65) (<= ch 90) (>= (+ (- ch 65) 10) |radix<2>|)) (AND (>= ch 97) (<= ch 122) (>= (+ (- ch 97) 10) |radix<2>|)) (AND (NOT (EQ |@true| ( |java.lang.Character.isDigit.256.4| ch ))) (NOT (AND (>= ch 65) (<= ch 90))) (NOT (AND (>= ch 97) (<= ch 122))))) (EQ (|java.lang.Character.digit.410.4| ch |radix<2>|) (- 0 1))) (EQ |@true| (is (|java.lang.Character.digit.410.4| ch |radix<2>|) T_int)))) (FORALL (|ch<1>|) (AND (IFF (EQ |@true| ( |java.lang.Character.isDigit.256.4| |ch<1>| )) (EQ (|java.lang.Character.getType.510.4| |ch<1>|) |DECIMAL_DIGIT_NUMBER:128..|)) (EQ |@true| (is (|java.lang.Character.isDigit.256.4| |ch<1>|) T_boolean)))) (FORALL (|ch<1>|) (PATS (|java.lang.Character.isDigit.256.4| |ch<1>|)) (AND (IFF (EQ |@true| ( |java.lang.Character.isDigit.256.4| |ch<1>| )) (EQ (|java.lang.Character.getType.510.4| |ch<1>|) |DECIMAL_DIGIT_NUMBER:128..|)) (EQ |@true| (is (|java.lang.Character.isDigit.256.4| |ch<1>|) T_boolean)))) (FORALL (|ch<2>|) (AND (<= |UNASSIGNED:128..| (|java.lang.Character.getType.510.4| |ch<2>|)) (<= (|java.lang.Character.getType.510.4| |ch<2>|) |OTHER_SYMBOL:128..|) (EQ |@true| |@true|) (EQ |@true| (is (|java.lang.Character.getType.510.4| |ch<2>|) T_int)))) (FORALL (|ch<2>|) (PATS (|java.lang.Character.getType.510.4| |ch<2>|)) (AND (<= |UNASSIGNED:128..| (|java.lang.Character.getType.510.4| |ch<2>|)) (<= (|java.lang.Character.getType.510.4| |ch<2>|) |OTHER_SYMBOL:128..|) (EQ |@true| |@true|) (EQ |@true| (is (|java.lang.Character.getType.510.4| |ch<2>|) T_int)))) (FORALL (|ch<3>|) (EQ |@true| (is (|java.lang.Character.digitVal.390.33| |ch<3>|) T_int))) (FORALL (|ch<3>|) (PATS (|java.lang.Character.digitVal.390.33| |ch<3>|)) (EQ |@true| (is (|java.lang.Character.digitVal.390.33| |ch<3>|) T_int))) (FORALL (|hd<1>| |tl<1>|) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |hd<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|)) |tl<1>|) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:38.2079.32| |alloc:131.200.34| |hd<1>| |tl<1>|) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |T_org.jmlspecs.models.JMLListValueNode|)))) (FORALL (|hd<1>| |tl<1>|) (PATS (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|)) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) null) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |hd<1>| )) (EQ (select |next:131.101.34| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|)) |tl<1>|) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) (|org.jmlspecs.models.JMLListValueNode.JMLListValueNode.146.4| |alloc:38.2079.32| |alloc:131.200.34| |hd<1>| |tl<1>|) )) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.cons.198.4| |hd<1>| |tl<1>|) |T_org.jmlspecs.models.JMLListValueNode|)))) (FORALL (|brokenObj<65>| |item<8>|) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (select |val:131.97.25| |brokenObj<65>|) |item<8>| )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |item<8>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>|) T_boolean)))) (FORALL (|brokenObj<65>| |item<8>|) (PATS (|org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>|)) (AND (IMPLIES (NEQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (select |val:131.97.25| |brokenObj<65>|) |item<8>| )))) (IMPLIES (EQ (select |val:131.97.25| |brokenObj<65>|) null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>| )) (EQ |item<8>| null))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.headEquals.252.4| |brokenObj<65>| |item<8>|) T_boolean)))) (FORALL (|brokenObj<66>| |ls2<2>|) (AND (IMPLIES (AND (NEQ |ls2<2>| null) (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<66>| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) |brokenObj<66>| ))))) (IMPLIES (OR (EQ |ls2<2>| null) (NOT (AND (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>|) T_boolean)))) (FORALL (|brokenObj<66>| |ls2<2>|) (PATS (|org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>|)) (AND (IMPLIES (AND (NEQ |ls2<2>| null) (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<66>| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| (cast |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|) |brokenObj<66>| ))))) (IMPLIES (OR (EQ |ls2<2>| null) (NOT (AND (EQ |@true| (is |ls2<2>| |T_org.jmlspecs.models.JMLListValueNode|)) (NEQ |ls2<2>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.equals.501.4| |state:98.17<1>| |brokenObj<66>| |ls2<2>|) T_boolean)))) (FORALL (|brokenObj<67>| |ls2<3>|) (AND (IMPLIES (NEQ |ls2<3>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )) (AND (<= (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|) (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |ls2<3>|)) (FORALL (|i:131.471.30|) (IMPLIES (AND (<= 0 |i:131.471.30|) (< |i:131.471.30| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) ))))))))) (IMPLIES (EQ |ls2<3>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>|) T_boolean)))) (FORALL (|brokenObj<67>| |ls2<3>|) (PATS (|org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>|)) (AND (IMPLIES (NEQ |ls2<3>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )) (AND (<= (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|) (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |ls2<3>|)) (FORALL (|i:131.471.30|) (IMPLIES (AND (<= 0 |i:131.471.30|) (< |i:131.471.30| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<67>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |ls2<3>| |i:131.471.30|) (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<67>| |i:131.471.30|) ))))))))) (IMPLIES (EQ |ls2<3>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.isPrefixOf.467.4| |brokenObj<67>| |ls2<3>|) T_boolean)))) (FORALL (|brokenObj<68>|) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<68>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) T_int)))) (FORALL (|brokenObj<68>|) (PATS (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|)) (AND (EQ (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) (|org.jmlspecs.models.JMLListValueNode.length.398.26| |brokenObj<68>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<68>|) T_int)))) (FORALL (|brokenObj<69>| |item<9>|) (AND (IMPLIES (NEQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.440.35|) (AND (<= 0 |i:185.440.35|) (< |i:185.440.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ |@true| (termConditional (refEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) null) (refEQ |item<9>| null) (|java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) |item<9>|))))))) (IMPLIES (EQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.448.35|) (AND (<= 0 |i:185.448.35|) (< |i:185.448.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.448.35|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>|) T_boolean)))) (FORALL (|brokenObj<69>| |item<9>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>|)) (AND (IMPLIES (NEQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.440.35|) (AND (<= 0 |i:185.440.35|) (< |i:185.440.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ |@true| (termConditional (refEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) null) (refEQ |item<9>| null) (|java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.440.35|) |item<9>|))))))) (IMPLIES (EQ |item<9>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>| )) (EXISTS (|i:185.448.35|) (AND (<= 0 |i:185.448.35|) (< |i:185.448.35| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<69>|)) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<69>| |i:185.448.35|) null))))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<69>| |item<9>|) T_boolean)))) (FORALL (|brokenObj<70>| |s2<12>|) (AND (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null)) (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null) (FORALL (|e:181.709.34|) (IMPLIES (AND (EQ |@true| (is |e:181.709.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.709.34| alloc)) (NEQ |e:181.709.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |e:181.709.34| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<70>| |e:181.709.34| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<12>| |e:181.709.34| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<70>| |s2<12>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|)) (AND (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null)) (IMPLIES (AND (NEQ |s2<12>| null) (NEQ |s2<12>| null) (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<70>|) (- |MAX_VALUE:118..| (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |s2<12>| |brokenObj<70>|))))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) null) (FORALL (|e:181.709.34|) (IMPLIES (AND (EQ |@true| (is |e:181.709.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.709.34| alloc)) (NEQ |e:181.709.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |e:181.709.34| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<70>| |e:181.709.34| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<12>| |e:181.709.34| )))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.union.705.4| |brokenObj<70>| |s2<12>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<71>| |s2<13>|) (AND (IMPLIES (AND (NEQ |s2<13>| null) (NEQ |s2<13>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<13>| |brokenObj<71>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>|) T_boolean)))) (FORALL (|brokenObj<71>| |s2<13>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>|)) (AND (IMPLIES (AND (NEQ |s2<13>| null) (NEQ |s2<13>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isProperSubsequence.1162.4| |s2<13>| |brokenObj<71>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isProperSupersequence.1204.4| |brokenObj<71>| |s2<13>|) T_boolean)))) (FORALL (|brokenObj<72>| |i<7>|) (AND (<= 0 |i<7>|) (< |i<7>| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<72>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<72>| |i<7>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<72>| |i<7>|) (PATS (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<72>| |i<7>|)) (AND (<= 0 |i<7>|) (< |i<7>| (|org.jmlspecs.models.JMLListValueNode.int_length.424.4| |brokenObj<72>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListValueNode.itemAt.324.4| |brokenObj<72>| |i<7>|) |T_org.jmlspecs.models.JMLType|)))) (FORALL (|brokenObj<73>|) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<73>|) T_bigint))) (FORALL (|brokenObj<73>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<73>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.size.377.26| |brokenObj<73>|) T_bigint))) (FORALL (|brokenObj<74>| |s2<14>|) (AND (IMPLIES (AND (NEQ |s2<14>| null) (NEQ |s2<14>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<14>|)) (FORALL (|i:38.805.29|) (IMPLIES (AND (<= 0 |i:38.805.29|) (< |i:38.805.29| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) null)))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>|) T_boolean)))) (FORALL (|brokenObj<74>| |s2<14>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>|)) (AND (IMPLIES (AND (NEQ |s2<14>| null) (NEQ |s2<14>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>| )) (AND (<= (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|) (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |s2<14>|)) (FORALL (|i:38.805.29|) (IMPLIES (AND (<= 0 |i:38.805.29|) (< |i:38.805.29| (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<74>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |s2<14>| |i:38.805.29|) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| |brokenObj<74>| |i:38.805.29|) null)))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isPrefix.801.4| |brokenObj<74>| |s2<14>|) T_boolean)))) (FORALL (|brokenObj<75>|) (EQ (|java.lang.Integer#theInteger| |state:98.17<1>| |brokenObj<75>|) (|java.lang.Integer.intValue.329.4| |brokenObj<75>|))) (FORALL (|brokenObj<76>|) (AND (EQ (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) (|java.lang.Integer#theInteger| |state:98.17<1>| |brokenObj<76>|)) (EQ |@true| (is (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) T_int)))) (FORALL (|brokenObj<76>|) (PATS (|java.lang.Integer.intValue.329.4| |brokenObj<76>|)) (AND (EQ (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) (|java.lang.Integer#theInteger| |state:98.17<1>| |brokenObj<76>|)) (EQ |@true| (is (|java.lang.Integer.intValue.329.4| |brokenObj<76>|) T_int)))) (FORALL (|brokenObj<77>| |item<10>|) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<77>| 0 |item<10>|) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) |brokenObj<77>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<77>| |item<10>|) (PATS (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) (AND (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) (|org.jmlspecs.models.JMLValueSequence.insertBeforeIndex.2073.4| |brokenObj<77>| 0 |item<10>|) ))) (IMPLIES (< (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) |MAX_VALUE:118..|) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) (+ (|org.jmlspecs.models.JMLValueSequence.int_length.655.4| |brokenObj<77>|) 1)) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.equals.910.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.trailer.1876.4| (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|)) |brokenObj<77>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.insertFront.2161.4| |brokenObj<77>| |item<10>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<78>| |ls2<4>|) (AND (IMPLIES (AND (NEQ |ls2<4>| null) (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<78>| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) |brokenObj<78>| ))))) (IMPLIES (OR (EQ |ls2<4>| null) (NOT (AND (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>|) T_boolean)))) (FORALL (|brokenObj<78>| |ls2<4>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>|)) (AND (IMPLIES (AND (NEQ |ls2<4>| null) (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<78>| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) )) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| (cast |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|) |brokenObj<78>| ))))) (IMPLIES (OR (EQ |ls2<4>| null) (NOT (AND (EQ |@true| (is |ls2<4>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (NEQ |ls2<4>| null)))) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>| )) (EQ |@true| |bool$false|))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.equals.501.4| |state:98.17<1>| |brokenObj<78>| |ls2<4>|) T_boolean)))) (FORALL (|brokenObj<79>| |ls2<5>|) (AND (IMPLIES (NEQ |ls2<5>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )) (AND (<= (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|) (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |ls2<5>|)) (FORALL (|i:185.471.30|) (IMPLIES (AND (<= 0 |i:185.471.30|) (< |i:185.471.30| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) ))))))))) (IMPLIES (EQ |ls2<5>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>|) T_boolean)))) (FORALL (|brokenObj<79>| |ls2<5>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>|)) (AND (IMPLIES (NEQ |ls2<5>| null) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )) (AND (<= (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|) (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |ls2<5>|)) (FORALL (|i:185.471.30|) (IMPLIES (AND (<= 0 |i:185.471.30|) (< |i:185.471.30| (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<79>|))) (OR (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) null)) (AND (NEQ (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |ls2<5>| |i:185.471.30|) (|org.jmlspecs.models.JMLListEqualsNode.itemAt.324.4| |brokenObj<79>| |i:185.471.30|) ))))))))) (IMPLIES (EQ |ls2<5>| null) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.isPrefixOf.467.4| |brokenObj<79>| |ls2<5>|) T_boolean)))) (FORALL (|brokenObj<80>| |s2<15>|) (AND (IMPLIES (AND (NEQ |s2<15>| null) (NEQ |s2<15>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<15>| |brokenObj<80>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>|) T_boolean)))) (FORALL (|brokenObj<80>| |s2<15>|) (PATS (|org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>|)) (AND (IMPLIES (AND (NEQ |s2<15>| null) (NEQ |s2<15>| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>| )) (EQ |@true| ( |org.jmlspecs.models.JMLValueSequence.isSubsequence.1121.4| |s2<15>| |brokenObj<80>| )))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.isSupersequence.1189.4| |brokenObj<80>| |s2<15>|) T_boolean)))) (FORALL (|brokenObj<81>|) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) T_int)))) (FORALL (|brokenObj<81>|) (PATS (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|)) (AND (IMPLIES (<= (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|) |MAX_VALUE:118..|) (EQ (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) (|org.jmlspecs.models.JMLValueSequence.size.612.26| |brokenObj<81>|))) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.int_size.633.4| |brokenObj<81>|) T_int)))) (FORALL (|brokenObj<82>| |s2<16>|) (AND (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null)) (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null) (FORALL (|e:181.737.34|) (IMPLIES (AND (EQ |@true| (is |e:181.737.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.737.34| alloc)) (NEQ |e:181.737.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |e:181.737.34| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<82>| |e:181.737.34| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<16>| |e:181.737.34| ))))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<82>| |s2<16>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|)) (AND (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null)) (IMPLIES (AND (NEQ |s2<16>| null) (NEQ |s2<16>| null)) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) null) (FORALL (|e:181.737.34|) (IMPLIES (AND (EQ |@true| (is |e:181.737.34| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.737.34| alloc)) (NEQ |e:181.737.34| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |e:181.737.34| )) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<82>| |e:181.737.34| )) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |s2<16>| |e:181.737.34| ))))))))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.difference.734.4| |brokenObj<82>| |s2<16>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<83>|) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<83>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) T_int)))) (FORALL (|brokenObj<83>|) (PATS (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|)) (AND (EQ (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) (|org.jmlspecs.models.JMLListEqualsNode.length.398.26| |brokenObj<83>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLListEqualsNode.int_length.424.4| |brokenObj<83>|) T_int)))) (FORALL (|brokenObj<84>| |n<6>|) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (IMPLIES (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|) |n<6>|)) (FORALL (|i:38.1515.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1515.35| T_bigint)) (<= |n<6>| |i:38.1515.35|) (< |i:38.1515.35| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<84>| |n<6>|) (PATS (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|)) (AND (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (IMPLIES (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|)) (- (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|) |n<6>|)) (FORALL (|i:38.1515.35|) (IMPLIES (AND (EQ |@true| (is |i:38.1515.35| T_bigint)) (<= |n<6>| |i:38.1515.35|) (< |i:38.1515.35| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (OR (AND (NEQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ |@true| ( |org.jmlspecs.models.JMLType.equals.52.4| |state:98.17<1>| (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) ))) (AND (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.502.4| (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) (cast (- |i:38.1515.35| |n<6>|) T_int)) null) (EQ (|org.jmlspecs.models.JMLValueSequence.itemAt.477.17| |brokenObj<84>| |i:38.1515.35|) null))))))) (IMPLIES (AND (NOT (AND (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|)))) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|))) (NEQ (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) null)) (<= 0 |n<6>|) (<= |n<6>| (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<84>|)) (EQ |@true| (is (|org.jmlspecs.models.JMLValueSequence.removePrefix.1512.4| |brokenObj<84>| |n<6>|) |T_org.jmlspecs.models.JMLValueSequence|)))) (FORALL (|brokenObj<85>| |elem<3>|) (AND (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) null)) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) null) (FORALL (|e:181.600.29|) (IMPLIES (AND (EQ |@true| (is |e:181.600.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.600.29| alloc)) (NEQ |e:181.600.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) |e:181.600.29| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |e:181.600.29| )) (AND (EQ |e:181.600.29| null) (EQ |elem<3>| null)) (AND (NEQ |e:181.600.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |e:181.600.29| |elem<3>| ))))))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<85>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) |elem<3>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|)) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) 0 1))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) null)) (IMPLIES (EQ |elem<3>| null) (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|)))) (IMPLIES (NEQ |elem<3>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|))) (EQ |@true| (select |containsNull:39.52.32| |brokenObj<85>|)))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<85>| |elem<3>|) (PATS (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|)) (AND (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) null)) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (AND (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) null) (FORALL (|e:181.600.29|) (IMPLIES (AND (EQ |@true| (is |e:181.600.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e:181.600.29| alloc)) (NEQ |e:181.600.29| null)) (IFF (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) |e:181.600.29| )) (OR (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |e:181.600.29| )) (AND (EQ |e:181.600.29| null) (EQ |elem<3>| null)) (AND (NEQ |e:181.600.29| null) (EQ |@true| ( |java.lang.Object.equals.89.4| |state:98.17<1>| |e:181.600.29| |elem<3>| ))))))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.isSubset.476.4| |brokenObj<85>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) |elem<3>| )) (EQ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|)) (+ (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) (termConditional (|org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) 0 1))))) (IMPLIES (OR (< (|org.jmlspecs.models.JMLEqualsSet.int_size.458.4| |brokenObj<85>|) |MAX_VALUE:118..|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<85>| |elem<3>| ))) (NEQ (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) null)) (IMPLIES (EQ |elem<3>| null) (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|)))) (IMPLIES (NEQ |elem<3>| null) (IFF (EQ |@true| (select |containsNull:39.52.32| (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|))) (EQ |@true| (select |containsNull:39.52.32| |brokenObj<85>|)))) (EQ |@true| (is (|org.jmlspecs.models.JMLEqualsSet.insert.596.4| |state:98.17<1>| |brokenObj<85>| |elem<3>|) |T_org.jmlspecs.models.JMLEqualsSet|)))) (FORALL (|brokenObj<183>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<183>|) |IT:32.46.54|)) (FORALL (|brokenObj<184>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<184>|) (typeof |brokenObj<184>|))) (FORALL (|brokenObj<185>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<185>|) |IT:32.46.54|)) (FORALL (|brokenObj<186>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<186>|) (typeof |brokenObj<186>|))) (FORALL (|brokenObj<187>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<187>|) |IT:32.46.54|)) (FORALL (|brokenObj<188>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<188>|) (typeof |brokenObj<188>|))) (FORALL (|brokenObj<189>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<189>|) |IT:32.46.54|)) (FORALL (|brokenObj<190>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<190>|) (typeof |brokenObj<190>|))) (FORALL (|brokenObj<191>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<191>|) |IT:32.46.54|)) (FORALL (|brokenObj<192>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<192>|) (typeof |brokenObj<192>|))) (FORALL (|brokenObj<193>|) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<193>|) (|org.jmlspecs.models.JMLValueSequence.bigIntegerToBigint.2478.33| (select |_length:38.194.31| |brokenObj<193>|)))) (FORALL (|brokenObj<194>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<194>|) |IT:32.46.54|)) (FORALL (|brokenObj<195>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<195>|) (typeof |brokenObj<195>|))) (FORALL (|brokenObj<196>|) (EQ (|java.lang.Throwable#_message| |state:98.17<1>| |brokenObj<196>|) (|java.lang.Throwable.getMessage.73.4| |state:98.17<1>| |brokenObj<196>|))) (FORALL (|brokenObj<197>|) (EQ (|java.lang.Throwable#_cause| |state:98.17<1>| |brokenObj<197>|) (|java.lang.Throwable.getCause.83.4| |state:98.17<1>| |brokenObj<197>|))) (FORALL (|brokenObj<198>|) (IFF (EQ |@true| ( |java.lang.Throwable#causeKnown| |state:98.17<1>| |brokenObj<198>| )) (NEQ (|java.lang.Throwable.getCause.83.4| |state:98.17<1>| |brokenObj<198>|) null))) (FORALL (|brokenObj<199>|) (EQ (|java.lang.Throwable#_stackTrace| |state:98.17<1>| |brokenObj<199>|) (|java.lang.Throwable.getStackTrace.129.4| |state:98.17<1>| |brokenObj<199>|))) (FORALL (|brokenObj<200>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<200>|) |IT:32.46.54|)) (FORALL (|brokenObj<201>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<201>|) (typeof |brokenObj<201>|))) (FORALL (|brokenObj<202>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<202>|) |IT:32.46.54|)) (FORALL (|brokenObj<203>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<203>|) (typeof |brokenObj<203>|))) (FORALL (|brokenObj<204>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<204>|) |IT:32.46.54|)) (FORALL (|brokenObj<205>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<205>|) (typeof |brokenObj<205>|))) (FORALL (|brokenObj<206>|) (EQ (|java.lang.Integer#theInteger| |state:98.17<1>| |brokenObj<206>|) (|java.lang.Integer.intValue.329.4| |brokenObj<206>|))) (FORALL (|brokenObj<207>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<207>|) |IT:32.46.54|)) (FORALL (|brokenObj<208>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<208>|) (typeof |brokenObj<208>|))) (FORALL (|brokenObj<209>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<209>|) |IT:32.46.54|)) (FORALL (|brokenObj<210>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<210>|) (typeof |brokenObj<210>|))) (FORALL (|brokenObj<211>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<211>|) |IT:32.46.54|)) (FORALL (|brokenObj<212>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<212>|) (typeof |brokenObj<212>|))) (FORALL (|brokenObj<213>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<213>|) |IT:32.46.54|)) (FORALL (|brokenObj<214>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<214>|) (typeof |brokenObj<214>|))) (FORALL (|brokenObj<215>|) (EQ (|java.lang.Character#ch_| |state:98.17<1>| |brokenObj<215>|) (|java.lang.Character.charValue.210.4| |brokenObj<215>|))) (FORALL (|brokenObj<216>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<216>|) |IT:32.46.54|)) (FORALL (|brokenObj<217>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<217>|) (typeof |brokenObj<217>|))) (FORALL (|brokenObj<218>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<218>|) |IT:32.46.54|)) (FORALL (|brokenObj<219>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<219>|) (typeof |brokenObj<219>|))) (FORALL (|brokenObj<220>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<220>|) |IT:32.46.54|)) (FORALL (|brokenObj<221>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<221>|) (typeof |brokenObj<221>|))) (FORALL (|brokenObj<222>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<222>|) |IT:32.46.54|)) (FORALL (|brokenObj<223>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<223>|) (typeof |brokenObj<223>|))) (FORALL (|brokenObj<224>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<224>|) |IT:32.46.54|)) (FORALL (|brokenObj<225>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<225>|) (typeof |brokenObj<225>|))) (FORALL (|brokenObj<226>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<226>|) |IT:32.46.54|)) (FORALL (|brokenObj<227>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<227>|) (typeof |brokenObj<227>|))) (FORALL (|brokenObj<228>|) (EQ (|java.lang.Throwable#_message| |state:98.17<1>| |brokenObj<228>|) (|java.lang.Throwable.getMessage.73.4| |state:98.17<1>| |brokenObj<228>|))) (FORALL (|brokenObj<229>|) (EQ (|java.lang.Throwable#_cause| |state:98.17<1>| |brokenObj<229>|) (|java.lang.Throwable.getCause.83.4| |state:98.17<1>| |brokenObj<229>|))) (FORALL (|brokenObj<230>|) (IFF (EQ |@true| ( |java.lang.Throwable#causeKnown| |state:98.17<1>| |brokenObj<230>| )) (NEQ (|java.lang.Throwable.getCause.83.4| |state:98.17<1>| |brokenObj<230>|) null))) (FORALL (|brokenObj<231>|) (EQ (|java.lang.Throwable#_stackTrace| |state:98.17<1>| |brokenObj<231>|) (|java.lang.Throwable.getStackTrace.129.4| |state:98.17<1>| |brokenObj<231>|))) (FORALL (|brokenObj<232>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<232>|) |IT:32.46.54|)) (FORALL (|brokenObj<233>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<233>|) (typeof |brokenObj<233>|))) (FORALL (|brokenObj<234>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<234>|) |IT:32.46.54|)) (FORALL (|brokenObj<235>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<235>|) (typeof |brokenObj<235>|))) (FORALL (|brokenObj<236>|) (EQ (|org.jmlspecs.models.JMLChar#theChar| |state:98.17<1>| |brokenObj<236>|) (select |value:47.45.25| |brokenObj<236>|))) (FORALL (|brokenObj<237>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<237>|) |IT:32.46.54|)) (FORALL (|brokenObj<238>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<238>|) (typeof |brokenObj<238>|))) (FORALL (|brokenObj<239>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<239>|) |IT:32.46.54|)) (FORALL (|brokenObj<240>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<240>|) (typeof |brokenObj<240>|))) (FORALL (|brokenObj<241>|) (EQ (|java.lang.Object#objectState| |state:98.17<1>| |brokenObj<241>|) |IT:32.46.54|)) (FORALL (|brokenObj<242>|) (EQ (|java.lang.Object#_getClass| |state:98.17<1>| |brokenObj<242>|) (typeof |brokenObj<242>|))) (OR (NOT (LBLNEG |Exception@103.2| (EQ |ecReturn| |ecReturn|))) (AND (LBLNEG |Exception@103.2| (EQ |ecReturn| |ecReturn|)) (IMPLIES (EQ |ecReturn| |ecReturn|) (EQ (|sos.koa.District.number.108.2| |state:98.17<1>| this) 0)) (IMPLIES (EQ |ecReturn| |ecReturn|) (EQ |@true| ( |java.lang.String.equals.320.4| |state:98.17<1>| (|sos.koa.District.name.121.2| |state:98.17<1>| this) |S_91.29| ))) (IMPLIES (EQ |ecReturn| |ecReturn|) (EQ (|sos.koa.District.kiesKring.134.2| |state:98.17<1>| this) null)) (NOT (AND (EQ |ecReturn| |ecThrow|) (<: (typeof XRES) |T_java.lang.Exception|))) (OR (NOT (LBLNEG |Invariant:45.6@103.2| (FORALL (|brokenObj<91>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<91>| |T_sos.koa.District|)) (EQ |@true| (isAllocated |brokenObj<91>| alloc)) (NEQ |brokenObj<91>| null)) (<= (|java.lang.String.length.225.4| (select |my_name:97.4| |brokenObj<91>|)) |DISTRICT_NAME_MAX_LENGTH:32.20|))))) (NOT (LBLNEG |Invariant:38.202.18@103.2| (FORALL (|brokenObj<94>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<94>| |T_org.jmlspecs.models.JMLValueSequence|)) (EQ |@true| (isAllocated |brokenObj<94>| alloc)) (NEQ |brokenObj<94>| null) (NEQ (select |theSeq:38.188.37| |brokenObj<94>|) null)) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<94>|) (|org.jmlspecs.models.JMLListValueNode.length.398.26| (select |theSeq:38.188.37| |brokenObj<94>|))))))) (NOT (LBLNEG |Invariant:167.92.24@103.2| (FORALL (|brokenObj<95>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<95>| |T_java.util.Map|)) (EQ |@true| (isAllocated |brokenObj<95>| alloc)) (NEQ |brokenObj<95>| null)) (FORALL (|o1:167.93.29| |o2:167.93.33|) (IMPLIES (AND (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| |brokenObj<95>|) |o1:167.93.29| )) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| |brokenObj<95>|) |o2:167.93.33| )) (NEQ |o2:167.93.33| |o1:167.93.29|)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLNullSafe.equals.32.4| |state:98.17<1>| |o2:167.93.33| |o1:167.93.29| ))))))))) (NOT (LBLNEG |Invariant:38.203.19@103.2| (FORALL (|brokenObj<100>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<100>| |T_org.jmlspecs.models.JMLValueSequence|)) (EQ |@true| (isAllocated |brokenObj<100>| alloc)) (NEQ |brokenObj<100>| null)) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<100>|) (|org.jmlspecs.models.JMLValueSequence.length.623.26| |brokenObj<100>|)))))) (NOT (LBLNEG |Invariant:51.6@103.2| (FORALL (|brokenObj<104>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<104>| |T_sos.koa.District|)) (EQ |@true| (isAllocated |brokenObj<104>| alloc)) (NEQ |brokenObj<104>| null) (NEQ (select |my_kiesKring:98.4| |brokenObj<104>|) null)) (EQ (select |owner:8.45.28| |brokenObj<104>|) (select |my_kiesKring:98.4| |brokenObj<104>|)))))) (NOT (LBLNEG |Invariant:38.6@103.2| (FORALL (|brokenObj<105>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<105>| |T_sos.koa.District|)) (EQ |@true| (isAllocated |brokenObj<105>| alloc)) (NEQ |brokenObj<105>| null)) (AND (<= 0 (select |my_number:96.4| |brokenObj<105>|)) (<= (select |my_number:96.4| |brokenObj<105>|) |MAX_DISTRICTS_PER_KIESKRING:15.48.19|)))))) (NOT (LBLNEG |Invariant:167.88.24@103.2| (FORALL (|brokenObj<109>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<109>| |T_java.util.Map|)) (EQ |@true| (isAllocated |brokenObj<109>| alloc)) (NEQ |brokenObj<109>| null)) (FORALL (|o:167.89.29|) (IMPLIES (AND (EQ |@true| (is |o:167.89.29| |T_java.lang.Object|)) (EQ |@true| (isAllocated |o:167.89.29| alloc)) (NEQ |o:167.89.29| null) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| (|java.util.Map#theMap| |state:98.17<1>| |brokenObj<109>|) |o:167.89.29| ))) (AND (EQ |@true| (is |o:167.89.29| |T_java.util.Map$Entry|)) (NEQ |o:167.89.29| null)))))))) (NOT (LBLNEG |Invariant:181.161.15@103.2| (FORALL (|brokenObj<115>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<115>| |T_org.jmlspecs.models.JMLEqualsSet|)) (EQ |@true| (isAllocated |brokenObj<115>| alloc)) (NEQ |brokenObj<115>| null)) (IFF (EQ |@true| (select |containsNull:39.52.32| |brokenObj<115>|)) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.has.368.4| |state:98.17<1>| |brokenObj<115>| null ))))))) (NOT (LBLNEG |Invariant:38.199.18@103.2| (FORALL (|brokenObj<118>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<118>| |T_org.jmlspecs.models.JMLValueSequence|)) (EQ |@true| (isAllocated |brokenObj<118>| alloc)) (NEQ |brokenObj<118>| null)) (IFF (EQ (select |theSeq:38.188.37| |brokenObj<118>|) null) (EQ (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<118>|) 0)))))) (NOT (LBLNEG |Invariant:185.45.15@103.2| (FORALL (|brokenObj<128>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<128>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (EQ |@true| (isAllocated |brokenObj<128>| alloc)) (NEQ |brokenObj<128>| null)) (FORALL (|l2:185.45.52| |e1:185.46.43| |e2:185.46.47| |n:185.47.45|) (IMPLIES (AND (EQ |@true| (is |l2:185.45.52| |T_org.jmlspecs.models.JMLListEqualsNode|)) (EQ |@true| (isAllocated |l2:185.45.52| alloc)) (NEQ |l2:185.45.52| null) (EQ |@true| (is |e1:185.46.43| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e1:185.46.43| alloc)) (NEQ |e1:185.46.43| null) (EQ |@true| (is |e2:185.46.47| |T_java.lang.Object|)) (EQ |@true| (isAllocated |e2:185.46.47| alloc)) (NEQ |e2:185.46.47| null) (EQ |@true| (is |n:185.47.45| T_bigint))) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.equational_theory.90.24| |state:98.17<1>| |brokenObj<128>| |brokenObj<128>| |l2:185.45.52| |e1:185.46.43| |e2:185.46.47| |n:185.47.45| )))))))) (NOT (LBLNEG |Invariant:38.200.18@103.2| (FORALL (|brokenObj<129>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<129>| |T_org.jmlspecs.models.JMLValueSequence|)) (EQ |@true| (isAllocated |brokenObj<129>| alloc)) (NEQ |brokenObj<129>| null)) (>= (|org.jmlspecs.models.JMLValueSequence#length| |state:98.17<1>| |brokenObj<129>|) 0))))) (NOT (LBLNEG |Invariant:34.46.6@103.2| (FORALL (|brokenObj<130>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<130>| |T_sos.koa.KiesLijst|)) (EQ |@true| (isAllocated |brokenObj<130>| alloc)) (NEQ |brokenObj<130>| null)) (AND (<= 0 (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<130>|)) (<= (|sos.koa.KiesLijst.candidateCount.256.2| |state:98.17<1>| |brokenObj<130>|) |MAX_CANDIDATES_PER_KIESLIJST:34.45.20|)))))) (NOT (LBLNEG |Invariant:181.178.18@103.2| (FORALL (|brokenObj<139>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<139>| |T_org.jmlspecs.models.JMLEqualsSet|)) (EQ |@true| (isAllocated |brokenObj<139>| alloc)) (NEQ |brokenObj<139>| null) (NEQ (select |the_list:181.166.38| |brokenObj<139>|) null) (NEQ (select |next:185.101.35| (select |the_list:181.166.38| |brokenObj<139>|)) null)) (NOT (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| (select |next:185.101.35| (select |the_list:181.166.38| |brokenObj<139>|)) (select |val:185.97.24| (select |the_list:181.166.38| |brokenObj<139>|)) ))))))) (NOT (LBLNEG |Invariant:185.128.15@103.2| (FORALL (|brokenObj<155>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<155>| |T_org.jmlspecs.models.JMLListEqualsNode|)) (EQ |@true| (isAllocated |brokenObj<155>| alloc)) (NEQ |brokenObj<155>| null)) (IFF (EQ |@true| (select |containsNull:185.124.29| |brokenObj<155>|)) (EQ |@true| ( |org.jmlspecs.models.JMLListEqualsNode.has.437.4| |state:98.17<1>| |brokenObj<155>| null ))))))) (NOT (LBLNEG |Invariant:33.338.6@103.2| (FORALL (|brokenObj<170>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<170>| |T_sos.koa.CandidateList|)) (EQ |@true| (isAllocated |brokenObj<170>| alloc)) (NEQ |brokenObj<170>| null)) (FORALL (|i:33.338.29|) (EQ (|sos.koa.CandidateList.getCandidate.374.2| |state:98.17<1>| |brokenObj<170>| |i:33.338.29|) (|sos.koa.CandidateList.getCandidate.341.2| |state:98.17<1>| |brokenObj<170>| (|java.lang.Integer.toString.249.4| |i:33.338.29|)))))))) (NOT (LBLNEG |Invariant:181.55.15@103.2| (FORALL (|brokenObj<176>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<176>| |T_org.jmlspecs.models.JMLEqualsSet|)) (EQ |@true| (isAllocated |brokenObj<176>| alloc)) (NEQ |brokenObj<176>| null)) (FORALL (|s2:181.55.47|) (IMPLIES (AND (EQ |@true| (is |s2:181.55.47| |T_org.jmlspecs.models.JMLEqualsSet|)) (EQ |@true| (isAllocated |s2:181.55.47| alloc)) (NEQ |s2:181.55.47| null) (NEQ |s2:181.55.47| null)) (FORALL (|e1:181.56.43| |e2:181.56.47|) (EQ |@true| ( |org.jmlspecs.models.JMLEqualsSet.equational_theory.149.31| |state:98.17<1>| |brokenObj<176>| |s2:181.55.47| |e1:181.56.43| |e2:181.56.47| ))))))))) (NOT (LBLNEG |Invariant:33.39.6@103.2| (FORALL (|brokenObj<182>|) (IMPLIES (AND (EQ |@true| (is |brokenObj<182>| |T_sos.koa.CandidateList|)) (EQ |@true| (isAllocated |brokenObj<182>| alloc)) (NEQ |brokenObj<182>| null)) (<= (|java.util.Map.size.102.4| |state:98.17<1>| (select |my_kieskringen:33.37.55| |brokenObj<182>|)) |MAX_KIESKRINGEN_PER_CANDIDATE_LIST:33.30.20|)))))))))))))) (AND 
(DISTINCT |ecReturn| |1| |ecThrow|) (NEQ |S_117.50.41| null) (EQ (typeof |S_117.50.41|) |T_java.lang.String|) (NEQ |S_91.29| null) (EQ (typeof |S_91.29|) |T_java.lang.String|) (NEQ |S_117.43.41| null) (EQ (typeof |S_117.43.41|) |T_java.lang.String|)))
[calling Simplify on VC stream]
