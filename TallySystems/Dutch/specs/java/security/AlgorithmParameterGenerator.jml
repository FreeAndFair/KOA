/*
 * @(#)AlgorithmParameterGenerator.jml
 *
 * JML specification Copyright 2004 SoS Group, University of Nijmegen
 *
 * @version $Id$
 *
 * @author Martijn Oostdijk (martijno@cs.kun.nl)
 */

package java.security;

import java.security.spec.AlgorithmParameterSpec;

public class AlgorithmParameterGenerator
{
   // TODO: perhaps add a model variable _state. -- MO

   /*@ public behavior
     @    requires paramGenSpi != null;
     @    requires provider != null;
     @    requires algorithm != null;
     @    ensures getProvider().equals(provider);
     @    ensures getAlgorithm().equals(algorithm);
    */
   protected AlgorithmParameterGenerator
   (AlgorithmParameterGeneratorSpi paramGenSpi, Provider provider,
    String algorithm);

   public final /*@ pure non_null */ String getAlgorithm();

   /*@ public behavior
     @    requires algorithm != null;
     @    ensures \result.getAlgorithm().equals(algorithm);
     @    signals(NoSuchAlgorithmException) true;
    */
   public static AlgorithmParameterGenerator getInstance(String algorithm)
   throws NoSuchAlgorithmException;

   /*@ public behavior
     @    requires algorithm != null;
     @    requires provider != null;
     @    ensures \result.getAlgorithm().equals(algorithm);
     @    signals(NoSuchAlgorithmException) true;
     @    signals(NoSuchProviderException) true;
    */
   public static AlgorithmParameterGenerator getInstance(String algorithm,
                                                         String provider)
   throws NoSuchAlgorithmException, NoSuchProviderException;

   /*@ public behavior
     @    requires algorithm != null;
     @    requires provider != null;
     @    ensures \result.getAlgorithm().equals(algorithm);
     @    ensures \result.getProvider().equals(provider);
     @    signals(NoSuchAlgorithmException) true;
    */
   public static AlgorithmParameterGenerator getInstance(String algorithm,
                                                         Provider provider)
   throws NoSuchAlgorithmException;

   public final /*@ pure non_null */ Provider getProvider();

   /*@ public behavior
     @    requires size >= 0;
    */
   public final void init(int size);

   /*@ public behavior
     @    requires size >= 0;
     @    requires random != null;
    */
   public final void init(int size, SecureRandom random);

   /*@ public behavior
     @    requires genParamSpec != null;
     @    signals(InvalidAlgorithmParameterException) true;
    */
   public final void init(AlgorithmParameterSpec genParamSpec)
   throws InvalidAlgorithmParameterException;

   /*@ public behavior
     @    requires genParamSpec != null;
     @    requires random != null;
     @    signals(InvalidAlgorithmParameterException) true;
    */
   public final void init(AlgorithmParameterSpec genParamSpec,
                          SecureRandom random)
   throws InvalidAlgorithmParameterException;

   /*@ public behavior
     @    ensures \result != null;
    */
   public final AlgorithmParameters generateParameters();
}

