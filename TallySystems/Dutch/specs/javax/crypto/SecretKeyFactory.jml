/*
 * JML specification Copyright 2004 SoS Group, University of Nijmegen
 *
 * @author Joe Kiniry <kiniry@cs.kun.nl>
 * @version $Id$
 */

package javax.crypto;

import java.security.*;
import java.security.spec.*;

public class SecretKeyFactory
{
  //@ non_null model Provider _provider;

  //@ non_null model String _algorithm;

  //@ non_null model SecretKeyFactorySpi _keyFacSpi;

  /*@ protected normal_behavior
    @   requires keyFacSpi != null;
    @   requires provider != null;
    @   requires algorithm != null;
    @   ensures _provider == provider;
    @   ensures _algorithm.equals(algorithm);
    @   ensures _keyFacSpi == keyFacSpi;
    @*/
  /*@ pure @*/ protected SecretKeyFactory(SecretKeyFactorySpi keyFacSpi,
                                          Provider provider,
                                          String algorithm);

  public static final SecretKeyFactory getInstance(String algorithm) 
    throws NoSuchAlgorithmException;

  /*@ public exceptional_behavior
    @   requires provider == null;
    @   signals (IllegalArgumentException) true;
    @*/
  public static final SecretKeyFactory getInstance(String algorithm,
                                                   String provider)
    throws NoSuchAlgorithmException, NoSuchProviderException;

  /*@ public exceptional_behavior
    @   requires provider == null;
    @   signals (IllegalArgumentException) true;
    @*/
  public static final SecretKeyFactory getInstance(String algorithm,
                                                   Provider provider)
    throws NoSuchAlgorithmException;

  /*@ public normal_behavior
    @   ensures \result == _provider;
    @*/
  public /*@ pure @*/ final Provider getProvider();

  /*@ public normal_behavior
    @   ensures \result == _algorithm;
    @*/
  public /*@ pure @*/ final String getAlgorithm();

  public final SecretKey generateSecret(KeySpec keySpec)
    throws InvalidKeySpecException;

  public final KeySpec getKeySpec(SecretKey key, Class keySpec)
    throws InvalidKeySpecException;

  public final SecretKey translateKey(SecretKey key)
    throws InvalidKeyException;
}
